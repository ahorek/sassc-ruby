==17882== Memcheck, a memory error detector
==17882== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==17882== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==17882== Command: ruby -S rake assets:precompile
==17882== Parent PID: 8629
==17882== 
==17882== Warning: client switching stacks?  SP change: 0x1fff000500 --> 0x1ffe8020d0
==17882==          to suppress, use: --max-stackframe=8381488 or greater
==17882== Invalid write of size 1
==17882==    at 0x5054495: reserve_stack (thread_pthread.c:868)
==17882==    by 0x505905F: ruby_init_stack (thread_pthread.c:903)
==17882==    by 0x400900: main (main.c:40)
==17882==  Address 0x1ffe8020e0 is on thread 1's stack
==17882==  in frame #0, created by reserve_stack (thread_pthread.c:823)
==17882== 
==17882== Warning: client switching stacks?  SP change: 0x1ffe8020d0 --> 0x1fff000620
==17882==          to suppress, use: --max-stackframe=8381776 or greater
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17944: is_pointer_to_heap (gc.c:2119)
==17882==    by 0x4F17944: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17944: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17952: is_pointer_to_heap (gc.c:2119)
==17882==    by 0x4F17952: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17952: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A4B: is_pointer_to_heap (gc.c:2119)
==17882==    by 0x4F17A4B: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A4B: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A58: is_pointer_to_heap (gc.c:2119)
==17882==    by 0x4F17A58: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A58: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A73: is_pointer_to_heap (gc.c:2120)
==17882==    by 0x4F17A73: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A73: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17AB3: is_pointer_to_heap (gc.c:2128)
==17882==    by 0x4F17AB3: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17AB3: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A8F: is_pointer_to_heap (gc.c:2129)
==17882==    by 0x4F17A8F: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A8F: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17AD8: gc_mark_maybe (gc.c:4437)
==17882==    by 0x4F17AD8: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B0: RVALUE_MARKED (gc.c:1120)
==17882==    by 0x4F174B0: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B0: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B3: RVALUE_MARKED (gc.c:1120)
==17882==    by 0x4F174B3: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B3: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4E3D81F: ??? (in /usr/local/rvm/rubies/ruby-head-opt/lib/libruby.so.2.6.3)
==17882==    by 0x1FFEFFCB0F: ???
==17882==    by 0x1B687FE: ???
==17882==    by 0x1FFEFFCAFF: ???
==17882==    by 0x37: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174D3: gc_mark_set (gc.c:4456)
==17882==    by 0x4F174D3: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174D7: gc_mark_ptr (gc.c:4575)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174E0: gc_mark_ptr (gc.c:4575)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174E2: gc_mark_ptr (gc.c:4575)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174EC: gc_aging (gc.c:4551)
==17882==    by 0x4F174EC: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4E3D81F: ??? (in /usr/local/rvm/rubies/ruby-head-opt/lib/libruby.so.2.6.3)
==17882==    by 0x1FFEFFCB0F: ???
==17882==    by 0x1B687FE: ???
==17882==    by 0x1FFEFFCAFF: ???
==17882==    by 0x37: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174F4: gc_aging (gc.c:4551)
==17882==    by 0x4F174F4: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174FA: RVALUE_OLD_P_RAW (gc.c:1156)
==17882==    by 0x4F174FA: RVALUE_OLD_P (gc.c:1163)
==17882==    by 0x4F174FA: gc_aging (gc.c:4552)
==17882==    by 0x4F174FA: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17571: RVALUE_FLAGS_AGE_SET (gc.c:1199)
==17882==    by 0x4F17571: RVALUE_AGE_INC (gc.c:1215)
==17882==    by 0x4F17571: gc_aging (gc.c:4554)
==17882==    by 0x4F17571: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17577: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1178)
==17882==    by 0x4F17577: gc_aging (gc.c:4558)
==17882==    by 0x4F17577: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x507C8D1: transient_heap_ptr (transient_heap.c:567)
==17882==    by 0x507C8D1: rb_transient_heap_promote (transient_heap.c:627)
==17882==    by 0x4F1758D: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1180)
==17882==    by 0x4F1758D: gc_aging (gc.c:4558)
==17882==    by 0x4F1758D: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17ACE: is_pointer_to_heap (gc.c:2128)
==17882==    by 0x4F17ACE: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17ACE: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17E98: gc_mark (gc.c:4588)
==17882==    by 0x4F17E98: gc_mark_children (gc.c:4708)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F17763: gc_mark (gc.c:4588)
==17882==    by 0x4F17763: mark_method_entry_i (gc.c:4326)
==17882==    by 0x505415E: rb_id_table_foreach_values (id_table.c:292)
==17882==    by 0x4F182B7: mark_m_tbl (gc.c:4334)
==17882==    by 0x4F182B7: gc_mark_children (gc.c:4713)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17763: gc_mark (gc.c:4588)
==17882==    by 0x4F17763: mark_method_entry_i (gc.c:4326)
==17882==    by 0x505415E: rb_id_table_foreach_values (id_table.c:292)
==17882==    by 0x4F182B7: mark_m_tbl (gc.c:4334)
==17882==    by 0x4F182B7: gc_mark_children (gc.c:4713)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F1778D: gc_mark (gc.c:4588)
==17882==    by 0x4F1778D: mark_entry (gc.c:4210)
==17882==    by 0x5022F17: st_general_foreach (st.c:1574)
==17882==    by 0x5022F17: st_foreach (st.c:1653)
==17882==    by 0x4F182E3: mark_tbl (gc.c:4218)
==17882==    by 0x4F182E3: gc_mark_children (gc.c:4715)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1778D: gc_mark (gc.c:4588)
==17882==    by 0x4F1778D: mark_entry (gc.c:4210)
==17882==    by 0x5022F17: st_general_foreach (st.c:1574)
==17882==    by 0x5022F17: st_foreach (st.c:1653)
==17882==    by 0x4F182E3: mark_tbl (gc.c:4218)
==17882==    by 0x4F182E3: gc_mark_children (gc.c:4715)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F17E98: gc_mark (gc.c:4588)
==17882==    by 0x4F17E98: gc_mark_children (gc.c:4708)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F183FC: gc_mark (gc.c:4588)
==17882==    by 0x4F183FC: mark_method_entry (gc.c:4307)
==17882==    by 0x4F183FC: gc_mark_imemo (gc.c:4657)
==17882==    by 0x4F183FC: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F183FC: gc_mark (gc.c:4588)
==17882==    by 0x4F183FC: mark_method_entry (gc.c:4307)
==17882==    by 0x4F183FC: gc_mark_imemo (gc.c:4657)
==17882==    by 0x4F183FC: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F17F5F: gc_mark_imemo (gc.c:4636)
==17882==    by 0x4F17F5F: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17F5F: gc_mark_imemo (gc.c:4636)
==17882==    by 0x4F17F5F: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F48112: rb_iseq_mark (iseq.c:230)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F48112: rb_iseq_mark (iseq.c:230)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F1838A: gc_mark (gc.c:4588)
==17882==    by 0x4F1838A: gc_mark_children (gc.c:4738)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1838A: gc_mark (gc.c:4588)
==17882==    by 0x4F1838A: gc_mark_children (gc.c:4738)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1A903: gc_mark_stacked_objects (gc.c:4871)
==17882==    by 0x4F1A903: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A903: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17D6B: RVALUE_OLD_P_RAW (gc.c:1156)
==17882==    by 0x4F17D6B: RVALUE_OLD_P (gc.c:1163)
==17882==    by 0x4F17D6B: gc_mark_set_parent (gc.c:4611)
==17882==    by 0x4F17D6B: gc_mark_children (gc.c:4687)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17D90: gc_mark_children (gc.c:4689)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17FE6: gc_mark (gc.c:4588)
==17882==    by 0x4F17FE6: mark_method_entry (gc.c:4286)
==17882==    by 0x4F17FE6: gc_mark_imemo (gc.c:4657)
==17882==    by 0x4F17FE6: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F18001: gc_mark (gc.c:4588)
==17882==    by 0x4F18001: mark_method_entry (gc.c:4287)
==17882==    by 0x4F18001: gc_mark_imemo (gc.c:4657)
==17882==    by 0x4F18001: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F178E6: gc_mark (gc.c:4588)
==17882==    by 0x4F178E6: mark_const_entry_i (gc.c:4344)
==17882==    by 0x505415E: rb_id_table_foreach_values (id_table.c:292)
==17882==    by 0x4F18303: mark_const_tbl (gc.c:4353)
==17882==    by 0x4F18303: gc_mark_children (gc.c:4716)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F178E6: gc_mark (gc.c:4588)
==17882==    by 0x4F178E6: mark_const_entry_i (gc.c:4344)
==17882==    by 0x505415E: rb_id_table_foreach_values (id_table.c:292)
==17882==    by 0x4F18303: mark_const_tbl (gc.c:4353)
==17882==    by 0x4F18303: gc_mark_children (gc.c:4716)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F18445: gc_mark (gc.c:4588)
==17882==    by 0x4F18445: mark_method_entry (gc.c:4300)
==17882==    by 0x4F18445: gc_mark_imemo (gc.c:4657)
==17882==    by 0x4F18445: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F18445: gc_mark (gc.c:4588)
==17882==    by 0x4F18445: mark_method_entry (gc.c:4300)
==17882==    by 0x4F18445: gc_mark_imemo (gc.c:4657)
==17882==    by 0x4F18445: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4FB7AB4: block_mark (proc.c:62)
==17882==    by 0x4FB7AB4: proc_mark (proc.c:81)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4FB7AB4: block_mark (proc.c:62)
==17882==    by 0x4FB7AB4: proc_mark (proc.c:81)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1808A: gc_mark (gc.c:4588)
==17882==    by 0x4F1808A: gc_mark_values (gc.c:4195)
==17882==    by 0x4F1808A: gc_mark_imemo (gc.c:4628)
==17882==    by 0x4F1808A: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F1808A: gc_mark (gc.c:4588)
==17882==    by 0x4F1808A: gc_mark_values (gc.c:4195)
==17882==    by 0x4F1808A: gc_mark_imemo (gc.c:4628)
==17882==    by 0x4F1808A: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F4838C: each_insn_value (iseq.c:209)
==17882==    by 0x4F4838C: iseq_extract_values (iseq.c:167)
==17882==    by 0x4F4838C: rb_iseq_each_value (iseq.c:202)
==17882==    by 0x4F4838C: rb_iseq_mark (iseq.c:223)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F4838C: each_insn_value (iseq.c:209)
==17882==    by 0x4F4838C: iseq_extract_values (iseq.c:167)
==17882==    by 0x4F4838C: rb_iseq_each_value (iseq.c:202)
==17882==    by 0x4F4838C: rb_iseq_mark (iseq.c:223)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F48100: rb_iseq_mark (iseq.c:228)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F48100: rb_iseq_mark (iseq.c:228)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F48109: rb_iseq_mark (iseq.c:229)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F48109: rb_iseq_mark (iseq.c:229)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F4826C: rb_iseq_mark (iseq.c:231)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F9612C: parser_mark (parse.y:10848)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F96135: parser_mark (parse.y:10849)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F9613E: parser_mark (parse.y:10850)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F96180: parser_mark (parse.y:10857)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F18180: gc_mark_children (gc.c:4792)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F48164: rb_iseq_mark (iseq.c:254)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172FF: gc_remember_unprotected (gc.c:4467)
==17882==    by 0x4F172FF: rgengc_check_relation.part.65 (gc.c:4494)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F178AE: gc_mark (gc.c:4588)
==17882==    by 0x4F178AE: mark_keyvalue (gc.c:4248)
==17882==    by 0x5022F17: st_general_foreach (st.c:1574)
==17882==    by 0x5022F17: st_foreach (st.c:1653)
==17882==    by 0x4F180C1: mark_hash (gc.c:4255)
==17882==    by 0x4F180C1: gc_mark_children (gc.c:4751)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1785A: gc_mark (gc.c:4588)
==17882==    by 0x4F1785A: gc_mark_values (gc.c:4195)
==17882==    by 0x4F1785A: rb_gc_mark_values (gc.c:4203)
==17882==    by 0x50986C0: rb_execution_context_mark (vm.c:2459)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50986EE: rb_execution_context_mark (vm.c:2465)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19A8F: gc_page_sweep (gc.c:3619)
==17882==    by 0x4F19A8F: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1DDFA: gc_sweep_rest (gc.c:3852)
==17882==    by 0x4F1DDFA: gc_rest (gc.c:6683)
==17882==    by 0x4F1DDFA: rb_gc_disable (gc.c:7568)
==17882==    by 0x507C227: transient_heap_evacuate (transient_heap.c:730)
==17882==    by 0x50BC2B2: rb_postponed_job_flush (vm_trace.c:1978)
==17882==    by 0x505D5A8: rb_threadptr_execute_interrupts (thread.c:2178)
==17882==    by 0x505D9B2: rb_vm_check_ints (vm_core.h:1813)
==17882==    by 0x505D9B2: unblock_function_set (thread.c:460)
==17882==    by 0x505D9B2: blocking_region_begin.constprop.74 (thread.c:1394)
==17882==    by 0x505E709: rb_thread_io_blocking_region (thread.c:1574)
==17882==    by 0x4F316A7: rb_read_internal (io.c:1043)
==17882==    by 0x4F316A7: io_fillbuf (io.c:2058)
==17882==    by 0x4F34B80: rb_io_getline_fast (io.c:3322)
==17882==    by 0x4F34B80: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19CC7: gc_page_sweep (gc.c:3657)
==17882==    by 0x4F19CC7: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1DDFA: gc_sweep_rest (gc.c:3852)
==17882==    by 0x4F1DDFA: gc_rest (gc.c:6683)
==17882==    by 0x4F1DDFA: rb_gc_disable (gc.c:7568)
==17882==    by 0x507C227: transient_heap_evacuate (transient_heap.c:730)
==17882==    by 0x50BC2B2: rb_postponed_job_flush (vm_trace.c:1978)
==17882==    by 0x505D5A8: rb_threadptr_execute_interrupts (thread.c:2178)
==17882==    by 0x505D9B2: rb_vm_check_ints (vm_core.h:1813)
==17882==    by 0x505D9B2: unblock_function_set (thread.c:460)
==17882==    by 0x505D9B2: blocking_region_begin.constprop.74 (thread.c:1394)
==17882==    by 0x505E709: rb_thread_io_blocking_region (thread.c:1574)
==17882==    by 0x4F316A7: rb_read_internal (io.c:1043)
==17882==    by 0x4F316A7: io_fillbuf (io.c:2058)
==17882==    by 0x4F34B80: rb_io_getline_fast (io.c:3322)
==17882==    by 0x4F34B80: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19AB3: gc_page_sweep (gc.c:3623)
==17882==    by 0x4F19AB3: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1DDFA: gc_sweep_rest (gc.c:3852)
==17882==    by 0x4F1DDFA: gc_rest (gc.c:6683)
==17882==    by 0x4F1DDFA: rb_gc_disable (gc.c:7568)
==17882==    by 0x507C227: transient_heap_evacuate (transient_heap.c:730)
==17882==    by 0x50BC2B2: rb_postponed_job_flush (vm_trace.c:1978)
==17882==    by 0x505D5A8: rb_threadptr_execute_interrupts (thread.c:2178)
==17882==    by 0x505D9B2: rb_vm_check_ints (vm_core.h:1813)
==17882==    by 0x505D9B2: unblock_function_set (thread.c:460)
==17882==    by 0x505D9B2: blocking_region_begin.constprop.74 (thread.c:1394)
==17882==    by 0x505E709: rb_thread_io_blocking_region (thread.c:1574)
==17882==    by 0x4F316A7: rb_read_internal (io.c:1043)
==17882==    by 0x4F316A7: io_fillbuf (io.c:2058)
==17882==    by 0x4F34B80: rb_io_getline_fast (io.c:3322)
==17882==    by 0x4F34B80: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1B024: rgengc_rememberset_mark (gc.c:6011)
==17882==    by 0x4F1B024: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B024: gc_marks (gc.c:5854)
==17882==    by 0x4F1B024: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4F2063B: each_value_i (hash.c:2698)
==17882==    by 0x4F21178: hash_foreach_iter (hash.c:1159)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1B037: rgengc_rememberset_mark (gc.c:6025)
==17882==    by 0x4F1B037: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B037: gc_marks (gc.c:5854)
==17882==    by 0x4F1B037: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4F2063B: each_value_i (hash.c:2698)
==17882==    by 0x4F21178: hash_foreach_iter (hash.c:1159)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17E98: gc_mark (gc.c:4588)
==17882==    by 0x4F17E98: gc_mark_children (gc.c:4708)
==17882==    by 0x4F1B04C: rgengc_rememberset_mark (gc.c:6021)
==17882==    by 0x4F1B04C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B04C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B04C: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1B050: rgengc_rememberset_mark (gc.c:6025)
==17882==    by 0x4F1B050: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B050: gc_marks (gc.c:5854)
==17882==    by 0x4F1B050: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4F2063B: each_value_i (hash.c:2698)
==17882==    by 0x4F21178: hash_foreach_iter (hash.c:1159)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1B03C: rgengc_rememberset_mark (gc.c:6015)
==17882==    by 0x4F1B03C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B03C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B03C: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4F2063B: each_value_i (hash.c:2698)
==17882==    by 0x4F21178: hash_foreach_iter (hash.c:1159)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17FE6: gc_mark (gc.c:4588)
==17882==    by 0x4F17FE6: mark_method_entry (gc.c:4286)
==17882==    by 0x4F17FE6: gc_mark_imemo (gc.c:4657)
==17882==    by 0x4F17FE6: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1B04C: rgengc_rememberset_mark (gc.c:6021)
==17882==    by 0x4F1B04C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B04C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B04C: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F18001: gc_mark (gc.c:4588)
==17882==    by 0x4F18001: mark_method_entry (gc.c:4287)
==17882==    by 0x4F18001: gc_mark_imemo (gc.c:4657)
==17882==    by 0x4F18001: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1B04C: rgengc_rememberset_mark (gc.c:6021)
==17882==    by 0x4F1B04C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B04C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B04C: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1796D: is_pointer_to_heap (gc.c:2120)
==17882==    by 0x4F1796D: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F1796D: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F179B4: is_pointer_to_heap (gc.c:2128)
==17882==    by 0x4F179B4: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F179B4: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F179CF: is_pointer_to_heap (gc.c:2128)
==17882==    by 0x4F179CF: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F179CF: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1798F: is_pointer_to_heap (gc.c:2129)
==17882==    by 0x4F1798F: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F1798F: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F179D8: gc_mark_maybe (gc.c:4437)
==17882==    by 0x4F179D8: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B0: RVALUE_MARKED (gc.c:1120)
==17882==    by 0x4F174B0: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B0: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B3: RVALUE_MARKED (gc.c:1120)
==17882==    by 0x4F174B3: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B3: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x66BFCC7: ???
==17882==    by 0x6705CEF: ???
==17882==    by 0x66BFCC7: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x66BFCC7: ???
==17882==    by 0x6705CEF: ???
==17882==    by 0x66BFCC7: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17895: gc_mark (gc.c:4588)
==17882==    by 0x4F17895: mark_keyvalue (gc.c:4247)
==17882==    by 0x5022F17: st_general_foreach (st.c:1574)
==17882==    by 0x5022F17: st_foreach (st.c:1653)
==17882==    by 0x4F180C1: mark_hash (gc.c:4255)
==17882==    by 0x4F180C1: gc_mark_children (gc.c:4751)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x50302EA: fstr_update_callback (string.c:275)
==17882==    by 0x5022C6B: st_update (st.c:1510)
==17882==    by 0x5029D18: register_fstring (string.c:344)
==17882==    by 0x502DF41: rb_fstring_new (string.c:389)
==17882==    by 0x4F50CE3: rb_load_internal0 (load.c:607)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19A8F: gc_page_sweep (gc.c:3619)
==17882==    by 0x4F19A8F: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1CC48: gc_sweep_continue (gc.c:3868)
==17882==    by 0x4F1CC48: heap_prepare (gc.c:1730)
==17882==    by 0x4F1CC48: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4FA47FF: new_args_tail (parse.y:10058)
==17882==    by 0x4FB173C: ruby_yyparse (parse.y:3916)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19AB3: gc_page_sweep (gc.c:3623)
==17882==    by 0x4F19AB3: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1CC48: gc_sweep_continue (gc.c:3868)
==17882==    by 0x4F1CC48: heap_prepare (gc.c:1730)
==17882==    by 0x4F1CC48: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4FA47FF: new_args_tail (parse.y:10058)
==17882==    by 0x4FB173C: ruby_yyparse (parse.y:3916)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19CC7: gc_page_sweep (gc.c:3657)
==17882==    by 0x4F19CC7: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1CC48: gc_sweep_continue (gc.c:3868)
==17882==    by 0x4F1CC48: heap_prepare (gc.c:1730)
==17882==    by 0x4F1CC48: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4FA47FF: new_args_tail (parse.y:10058)
==17882==    by 0x4FB173C: ruby_yyparse (parse.y:3916)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19A8F: gc_page_sweep (gc.c:3619)
==17882==    by 0x4F19A8F: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1CC48: gc_sweep_continue (gc.c:3868)
==17882==    by 0x4F1CC48: heap_prepare (gc.c:1730)
==17882==    by 0x4F1CC48: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19CC7: gc_page_sweep (gc.c:3657)
==17882==    by 0x4F19CC7: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1CC48: gc_sweep_continue (gc.c:3868)
==17882==    by 0x4F1CC48: heap_prepare (gc.c:1730)
==17882==    by 0x4F1CC48: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19AB3: gc_page_sweep (gc.c:3623)
==17882==    by 0x4F19AB3: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1CC48: gc_sweep_continue (gc.c:3868)
==17882==    by 0x4F1CC48: heap_prepare (gc.c:1730)
==17882==    by 0x4F1CC48: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19A8F: gc_page_sweep (gc.c:3619)
==17882==    by 0x4F19A8F: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1CC48: gc_sweep_continue (gc.c:3868)
==17882==    by 0x4F1CC48: heap_prepare (gc.c:1730)
==17882==    by 0x4F1CC48: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6E66E: ary_alloc (array.c:647)
==17882==    by 0x4E6E66E: ary_new (array.c:676)
==17882==    by 0x4E6E66E: rb_ary_tmp_new (array.c:742)
==17882==    by 0x4F48F11: prepare_iseq_build (iseq.c:467)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882== 
==17882== 
==17882== More than 100 errors detected.  Subsequent errors
==17882== will still be recorded, but in less detail than before.
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1B04C: rgengc_rememberset_mark (gc.c:6021)
==17882==    by 0x4F1B04C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B04C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B04C: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5082A75: autoload_c_mark (variable.c:2049)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19A8F: gc_page_sweep (gc.c:3619)
==17882==    by 0x4F19A8F: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1A677: gc_sweep (gc.c:3896)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19AB3: gc_page_sweep (gc.c:3623)
==17882==    by 0x4F19AB3: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1A677: gc_sweep (gc.c:3896)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19CC7: gc_page_sweep (gc.c:3657)
==17882==    by 0x4F19CC7: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1A677: gc_sweep (gc.c:3896)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x37: ???
==17882==    by 0x1101: ???
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0x921A3DF: ???
==17882==    by 0x37: ???
==17882==    by 0x1101: ???
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0x921A4DF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x37: ???
==17882==    by 0x1101: ???
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0x921A3DF: ???
==17882==    by 0x37: ???
==17882==    by 0x1101: ???
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0x921A4DF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F1751E: gc_grey (gc.c:4534)
==17882==    by 0x4F1751E: gc_mark_ptr (gc.c:4577)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17521: gc_grey (gc.c:4535)
==17882==    by 0x4F17521: gc_mark_ptr (gc.c:4577)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F2C4BB: argf_mark (io.c:8414)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1CDA3: gc_mark_stacked_objects (gc.c:4871)
==17882==    by 0x4F1CDA3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDA3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDA3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDA3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDA3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17D6B: RVALUE_OLD_P_RAW (gc.c:1156)
==17882==    by 0x4F17D6B: RVALUE_OLD_P (gc.c:1163)
==17882==    by 0x4F17D6B: gc_mark_set_parent (gc.c:4611)
==17882==    by 0x4F17D6B: gc_mark_children (gc.c:4687)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17D90: gc_mark_children (gc.c:4689)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F1CDCA: gc_mark_stacked_objects (gc.c:4883)
==17882==    by 0x4F1CDCA: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDCA: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDCA: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDCA: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDCA: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F1CDE9: gc_mark_stacked_objects (gc.c:4883)
==17882==    by 0x4F1CDE9: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDE9: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDE9: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDE9: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDE9: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17901: gc_mark (gc.c:4588)
==17882==    by 0x4F17901: mark_const_entry_i (gc.c:4345)
==17882==    by 0x505415E: rb_id_table_foreach_values (id_table.c:292)
==17882==    by 0x4F18303: mark_const_tbl (gc.c:4353)
==17882==    by 0x4F18303: gc_mark_children (gc.c:4716)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA96B4: parser_yylex (parse.y:7715)
==17882==    by 0x4FA96B4: yylex (parse.y:8312)
==17882==    by 0x4FA96B4: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E711D2: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E711D2: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E711D2: rb_ary_push (array.c:1156)
==17882==    by 0x4F96C8B: add_mark_object.isra.45.part.46 (parse.y:336)
==17882==    by 0x4FA682B: add_mark_object (parse.y:331)
==17882==    by 0x4FA682B: parse_string (parse.y:5998)
==17882==    by 0x4FA682B: parser_yylex (parse.y:7650)
==17882==    by 0x4FA682B: yylex (parse.y:8312)
==17882==    by 0x4FA682B: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F240E6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F240E6: tbl_update (hash.c:1421)
==17882==    by 0x4F240E6: rb_hash_aset (hash.c:2562)
==17882==    by 0x4FB632F: yycompile0 (parse.y:4924)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5030009: rb_obj_written (ruby.h:1526)
==17882==    by 0x5030009: rb_obj_write (ruby.h:1543)
==17882==    by 0x5030009: str_new_frozen (string.c:1295)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022D91: st_update (st.c:1510)
==17882==    by 0x5029D18: register_fstring (string.c:344)
==17882==    by 0x4EB3D05: iseq_compile_each0 (compile.c:7017)
==17882==    by 0x4EB6F13: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB6F13: compile_array (compile.c:3994)
==17882==    by 0x4EA9824: iseq_compile_each0 (compile.c:6776)
==17882==    by 0x4EB6F13: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB6F13: compile_array (compile.c:3994)
==17882==    by 0x4EB07D9: iseq_compile_each0 (compile.c:6804)
==17882==    by 0x4EAF7D1: iseq_compile_each0 (compile.c:6592)
==17882==    by 0x4EA9678: iseq_compile_each0 (compile.c:6077)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6D82D: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6D82D: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6D82D: ary_memcpy0 (array.c:261)
==17882==    by 0x4E6D82D: ary_memcpy (array.c:272)
==17882==    by 0x4E6D82D: rb_ary_tmp_new_from_values (array.c:726)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBDC1: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBDC1: rb_iseq_compile_node (compile.c:706)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4F4E808: rb_iseq_new_top (iseq.c:687)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F490A7: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F490A7: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F490A7: rb_iseq_pathobj_set (iseq.c:387)
==17882==    by 0x4F490A7: iseq_location_setup (iseq.c:396)
==17882==    by 0x4F490A7: prepare_iseq_build (iseq.c:457)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4EAD3EA: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAD3EA: compile_iter (compile.c:5395)
==17882==    by 0x4EAD3EA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EA95CA: iseq_compile_each0 (compile.c:6095)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBDC1: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBDC1: rb_iseq_compile_node (compile.c:706)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F490D7: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F490D7: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F490D7: iseq_location_setup (iseq.c:397)
==17882==    by 0x4F490D7: prepare_iseq_build (iseq.c:457)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4EAD3EA: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAD3EA: compile_iter (compile.c:5395)
==17882==    by 0x4EAD3EA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EA95CA: iseq_compile_each0 (compile.c:6095)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBDC1: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBDC1: rb_iseq_compile_node (compile.c:706)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F490E6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F490E6: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F490E6: iseq_location_setup (iseq.c:398)
==17882==    by 0x4F490E6: prepare_iseq_build (iseq.c:457)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4EAD3EA: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAD3EA: compile_iter (compile.c:5395)
==17882==    by 0x4EAD3EA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EA95CA: iseq_compile_each0 (compile.c:6095)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBDC1: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBDC1: rb_iseq_compile_node (compile.c:706)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F491F4: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F491F4: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F491F4: prepare_iseq_build (iseq.c:459)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4EAD3EA: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAD3EA: compile_iter (compile.c:5395)
==17882==    by 0x4EAD3EA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EA95CA: iseq_compile_each0 (compile.c:6095)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBDC1: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBDC1: rb_iseq_compile_node (compile.c:706)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F4912E: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F4912E: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F4912E: prepare_iseq_build (iseq.c:467)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4EAD3EA: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAD3EA: compile_iter (compile.c:5395)
==17882==    by 0x4EAD3EA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EA95CA: iseq_compile_each0 (compile.c:6095)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBDC1: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBDC1: rb_iseq_compile_node (compile.c:706)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EA0398: rb_obj_written.isra.71.part.72 (ruby.h:1526)
==17882==    by 0x4EBCCC5: rb_obj_written (ruby.h:1525)
==17882==    by 0x4EBCCC5: rb_obj_write (ruby.h:1543)
==17882==    by 0x4EBCCC5: rb_iseq_compile_node (compile.c:666)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EAD3EA: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAD3EA: compile_iter (compile.c:5395)
==17882==    by 0x4EAD3EA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EA95CA: iseq_compile_each0 (compile.c:6095)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17F53: gc_mark_imemo (gc.c:4635)
==17882==    by 0x4F17F53: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6E66E: ary_alloc (array.c:647)
==17882==    by 0x4E6E66E: ary_new (array.c:676)
==17882==    by 0x4E6E66E: rb_ary_tmp_new (array.c:742)
==17882==    by 0x4F48F11: prepare_iseq_build (iseq.c:467)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAE38: iseq_compile_each0 (compile.c:7145)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4FB7AC4: block_mark (proc.c:61)
==17882==    by 0x4FB7AC4: proc_mark (proc.c:81)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6E66E: ary_alloc (array.c:647)
==17882==    by 0x4E6E66E: ary_new (array.c:676)
==17882==    by 0x4E6E66E: rb_ary_tmp_new (array.c:742)
==17882==    by 0x4F48F11: prepare_iseq_build (iseq.c:467)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAE38: iseq_compile_each0 (compile.c:7145)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EBAB11: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EBAB11: iseq_set_sequence (compile.c:2192)
==17882==    by 0x4EBAB11: iseq_setup (compile.c:1369)
==17882==    by 0x4EBBE81: rb_iseq_compile_node (compile.c:740)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EBAF34: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EBAF34: iseq_set_exception_table (compile.c:2365)
==17882==    by 0x4EBAF34: iseq_setup (compile.c:1374)
==17882==    by 0x4EBBE81: rb_iseq_compile_node (compile.c:740)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5082A6C: autoload_c_mark (variable.c:2048)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6E66E: ary_alloc (array.c:647)
==17882==    by 0x4E6E66E: ary_new (array.c:676)
==17882==    by 0x4E6E66E: rb_ary_tmp_new (array.c:742)
==17882==    by 0x4F48F11: prepare_iseq_build (iseq.c:467)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17375: rgengc_check_relation.part.65 (gc.c:4505)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F4838C: each_insn_value (iseq.c:209)
==17882==    by 0x4F4838C: iseq_extract_values (iseq.c:167)
==17882==    by 0x4F4838C: rb_iseq_each_value (iseq.c:202)
==17882==    by 0x4F4838C: rb_iseq_mark (iseq.c:223)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6E66E: ary_alloc (array.c:647)
==17882==    by 0x4E6E66E: ary_new (array.c:676)
==17882==    by 0x4E6E66E: rb_ary_tmp_new (array.c:742)
==17882==    by 0x4F48F11: prepare_iseq_build (iseq.c:467)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19432: gc_writebarrier_incremental (gc.c:6112)
==17882==    by 0x5030009: rb_obj_written (ruby.h:1526)
==17882==    by 0x5030009: rb_obj_write (ruby.h:1543)
==17882==    by 0x5030009: str_new_frozen (string.c:1295)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022D91: st_update (st.c:1510)
==17882==    by 0x5029D18: register_fstring (string.c:344)
==17882==    by 0x4EB63CF: freeze_literal (compile.c:587)
==17882==    by 0x4EB63CF: compile_dstr_fragments (compile.c:3690)
==17882==    by 0x4EB659A: compile_dstr (compile.c:3721)
==17882==    by 0x4EABA7B: iseq_compile_each0 (compile.c:7026)
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882==    by 0x4EB9684: setup_args (compile.c:4871)
==17882==    by 0x4EA8910: iseq_compile_each0 (compile.c:6611)
==17882==    by 0x4EB1AA8: compile_case (compile.c:5169)
==17882==    by 0x4EB1AA8: iseq_compile_each0 (compile.c:5954)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19533: gc_mark_set (gc.c:4455)
==17882==    by 0x4F19533: gc_mark_from (gc.c:6099)
==17882==    by 0x4F19533: gc_writebarrier_incremental (gc.c:6115)
==17882==    by 0x5030009: rb_obj_written (ruby.h:1526)
==17882==    by 0x5030009: rb_obj_write (ruby.h:1543)
==17882==    by 0x5030009: str_new_frozen (string.c:1295)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022D91: st_update (st.c:1510)
==17882==    by 0x5029D18: register_fstring (string.c:344)
==17882==    by 0x4EB63CF: freeze_literal (compile.c:587)
==17882==    by 0x4EB63CF: compile_dstr_fragments (compile.c:3690)
==17882==    by 0x4EB659A: compile_dstr (compile.c:3721)
==17882==    by 0x4EABA7B: iseq_compile_each0 (compile.c:7026)
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882==    by 0x4EB9684: setup_args (compile.c:4871)
==17882==    by 0x4EA8910: iseq_compile_each0 (compile.c:6611)
==17882==    by 0x4EB1AA8: compile_case (compile.c:5169)
==17882==    by 0x4EB1AA8: iseq_compile_each0 (compile.c:5954)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50986E5: rb_execution_context_mark (vm.c:2464)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xBBB7A368DF1964FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174D3: gc_mark_set (gc.c:4456)
==17882==    by 0x4F174D3: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174D7: gc_mark_ptr (gc.c:4575)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174E0: gc_mark_ptr (gc.c:4575)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174E2: gc_mark_ptr (gc.c:4575)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174EC: gc_aging (gc.c:4551)
==17882==    by 0x4F174EC: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xBBB7A368DF1964FF: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174F4: gc_aging (gc.c:4551)
==17882==    by 0x4F174F4: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174FA: RVALUE_OLD_P_RAW (gc.c:1156)
==17882==    by 0x4F174FA: RVALUE_OLD_P (gc.c:1163)
==17882==    by 0x4F174FA: gc_aging (gc.c:4552)
==17882==    by 0x4F174FA: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17571: RVALUE_FLAGS_AGE_SET (gc.c:1199)
==17882==    by 0x4F17571: RVALUE_AGE_INC (gc.c:1215)
==17882==    by 0x4F17571: gc_aging (gc.c:4554)
==17882==    by 0x4F17571: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F1751E: gc_grey (gc.c:4534)
==17882==    by 0x4F1751E: gc_mark_ptr (gc.c:4577)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17521: gc_grey (gc.c:4535)
==17882==    by 0x4F17521: gc_mark_ptr (gc.c:4577)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1A86B: gc_mark_stacked_objects (gc.c:4871)
==17882==    by 0x4F1A86B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A86B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17D6B: RVALUE_OLD_P_RAW (gc.c:1156)
==17882==    by 0x4F17D6B: RVALUE_OLD_P (gc.c:1163)
==17882==    by 0x4F17D6B: gc_mark_set_parent (gc.c:4611)
==17882==    by 0x4F17D6B: gc_mark_children (gc.c:4687)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17D90: gc_mark_children (gc.c:4689)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F1A88C: gc_mark_stacked_objects (gc.c:4883)
==17882==    by 0x4F1A88C: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A88C: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F1A8B6: gc_mark_stacked_objects (gc.c:4883)
==17882==    by 0x4F1A8B6: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A8B6: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F4819F: rb_iseq_mark (iseq.c:267)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F18FE0: gc_marks_wb_unprotected_objects (gc.c:5597)
==17882==    by 0x4F18FE0: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F18FF7: gc_marks_wb_unprotected_objects (gc.c:5609)
==17882==    by 0x4F18FF7: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F18FFD: gc_marks_wb_unprotected_objects (gc.c:5601)
==17882==    by 0x4F18FFD: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19011: gc_marks_wb_unprotected_objects (gc.c:5609)
==17882==    by 0x4F19011: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1900D: gc_marks_wb_unprotected_objects (gc.c:5605)
==17882==    by 0x4F1900D: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x4EAD4E0: compile_iter (compile.c:5408)
==17882==    by 0x4EAD4E0: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x5089277: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089277: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089277: setup_const_entry (variable.c:2946)
==17882==    by 0x5089277: const_tbl_update (variable.c:2930)
==17882==    by 0x5089277: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x5089277: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089277: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089277: setup_const_entry (variable.c:2946)
==17882==    by 0x5089277: const_tbl_update (variable.c:2930)
==17882==    by 0x5089277: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x8181D7ED: ???
==17882==    by 0x2: ???
==17882==    by 0xD: ???
==17882==    by 0x6834EFF: ???
==17882==    by 0x40097BD: do_lookup_x (dl-lookup.c:249)
==17882==    by 0x400996C: _dl_lookup_symbol_x (dl-lookup.c:737)
==17882==    by 0x6558FCF: ???
==17882==    by 0x960A2CF: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x1DD: ???
==17882==    by 0x6558937: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x8181D7ED: ???
==17882==    by 0x2: ???
==17882==    by 0xD: ???
==17882==    by 0x6834EFF: ???
==17882==    by 0x40097BD: do_lookup_x (dl-lookup.c:249)
==17882==    by 0x400996C: _dl_lookup_symbol_x (dl-lookup.c:737)
==17882==    by 0x6558FCF: ???
==17882==    by 0x960A2CF: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x1DD: ???
==17882==    by 0x6558937: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F96153: parser_mark (parse.y:10852)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x502FF44: str_alloc (string.c:724)
==17882==    by 0x502FF44: str_new_frozen (string.c:1288)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022D91: st_update (st.c:1510)
==17882==    by 0x5029D18: register_fstring (string.c:344)
==17882==    by 0x4EAD365: compile_iter (compile.c:5396)
==17882==    by 0x4EAD365: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x466: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x466: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F18272: gc_mark (gc.c:4588)
==17882==    by 0x4F18272: gc_mark_children (gc.c:4779)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x502FD04: str_new (string.c:766)
==17882==    by 0x502FD04: str_new_frozen (string.c:1256)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022D91: st_update (st.c:1510)
==17882==    by 0x5029D18: register_fstring (string.c:344)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F173C3: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F173C3: rgengc_remember (gc.c:5963)
==17882==    by 0x4F173C3: rgengc_check_relation.part.65 (gc.c:4510)
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x4F183FC: gc_mark (gc.c:4588)
==17882==    by 0x4F183FC: mark_method_entry (gc.c:4307)
==17882==    by 0x4F183FC: gc_mark_imemo (gc.c:4657)
==17882==    by 0x4F183FC: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x502FD04: str_new (string.c:766)
==17882==    by 0x502FD04: str_new_frozen (string.c:1256)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022D91: st_update (st.c:1510)
==17882==    by 0x5029D18: register_fstring (string.c:344)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F88E82: rb_obj_freeze_inline (ruby.h:1374)
==17882==    by 0x4F88E82: rb_obj_freeze (object.c:1353)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x466: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F88E82: rb_obj_freeze_inline (ruby.h:1374)
==17882==    by 0x4F88E82: rb_obj_freeze (object.c:1353)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x466: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x508291A: mark_global_entry (variable.c:598)
==17882==    by 0x505415E: rb_id_table_foreach_values (id_table.c:292)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4FE8A70: rb_obj_written (ruby.h:1526)
==17882==    by 0x4FE8A70: rb_obj_write (ruby.h:1543)
==17882==    by 0x4FE8A70: reg_set_source (re.c:2877)
==17882==    by 0x4FE8A70: rb_reg_initialize_str (re.c:2899)
==17882==    by 0x4FE8A70: rb_reg_compile (re.c:2986)
==17882==    by 0x4FACA16: parser_reg_compile (parse.y:10706)
==17882==    by 0x4FACA16: reg_compile (parse.y:10722)
==17882==    by 0x4FACA16: new_regexp (parse.y:8866)
==17882==    by 0x4FACA16: ruby_yyparse (parse.y:3471)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19432: gc_writebarrier_incremental (gc.c:6112)
==17882==    by 0x4E711D2: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E711D2: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E711D2: rb_ary_push (array.c:1156)
==17882==    by 0x4F97AA2: add_mark_object (parse.y:336)
==17882==    by 0x4F97AA2: local_tbl (parse.y:10413)
==17882==    by 0x4FB4AB2: ruby_yyparse (parse.y:2651)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19533: gc_mark_set (gc.c:4455)
==17882==    by 0x4F19533: gc_mark_from (gc.c:6099)
==17882==    by 0x4F19533: gc_writebarrier_incremental (gc.c:6115)
==17882==    by 0x4E711D2: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E711D2: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E711D2: rb_ary_push (array.c:1156)
==17882==    by 0x4F97AA2: add_mark_object (parse.y:336)
==17882==    by 0x4F97AA2: local_tbl (parse.y:10413)
==17882==    by 0x4FB4AB2: ruby_yyparse (parse.y:2651)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50319D5: rb_obj_written (ruby.h:1526)
==17882==    by 0x50319D5: rb_obj_write (ruby.h:1543)
==17882==    by 0x50319D5: str_duplicate (string.c:1515)
==17882==    by 0x50319D5: rb_str_dup (string.c:1530)
==17882==    by 0x4F0AA26: realpath_rec (file.c:3980)
==17882==    by 0x4F0B1AE: rb_check_realpath_internal (file.c:4143)
==17882==    by 0x4F50CCD: rb_load_internal0 (load.c:607)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x20F: ???
==17882==    by 0x1101: ???
==17882==    by 0x58057EFF: ??? (mc_malloc_wrappers.c:553)
==17882==    by 0x991E09F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x20F: ???
==17882==    by 0x1101: ???
==17882==    by 0x58057EFF: ??? (mc_malloc_wrappers.c:553)
==17882==    by 0x991E09F: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x5089237: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089237: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089237: setup_const_entry (variable.c:2946)
==17882==    by 0x5089237: const_tbl_update (variable.c:2937)
==17882==    by 0x5089237: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x5089237: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089237: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089237: setup_const_entry (variable.c:2946)
==17882==    by 0x5089237: const_tbl_update (variable.c:2937)
==17882==    by 0x5089237: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F14A82: RVALUE_DEMOTE (gc.c:1267)
==17882==    by 0x4F14A82: rb_gc_writebarrier_unprotect (gc.c:6173)
==17882==    by 0x4E9A445: rb_obj_wb_unprotect (ruby.h:1512)
==17882==    by 0x4E9A445: rb_include_class_new (class.c:835)
==17882==    by 0x4E9A853: include_modules_at (class.c:913)
==17882==    by 0x4E9AB77: rb_include_module (class.c:870)
==17882==    by 0x4EFDB52: rb_mod_append_features (eval.c:1216)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDEA6: rb_mod_include (eval.c:1241)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x580566DF: ??? (mc_malloc_wrappers.c:374)
==17882==    by 0x37: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x580566DF: ??? (mc_malloc_wrappers.c:374)
==17882==    by 0x37: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50B294E: location_mark_entry (vm_backtrace.c:109)
==17882==    by 0x50B294E: backtrace_mark (vm_backtrace.c:401)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5031939: str_alloc (string.c:724)
==17882==    by 0x5031939: str_duplicate (string.c:1505)
==17882==    by 0x5031939: rb_str_dup (string.c:1530)
==17882==    by 0x503C970: rb_str_sub (string.c:5119)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17F93: gc_mark_imemo (gc.c:4642)
==17882==    by 0x4F17F93: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5031939: str_alloc (string.c:724)
==17882==    by 0x5031939: str_duplicate (string.c:1505)
==17882==    by 0x5031939: rb_str_dup (string.c:1530)
==17882==    by 0x503C970: rb_str_sub (string.c:5119)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F4DFC9: rb_vm_insn_addr2insn (iseq.c:2972)
==17882==    by 0x4EBAFE5: update_catch_except_flags (compile.c:1278)
==17882==    by 0x4EBAFE5: iseq_setup (compile.c:1382)
==17882==    by 0x1FFEFFD607: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6CC88: ary_alloc (array.c:647)
==17882==    by 0x4E6CC88: ary_new (array.c:676)
==17882==    by 0x4E6CC88: rb_ary_new_capa (array.c:691)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F4DFC9: rb_vm_insn_addr2insn (iseq.c:2972)
==17882==    by 0x4EBAFE5: update_catch_except_flags (compile.c:1278)
==17882==    by 0x4EBAFE5: iseq_setup (compile.c:1382)
==17882==    by 0x1FFEFFD717: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6CC88: ary_alloc (array.c:647)
==17882==    by 0x4E6CC88: ary_new (array.c:676)
==17882==    by 0x4E6CC88: rb_ary_new_capa (array.c:691)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4FB7B14: block_mark (proc.c:72)
==17882==    by 0x4FB7B14: binding_mark (proc.c:262)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6CC88: ary_alloc (array.c:647)
==17882==    by 0x4E6CC88: ary_new (array.c:676)
==17882==    by 0x4E6CC88: rb_ary_new_capa (array.c:691)
==17882==    by 0x4E76F88: rb_ary_dup (array.c:2192)
==17882==    by 0x4E770B5: rb_ary_sort (array.c:2819)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x66640CF: ???
==17882==    by 0x9DDA717: ???
==17882==    by 0x5029C96: fstring_cmp (string.c:427)
==17882==    by 0x6707B8F: ???
==17882==    by 0x1FAEA3: ???
==17882==    by 0x502FD85: rb_obj_freeze_inline (ruby.h:1374)
==17882==    by 0x502FD85: str_new_frozen (string.c:1302)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022E0C: st_update (st.c:1515)
==17882==    by 0x1FFF000FFF: ???
==17882==    by 0x1FFEFFBD7F: ???
==17882==    by 0x6559277: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x66640CF: ???
==17882==    by 0x9DDA717: ???
==17882==    by 0x5029C96: fstring_cmp (string.c:427)
==17882==    by 0x6707B8F: ???
==17882==    by 0x1FAEA3: ???
==17882==    by 0x502FD85: rb_obj_freeze_inline (ruby.h:1374)
==17882==    by 0x502FD85: str_new_frozen (string.c:1302)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022E0C: st_update (st.c:1515)
==17882==    by 0x1FFF000FFF: ???
==17882==    by 0x1FFEFFBD7F: ???
==17882==    by 0x6559277: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1821B: gc_mark_children (gc.c:4811)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x502FD04: str_new (string.c:766)
==17882==    by 0x502FD04: str_new_frozen (string.c:1256)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022D91: st_update (st.c:1510)
==17882==    by 0x5029D18: register_fstring (string.c:344)
==17882==    by 0x4EA0020: freeze_literal (compile.c:587)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xA188F77: ???
==17882==    by 0x9E56A0F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x9E56A0F: ???
==17882==    by 0x1F: ???
==17882==    by 0x9DC08A7: ???
==17882==    by 0xA183D3F: ???
==17882==    by 0x29: ???
==17882==    by 0x1FFEFFC73F: ???
==17882==    by 0x9DC08A7: ???
==17882==    by 0x4EA9824: iseq_compile_each0 (compile.c:6776)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xA188F77: ???
==17882==    by 0x9E56A0F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x9E56A0F: ???
==17882==    by 0x1F: ???
==17882==    by 0x9DC08A7: ???
==17882==    by 0xA183D3F: ???
==17882==    by 0x29: ???
==17882==    by 0x1FFEFFC73F: ???
==17882==    by 0x9DC08A7: ???
==17882==    by 0x4EA9824: iseq_compile_each0 (compile.c:6776)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F188A2: gc_mark_roots.constprop.93 (gc.c:4999)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D45D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D45D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D45D: newobj_slowpath_wb_unprotected (gc.c:1935)
==17882==    by 0x4FE6B03: match_alloc (re.c:939)
==17882==    by 0x4FE6B03: rb_reg_search0 (re.c:1601)
==17882==    by 0x4FE6B03: rb_reg_search (re.c:1627)
==17882==    by 0x4FE6F98: reg_match_pos (re.c:3155)
==17882==    by 0x4FE6F98: rb_reg_match (re.c:3209)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E736B8: rb_ary_collect_bang (array.c:3051)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1CDA3: gc_mark_stacked_objects (gc.c:4871)
==17882==    by 0x4F1CDA3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDA3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDA3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDA3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDA3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D45D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D45D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D45D: newobj_slowpath_wb_unprotected (gc.c:1935)
==17882==    by 0x4FE6B03: match_alloc (re.c:939)
==17882==    by 0x4FE6B03: rb_reg_search0 (re.c:1601)
==17882==    by 0x4FE6B03: rb_reg_search (re.c:1627)
==17882==    by 0x4FE6F98: reg_match_pos (re.c:3155)
==17882==    by 0x4FE6F98: rb_reg_match (re.c:3209)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E736B8: rb_ary_collect_bang (array.c:3051)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F1CDCA: gc_mark_stacked_objects (gc.c:4883)
==17882==    by 0x4F1CDCA: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDCA: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDCA: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDCA: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDCA: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D45D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D45D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D45D: newobj_slowpath_wb_unprotected (gc.c:1935)
==17882==    by 0x4FE6B03: match_alloc (re.c:939)
==17882==    by 0x4FE6B03: rb_reg_search0 (re.c:1601)
==17882==    by 0x4FE6B03: rb_reg_search (re.c:1627)
==17882==    by 0x4FE6F98: reg_match_pos (re.c:3155)
==17882==    by 0x4FE6F98: rb_reg_match (re.c:3209)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E736B8: rb_ary_collect_bang (array.c:3051)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F1CDE9: gc_mark_stacked_objects (gc.c:4883)
==17882==    by 0x4F1CDE9: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDE9: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDE9: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDE9: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDE9: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D45D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D45D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D45D: newobj_slowpath_wb_unprotected (gc.c:1935)
==17882==    by 0x4FE6B03: match_alloc (re.c:939)
==17882==    by 0x4FE6B03: rb_reg_search0 (re.c:1601)
==17882==    by 0x4FE6B03: rb_reg_search (re.c:1627)
==17882==    by 0x4FE6F98: reg_match_pos (re.c:3155)
==17882==    by 0x4FE6F98: rb_reg_match (re.c:3209)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E736B8: rb_ary_collect_bang (array.c:3051)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1711D: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F1711D: rb_gc_writebarrier_remember (gc.c:6204)
==17882==    by 0x508CB95: vm_env_write_slowpath (vm_insnhelper.c:355)
==17882==    by 0x50A256E: vm_env_write (vm_insnhelper.c:369)
==17882==    by 0x50A256E: vm_exec_core (insns.def:96)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E7424B: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E7424B: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E7424B: flatten (array.c:5087)
==17882==    by 0x4E744B9: rb_ary_flatten (array.c:5167)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E76FED: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E76FED: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E76FED: ary_memcpy0 (array.c:261)
==17882==    by 0x4E76FED: ary_memcpy (array.c:272)
==17882==    by 0x4E76FED: rb_ary_dup (array.c:2193)
==17882==    by 0x4E77D65: rb_ary_compact (array.c:4977)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F28E75: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F28E75: add_new_i (hash.c:4256)
==17882==    by 0x4F28E75: ar_update (hash.c:842)
==17882==    by 0x4F28E75: rb_hash_add_new_element (hash.c:4277)
==17882==    by 0x4E77F52: ary_add_hash (array.c:4396)
==17882==    by 0x4E77F52: ary_make_hash (array.c:4415)
==17882==    by 0x4E77F52: rb_ary_uniq (array.c:4920)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F28E9B: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F28E9B: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F28E9B: add_new_i (hash.c:4257)
==17882==    by 0x4F28E9B: ar_update (hash.c:842)
==17882==    by 0x4F28E9B: rb_hash_add_new_element (hash.c:4277)
==17882==    by 0x4E77F52: ary_add_hash (array.c:4396)
==17882==    by 0x4E77F52: ary_make_hash (array.c:4415)
==17882==    by 0x4E77F52: rb_ary_uniq (array.c:4920)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F24100: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F24100: tbl_update (hash.c:1422)
==17882==    by 0x4F24100: rb_hash_aset (hash.c:2562)
==17882==    by 0x4E918FC: separate_symbol (class.c:1811)
==17882==    by 0x4F21E5C: hash_ar_foreach_iter (hash.c:1136)
==17882==    by 0x4F21E5C: ar_foreach_check (hash.c:786)
==17882==    by 0x4F21E5C: hash_foreach_call (hash.c:1205)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x4F250AD: rb_hash_foreach (hash.c:1229)
==17882==    by 0x4E9E909: rb_extract_keywords (class.c:1825)
==17882==    by 0x4F407CB: rb_scan_args_set (ruby.h:2514)
==17882==    by 0x4F407CB: rb_io_s_read (io.c:10505)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F240E6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F240E6: tbl_update (hash.c:1421)
==17882==    by 0x4F240E6: rb_hash_aset (hash.c:2562)
==17882==    by 0x509FAE5: vm_opt_aset (vm_insnhelper.c:3693)
==17882==    by 0x509FAE5: vm_exec_core (insns.def:1272)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A8F77: eval_string_with_scope (vm_eval.c:1351)
==17882==    by 0x50A8F77: rb_f_eval (vm_eval.c:1394)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F24100: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F24100: tbl_update (hash.c:1422)
==17882==    by 0x4F24100: rb_hash_aset (hash.c:2562)
==17882==    by 0x509FAE5: vm_opt_aset (vm_insnhelper.c:3693)
==17882==    by 0x509FAE5: vm_exec_core (insns.def:1272)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A8F77: eval_string_with_scope (vm_eval.c:1351)
==17882==    by 0x50A8F77: rb_f_eval (vm_eval.c:1394)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x508631E: rb_obj_written (ruby.h:1526)
==17882==    by 0x508631E: generic_ivar_set (variable.c:1372)
==17882==    by 0x508631E: rb_ivar_set (variable.c:1500)
==17882==    by 0x50A093D: vm_setivar (vm_insnhelper.c:1053)
==17882==    by 0x50A093D: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A093D: vm_exec_core (insns.def:224)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4FE6986: rb_reg_search0 (re.c:1617)
==17882==    by 0x4FE6986: rb_reg_search (re.c:1627)
==17882==    by 0x4FE6F98: reg_match_pos (re.c:3155)
==17882==    by 0x4FE6F98: rb_reg_match (re.c:3209)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E736B8: rb_ary_collect_bang (array.c:3051)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E733EF: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E733EF: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E733EF: rb_ary_store (array.c:1062)
==17882==    by 0x4E736CA: rb_ary_collect_bang (array.c:3051)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50A1DC6: rb_obj_written (ruby.h:1526)
==17882==    by 0x50A1DC6: rb_obj_write (ruby.h:1543)
==17882==    by 0x50A1DC6: vm_setivar (vm_insnhelper.c:1025)
==17882==    by 0x50A1DC6: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A1DC6: vm_exec_core (insns.def:224)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19432: gc_writebarrier_incremental (gc.c:6112)
==17882==    by 0x4F240E6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F240E6: tbl_update (hash.c:1421)
==17882==    by 0x4F240E6: rb_hash_aset (hash.c:2562)
==17882==    by 0x509FAE5: vm_opt_aset (vm_insnhelper.c:3693)
==17882==    by 0x509FAE5: vm_exec_core (insns.def:1272)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F172CF: rgengc_check_relation.part.65 (gc.c:4500)
==17882==    by 0x4F1962A: rgengc_check_relation (gc.c:4492)
==17882==    by 0x4F1962A: gc_mark_from (gc.c:6098)
==17882==    by 0x4F1962A: gc_writebarrier_incremental (gc.c:6115)
==17882==    by 0x4F240E6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F240E6: tbl_update (hash.c:1421)
==17882==    by 0x4F240E6: rb_hash_aset (hash.c:2562)
==17882==    by 0x509FAE5: vm_opt_aset (vm_insnhelper.c:3693)
==17882==    by 0x509FAE5: vm_exec_core (insns.def:1272)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19533: gc_mark_set (gc.c:4455)
==17882==    by 0x4F19533: gc_mark_from (gc.c:6099)
==17882==    by 0x4F19533: gc_writebarrier_incremental (gc.c:6115)
==17882==    by 0x4F240E6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F240E6: tbl_update (hash.c:1421)
==17882==    by 0x4F240E6: rb_hash_aset (hash.c:2562)
==17882==    by 0x509FAE5: vm_opt_aset (vm_insnhelper.c:3693)
==17882==    by 0x509FAE5: vm_exec_core (insns.def:1272)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x502FAEF: rb_obj_written (ruby.h:1526)
==17882==    by 0x502FAEF: rb_obj_write (ruby.h:1543)
==17882==    by 0x502FAEF: str_replace_shared_without_enc (string.c:1171)
==17882==    by 0x5035C7A: str_replace_shared (string.c:1179)
==17882==    by 0x5035C7A: str_replace (string.c:1488)
==17882==    by 0x5035C7A: rb_str_replace (string.c:5343)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F87EDD: rb_obj_init_dup_clone (object.c:632)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BF0F: rb_obj_dup (object.c:535)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50968EC: rb_obj_written (ruby.h:1526)
==17882==    by 0x50968EC: rb_obj_write (ruby.h:1543)
==17882==    by 0x50968EC: vm_bind_update_env (vm.c:299)
==17882==    by 0x50968EC: rb_vm_make_binding (vm.c:951)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5096878: rb_obj_written (ruby.h:1526)
==17882==    by 0x5096878: rb_vm_block_ep_update (vm.c:292)
==17882==    by 0x5096878: vm_bind_update_env (vm.c:300)
==17882==    by 0x5096878: rb_vm_make_binding (vm.c:951)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5096897: rb_obj_written (ruby.h:1526)
==17882==    by 0x5096897: rb_obj_write (ruby.h:1543)
==17882==    by 0x5096897: rb_vm_make_binding (vm.c:952)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50968B7: rb_obj_written (ruby.h:1526)
==17882==    by 0x50968B7: rb_obj_write (ruby.h:1543)
==17882==    by 0x50968B7: rb_vm_make_binding (vm.c:953)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50968D2: rb_obj_written (ruby.h:1526)
==17882==    by 0x50968D2: rb_obj_write (ruby.h:1543)
==17882==    by 0x50968D2: rb_vm_make_binding (vm.c:954)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F78C1F: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F78C1F: rb_ast_new (node.c:1119)
==17882==    by 0x4F9BCF1: yycompile (parse.y:4949)
==17882==    by 0x4F9BCF1: parser_compile_string (parse.y:5019)
==17882==    by 0x4F9BCF1: rb_parser_compile_string_path (parse.y:5039)
==17882==    by 0x50A8ECE: eval_make_iseq (vm_eval.c:1282)
==17882==    by 0x50A8ECE: eval_string_with_scope (vm_eval.c:1338)
==17882==    by 0x50A8ECE: rb_f_eval (vm_eval.c:1394)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4FB7B64: block_mark (proc.c:61)
==17882==    by 0x4FB7B64: binding_mark (proc.c:262)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F26904: hash_alloc_flags (hash.c:1237)
==17882==    by 0x4F26904: hash_alloc (hash.c:1247)
==17882==    by 0x4F26904: rb_hash_new (hash.c:1261)
==17882==    by 0x4F26FED: rb_hash_new_with_size (hash.c:1275)
==17882==    by 0x4E77F19: ary_tmp_hash_new (array.c:4405)
==17882==    by 0x4E77F19: ary_make_hash (array.c:4414)
==17882==    by 0x4E77F19: rb_ary_uniq (array.c:4920)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4FB7B54: block_mark (proc.c:62)
==17882==    by 0x4FB7B54: binding_mark (proc.c:262)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F26904: hash_alloc_flags (hash.c:1237)
==17882==    by 0x4F26904: hash_alloc (hash.c:1247)
==17882==    by 0x4F26904: rb_hash_new (hash.c:1261)
==17882==    by 0x4F26FED: rb_hash_new_with_size (hash.c:1275)
==17882==    by 0x4E77F19: ary_tmp_hash_new (array.c:4405)
==17882==    by 0x4E77F19: ary_make_hash (array.c:4414)
==17882==    by 0x4E77F19: rb_ary_uniq (array.c:4920)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F52EA4: mark_marshal_compat_i (marshal.c:117)
==17882==    by 0x5022F17: st_general_foreach (st.c:1574)
==17882==    by 0x5022F17: st_foreach (st.c:1653)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x502FF44: str_alloc (string.c:724)
==17882==    by 0x502FF44: str_new_frozen (string.c:1288)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022D91: st_update (st.c:1510)
==17882==    by 0x5029D18: register_fstring (string.c:344)
==17882==    by 0x4EA0020: freeze_literal (compile.c:587)
==17882==    by 0x4EB568A: iseq_compile_each0 (compile.c:6460)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x665BE1F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x665BE1F: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x4F240E6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F240E6: tbl_update (hash.c:1421)
==17882==    by 0x4F240E6: rb_hash_aset (hash.c:2562)
==17882==    by 0x509FAE5: vm_opt_aset (vm_insnhelper.c:3693)
==17882==    by 0x509FAE5: vm_exec_core (insns.def:1272)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A8F77: eval_string_with_scope (vm_eval.c:1351)
==17882==    by 0x50A8F77: rb_f_eval (vm_eval.c:1394)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x4F240E6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F240E6: tbl_update (hash.c:1421)
==17882==    by 0x4F240E6: rb_hash_aset (hash.c:2562)
==17882==    by 0x509FAE5: vm_opt_aset (vm_insnhelper.c:3693)
==17882==    by 0x509FAE5: vm_exec_core (insns.def:1272)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A8F77: eval_string_with_scope (vm_eval.c:1351)
==17882==    by 0x50A8F77: rb_f_eval (vm_eval.c:1394)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x5030009: rb_obj_written (ruby.h:1526)
==17882==    by 0x5030009: rb_obj_write (ruby.h:1543)
==17882==    by 0x5030009: str_new_frozen (string.c:1295)
==17882==    by 0x502F902: rb_str_dup_frozen (string.c:1206)
==17882==    by 0x502FA57: str_replace_shared_without_enc (string.c:1166)
==17882==    by 0x5035C7A: str_replace_shared (string.c:1179)
==17882==    by 0x5035C7A: str_replace (string.c:1488)
==17882==    by 0x5035C7A: rb_str_replace (string.c:5343)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F87EDD: rb_obj_init_dup_clone (object.c:632)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BF0F: rb_obj_dup (object.c:535)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x5030009: rb_obj_written (ruby.h:1526)
==17882==    by 0x5030009: rb_obj_write (ruby.h:1543)
==17882==    by 0x5030009: str_new_frozen (string.c:1295)
==17882==    by 0x502F902: rb_str_dup_frozen (string.c:1206)
==17882==    by 0x502FA57: str_replace_shared_without_enc (string.c:1166)
==17882==    by 0x5035C7A: str_replace_shared (string.c:1179)
==17882==    by 0x5035C7A: str_replace (string.c:1488)
==17882==    by 0x5035C7A: rb_str_replace (string.c:5343)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F87EDD: rb_obj_init_dup_clone (object.c:632)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BF0F: rb_obj_dup (object.c:535)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x5089CA7: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089CA7: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089CA7: setup_const_entry (variable.c:2946)
==17882==    by 0x5089CA7: const_tbl_update (variable.c:2930)
==17882==    by 0x5089CA7: autoload_const_set (variable.c:2304)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5082B6F: autoload_reset (variable.c:2345)
==17882==    by 0x4F00DD4: rb_ensure (eval.c:1084)
==17882==    by 0x508B17D: rb_autoload_load (variable.c:2442)
==17882==    by 0x508BC8D: rb_const_search (variable.c:2511)
==17882==    by 0x508BC8D: rb_const_get_0 (variable.c:2481)
==17882==    by 0x508BC8D: rb_public_const_get_from (variable.c:2554)
==17882==    by 0x509CF38: vm_get_ev_const (vm_insnhelper.c:909)
==17882==    by 0x509CF38: vm_exec_core (insns.def:264)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50C3365: prelude_eval (prelude.c:230)
==17882==    by 0x50C3365: Init_prelude (prelude.c:240)
==17882==    by 0x50160F0: ruby_init_prelude (ruby.c:1410)
==17882==    by 0x50160F0: process_options (ruby.c:1722)
==17882==    by 0x5016C45: ruby_process_options (ruby.c:2363)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x5089CA7: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089CA7: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089CA7: setup_const_entry (variable.c:2946)
==17882==    by 0x5089CA7: const_tbl_update (variable.c:2930)
==17882==    by 0x5089CA7: autoload_const_set (variable.c:2304)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5082B6F: autoload_reset (variable.c:2345)
==17882==    by 0x4F00DD4: rb_ensure (eval.c:1084)
==17882==    by 0x508B17D: rb_autoload_load (variable.c:2442)
==17882==    by 0x508BC8D: rb_const_search (variable.c:2511)
==17882==    by 0x508BC8D: rb_const_get_0 (variable.c:2481)
==17882==    by 0x508BC8D: rb_public_const_get_from (variable.c:2554)
==17882==    by 0x509CF38: vm_get_ev_const (vm_insnhelper.c:909)
==17882==    by 0x509CF38: vm_exec_core (insns.def:264)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50C3365: prelude_eval (prelude.c:230)
==17882==    by 0x50C3365: Init_prelude (prelude.c:240)
==17882==    by 0x50160F0: ruby_init_prelude (ruby.c:1410)
==17882==    by 0x50160F0: process_options (ruby.c:1722)
==17882==    by 0x5016C45: ruby_process_options (ruby.c:2363)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x508619F: rb_obj_written (ruby.h:1526)
==17882==    by 0x508619F: rb_class_ivar_set (variable.c:3368)
==17882==    by 0x509CE4E: vm_exec_core (insns.def:249)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50C3365: prelude_eval (prelude.c:230)
==17882==    by 0x50C3365: Init_prelude (prelude.c:240)
==17882==    by 0x50160F0: ruby_init_prelude (ruby.c:1410)
==17882==    by 0x50160F0: process_options (ruby.c:1722)
==17882==    by 0x5016C45: ruby_process_options (ruby.c:2363)
==17882==    by 0x4F03122: ruby_options (eval.c:118)
==17882==    by 0x400912: main (main.c:42)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x508619F: rb_obj_written (ruby.h:1526)
==17882==    by 0x508619F: rb_class_ivar_set (variable.c:3368)
==17882==    by 0x509CE4E: vm_exec_core (insns.def:249)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50C3365: prelude_eval (prelude.c:230)
==17882==    by 0x50C3365: Init_prelude (prelude.c:240)
==17882==    by 0x50160F0: ruby_init_prelude (ruby.c:1410)
==17882==    by 0x50160F0: process_options (ruby.c:1722)
==17882==    by 0x5016C45: ruby_process_options (ruby.c:2363)
==17882==    by 0x4F03122: ruby_options (eval.c:118)
==17882==    by 0x400912: main (main.c:42)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFFB9BF: ???
==17882==    by 0xA66836F: ???
==17882==    by 0xA65E0FF: ???
==17882==    by 0x30: ???
==17882==    by 0x1FFEFFB9BF: ???
==17882==    by 0xA66836F: ???
==17882==    by 0x4EA4408: iseq_add_getlocal (compile.c:1512)
==17882==    by 0x4EB0764: iseq_compile_each0 (compile.c:6872)
==17882==    by 0x501CBA8: rb_enc_vsprintf (sprintf.c:1419)
==17882==    by 0x501CE10: rb_sprintf (sprintf.c:1468)
==17882==    by 0x4EAD35D: make_name_for_block (compile.c:4743)
==17882==    by 0x4EAD35D: compile_iter (compile.c:5396)
==17882==    by 0x4EAD35D: iseq_compile_each0 (compile.c:5965)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFFB9BF: ???
==17882==    by 0xA66836F: ???
==17882==    by 0xA65E0FF: ???
==17882==    by 0x30: ???
==17882==    by 0x1FFEFFB9BF: ???
==17882==    by 0xA66836F: ???
==17882==    by 0x4EA4408: iseq_add_getlocal (compile.c:1512)
==17882==    by 0x4EB0764: iseq_compile_each0 (compile.c:6872)
==17882==    by 0x501CBA8: rb_enc_vsprintf (sprintf.c:1419)
==17882==    by 0x501CE10: rb_sprintf (sprintf.c:1468)
==17882==    by 0x4EAD35D: make_name_for_block (compile.c:4743)
==17882==    by 0x4EAD35D: compile_iter (compile.c:5396)
==17882==    by 0x4EAD35D: iseq_compile_each0 (compile.c:5965)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4EDF425: must_encindex (encoding.c:182)
==17882==    by 0x4EDF425: rb_enc_set_index (encoding.c:840)
==17882==    by 0xAA97937: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4EDF425: must_encindex (encoding.c:182)
==17882==    by 0x4EDF425: rb_enc_set_index (encoding.c:840)
==17882==    by 0xAA97937: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x670E1BF: ???
==17882==    by 0x1FFEFFCF6F: ???
==17882==    by 0xC30: ???
==17882==    by 0x6559277: ???
==17882==    by 0x670D8FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x670E1BF: ???
==17882==    by 0x1FFEFFCF6F: ???
==17882==    by 0xC30: ???
==17882==    by 0x6559277: ???
==17882==    by 0x670D8FF: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50986F7: rb_execution_context_mark (vm.c:2466)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5031939: str_alloc (string.c:724)
==17882==    by 0x5031939: str_duplicate (string.c:1505)
==17882==    by 0x5031939: rb_str_dup (string.c:1530)
==17882==    by 0x4F0AA26: realpath_rec (file.c:3980)
==17882==    by 0x4F0B1AE: rb_check_realpath_internal (file.c:4143)
==17882==    by 0x4F50CCD: rb_load_internal0 (load.c:607)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4E4A2C5: ??? (in /usr/local/rvm/rubies/ruby-head-opt/lib/libruby.so.2.6.3)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4E4A2C5: ??? (in /usr/local/rvm/rubies/ruby-head-opt/lib/libruby.so.2.6.3)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17FAB: gc_mark_imemo (gc.c:4652)
==17882==    by 0x4F17FAB: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6CC88: ary_alloc (array.c:647)
==17882==    by 0x4E6CC88: ary_new (array.c:676)
==17882==    by 0x4E6CC88: rb_ary_new_capa (array.c:691)
==17882==    by 0x4F4BE55: rb_iseq_parameters (iseq.c:2827)
==17882==    by 0x4FBC2CB: rb_method_parameters (proc.c:2608)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x50AFAB7: rb_obj_written (ruby.h:1526)
==17882==    by 0x50AFAB7: rb_method_entry_make (vm_method.c:629)
==17882==    by 0x50AFC39: rb_add_method (vm_method.c:663)
==17882==    by 0x50B02CF: rb_add_method_iseq (vm_method.c:682)
==17882==    by 0x50B02CF: vm_define_method (vm.c:2689)
==17882==    by 0x50B02CF: m_core_define_method (vm.c:2709)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x50AFAB7: rb_obj_written (ruby.h:1526)
==17882==    by 0x50AFAB7: rb_method_entry_make (vm_method.c:629)
==17882==    by 0x50AFC39: rb_add_method (vm_method.c:663)
==17882==    by 0x50B02CF: rb_add_method_iseq (vm_method.c:682)
==17882==    by 0x50B02CF: vm_define_method (vm.c:2689)
==17882==    by 0x50B02CF: m_core_define_method (vm.c:2709)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x509827C: rb_vm_mark (vm.c:2212)
==17882==    by 0x4F1884E: gc_mark_roots.constprop.93 (gc.c:4987)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x502F425: rb_enc_str_new (string.c:798)
==17882==    by 0x4F96337: parser_str_new (parse.y:5141)
==17882==    by 0x4FA6815: parse_string (parse.y:5998)
==17882==    by 0x4FA6815: parser_yylex (parse.y:7650)
==17882==    by 0x4FA6815: yylex (parse.y:8312)
==17882==    by 0x4FA6815: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x400000000000DFFF: ???
==17882==    by 0x1FFEFFB2FF: ???
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x400000000000DFFF: ???
==17882==    by 0x1FFEFFB2FF: ???
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1F00000008: ???
==17882==    by 0x1EFFFFFFFF: ???
==17882==    by 0x1FFEFFAC8F: ???
==17882==    by 0x231829A: ???
==17882==    by 0x1FFEFFACAF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1F00000008: ???
==17882==    by 0x1EFFFFFFFF: ???
==17882==    by 0x1FFEFFAC8F: ???
==17882==    by 0x231829A: ???
==17882==    by 0x1FFEFFACAF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFFCC6F: ???
==17882==    by 0x1FFEFFCCEF: ???
==17882==    by 0xAAAC1FF: ???
==17882==    by 0xAA5BD77: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFFCC6F: ???
==17882==    by 0x1FFEFFCCEF: ???
==17882==    by 0xAAAC1FF: ???
==17882==    by 0xAA5BD77: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17577: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1178)
==17882==    by 0x4F17577: gc_aging (gc.c:4558)
==17882==    by 0x4F17577: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x50305E1: str_alloc (string.c:724)
==17882==    by 0x50305E1: str_new_shared (string.c:1187)
==17882==    by 0x50305E1: rb_sym_to_s (string.c:10617)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50AFAB7: rb_obj_written (ruby.h:1526)
==17882==    by 0x50AFAB7: rb_method_entry_make (vm_method.c:629)
==17882==    by 0x50AFC39: rb_add_method (vm_method.c:663)
==17882==    by 0x4FBA954: rb_mod_define_method (proc.c:1987)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50AFAB7: rb_obj_written (ruby.h:1526)
==17882==    by 0x50AFAB7: rb_method_entry_make (vm_method.c:629)
==17882==    by 0x50AFC39: rb_add_method (vm_method.c:663)
==17882==    by 0x4FBA954: rb_mod_define_method (proc.c:1987)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x508619F: rb_obj_written (ruby.h:1526)
==17882==    by 0x508619F: rb_class_ivar_set (variable.c:3368)
==17882==    by 0x509CE4E: vm_exec_core (insns.def:249)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x508619F: rb_obj_written (ruby.h:1526)
==17882==    by 0x508619F: rb_class_ivar_set (variable.c:3368)
==17882==    by 0x509CE4E: vm_exec_core (insns.def:249)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1711D: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F1711D: rb_gc_writebarrier_remember (gc.c:6204)
==17882==    by 0x4E77046: ary_memcpy0 (array.c:254)
==17882==    by 0x4E77046: ary_memcpy (array.c:272)
==17882==    by 0x4E77046: rb_ary_dup (array.c:2193)
==17882==    by 0x4E770B5: rb_ary_sort (array.c:2819)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6B99E: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6B99E: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6B99E: ary_make_shared (array.c:827)
==17882==    by 0x4E72853: ary_make_substitution (array.c:848)
==17882==    by 0x4E72853: rb_ary_sort_bang (array.c:2738)
==17882==    by 0x4E770C0: rb_ary_sort (array.c:2820)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1711D: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F1711D: rb_gc_writebarrier_remember (gc.c:6204)
==17882==    by 0x4E72905: rb_ary_sort_bang (array.c:2749)
==17882==    by 0x4E770C0: rb_ary_sort (array.c:2820)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19432: gc_writebarrier_incremental (gc.c:6112)
==17882==    by 0x50A1DC6: rb_obj_written (ruby.h:1526)
==17882==    by 0x50A1DC6: rb_obj_write (ruby.h:1543)
==17882==    by 0x50A1DC6: vm_setivar (vm_insnhelper.c:1025)
==17882==    by 0x50A1DC6: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A1DC6: vm_exec_core (insns.def:224)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5082CC1: autoload_require (variable.c:2317)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19533: gc_mark_set (gc.c:4455)
==17882==    by 0x4F19533: gc_mark_from (gc.c:6099)
==17882==    by 0x4F19533: gc_writebarrier_incremental (gc.c:6115)
==17882==    by 0x50A1DC6: rb_obj_written (ruby.h:1526)
==17882==    by 0x50A1DC6: rb_obj_write (ruby.h:1543)
==17882==    by 0x50A1DC6: vm_setivar (vm_insnhelper.c:1025)
==17882==    by 0x50A1DC6: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A1DC6: vm_exec_core (insns.def:224)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5082CC1: autoload_require (variable.c:2317)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19432: gc_writebarrier_incremental (gc.c:6112)
==17882==    by 0x4E733EF: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E733EF: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E733EF: rb_ary_store (array.c:1062)
==17882==    by 0x504E812: set_id_entry (symbol.c:373)
==17882==    by 0x504E812: register_static_symid_str (symbol.c:459)
==17882==    by 0x504E812: intern_str (symbol.c:637)
==17882==    by 0x504F50B: rb_intern3 (symbol.c:601)
==17882==    by 0x4FAD083: tokenize_ident (parse.y:7368)
==17882==    by 0x4FAD083: parse_ident (parse.y:7623)
==17882==    by 0x4FAD083: parser_yylex (parse.y:8302)
==17882==    by 0x4FAD083: yylex (parse.y:8312)
==17882==    by 0x4FAD083: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19533: gc_mark_set (gc.c:4455)
==17882==    by 0x4F19533: gc_mark_from (gc.c:6099)
==17882==    by 0x4F19533: gc_writebarrier_incremental (gc.c:6115)
==17882==    by 0x4E733EF: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E733EF: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E733EF: rb_ary_store (array.c:1062)
==17882==    by 0x504E812: set_id_entry (symbol.c:373)
==17882==    by 0x504E812: register_static_symid_str (symbol.c:459)
==17882==    by 0x504E812: intern_str (symbol.c:637)
==17882==    by 0x504F50B: rb_intern3 (symbol.c:601)
==17882==    by 0x4FAD083: tokenize_ident (parse.y:7368)
==17882==    by 0x4FAD083: parse_ident (parse.y:7623)
==17882==    by 0x4FAD083: parser_yylex (parse.y:8302)
==17882==    by 0x4FAD083: yylex (parse.y:8312)
==17882==    by 0x4FAD083: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0xAC3DD4F: ???
==17882==    by 0x37: ???
==17882==    by 0x1101: ???
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0xAC3E62F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0xAC3DD4F: ???
==17882==    by 0x37: ???
==17882==    by 0x1101: ???
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0xAC3E62F: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x4F23E18: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F23E18: tbl_update (hash.c:1422)
==17882==    by 0x4F23E18: rb_hash_update_i (hash.c:3507)
==17882==    by 0x4F21E5C: hash_ar_foreach_iter (hash.c:1136)
==17882==    by 0x4F21E5C: ar_foreach_check (hash.c:786)
==17882==    by 0x4F21E5C: hash_foreach_call (hash.c:1205)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x4F250AD: rb_hash_foreach (hash.c:1229)
==17882==    by 0x4F2662E: rb_hash_update (hash.c:3593)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x4F23E18: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F23E18: tbl_update (hash.c:1422)
==17882==    by 0x4F23E18: rb_hash_update_i (hash.c:3507)
==17882==    by 0x4F21E5C: hash_ar_foreach_iter (hash.c:1136)
==17882==    by 0x4F21E5C: ar_foreach_check (hash.c:786)
==17882==    by 0x4F21E5C: hash_foreach_call (hash.c:1205)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x4F250AD: rb_hash_foreach (hash.c:1229)
==17882==    by 0x4F2662E: rb_hash_update (hash.c:3593)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x7: ???
==17882==    by 0x1FFEFFAC7F: ???
==17882==    by 0x93DBDBF: ???
==17882==    by 0xBDEC36F: ???
==17882==    by 0x665888F: ???
==17882==    by 0x1FFEFFAAAF: ???
==17882==    by 0x50A093D: vm_setivar (vm_insnhelper.c:1053)
==17882==    by 0x50A093D: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A093D: vm_exec_core (insns.def:224)
==17882==    by 0x93DC38F: ???
==17882==    by 0x93DBDBF: ???
==17882==    by 0x20000000022A009: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x7: ???
==17882==    by 0x1FFEFFAC7F: ???
==17882==    by 0x93DBDBF: ???
==17882==    by 0xBDEC36F: ???
==17882==    by 0x665888F: ???
==17882==    by 0x1FFEFFAAAF: ???
==17882==    by 0x50A093D: vm_setivar (vm_insnhelper.c:1053)
==17882==    by 0x50A093D: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A093D: vm_exec_core (insns.def:224)
==17882==    by 0x93DC38F: ???
==17882==    by 0x93DBDBF: ???
==17882==    by 0x20000000022A009: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17F87: gc_mark_imemo (gc.c:4641)
==17882==    by 0x4F17F87: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6CC88: ary_alloc (array.c:647)
==17882==    by 0x4E6CC88: ary_new (array.c:676)
==17882==    by 0x4E6CC88: rb_ary_new_capa (array.c:691)
==17882==    by 0x503E4B8: rb_str_split_m (string.c:7814)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50A437F: vm_exec_handle_exception (vm.c:1964)
==17882==    by 0x50A437F: rb_vm_exec (vm.c:1892)
==17882==    by 0x1FFEFFB1AF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x50A437F: vm_exec_handle_exception (vm.c:1964)
==17882==    by 0x50A437F: rb_vm_exec (vm.c:1892)
==17882==    by 0x1FFEFFB1AF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFFBCCF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFFBCCF: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x50A1DC6: rb_obj_written (ruby.h:1526)
==17882==    by 0x50A1DC6: rb_obj_write (ruby.h:1543)
==17882==    by 0x50A1DC6: vm_setivar (vm_insnhelper.c:1025)
==17882==    by 0x50A1DC6: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A1DC6: vm_exec_core (insns.def:224)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882==    by 0x5048CF0: rb_struct_hash (struct.c:1201)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x50A1DC6: rb_obj_written (ruby.h:1526)
==17882==    by 0x50A1DC6: rb_obj_write (ruby.h:1543)
==17882==    by 0x50A1DC6: vm_setivar (vm_insnhelper.c:1025)
==17882==    by 0x50A1DC6: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A1DC6: vm_exec_core (insns.def:224)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882==    by 0x5048CF0: rb_struct_hash (struct.c:1201)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x678890F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x668F077: ???
==17882==    by 0x4E67CD7: rb_ary_hash (array.c:4276)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x1FFF000FFF: ???
==17882==    by 0x6559277: ???
==17882==    by 0x65587FF: ???
==17882==    by 0xBC9459F: ???
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x678890F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x668F077: ???
==17882==    by 0x4E67CD7: rb_ary_hash (array.c:4276)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x1FFF000FFF: ???
==17882==    by 0x6559277: ???
==17882==    by 0x65587FF: ???
==17882==    by 0xBC9459F: ???
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E733EF: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E733EF: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E733EF: rb_ary_store (array.c:1062)
==17882==    by 0x4E736CA: rb_ary_collect_bang (array.c:3051)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50A1DC6: rb_obj_written (ruby.h:1526)
==17882==    by 0x50A1DC6: rb_obj_write (ruby.h:1543)
==17882==    by 0x50A1DC6: vm_setivar (vm_insnhelper.c:1025)
==17882==    by 0x50A1DC6: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A1DC6: vm_exec_core (insns.def:224)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50AE0FB: invoke_block (vm.c:1021)
==17882==    by 0x50AE0FB: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50AE0FB: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50AE0FB: vm_yield (vm.c:1155)
==17882==    by 0x50AE0FB: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50AE0FB: rb_yield_values2 (vm_eval.c:1024)
==17882==    by 0x4E67D40: sort_1 (array.c:2675)
==17882==    by 0x61E2DB0: msort_with_tmp.part.0 (msort.c:83)
==17882==    by 0x61E305B: msort_with_tmp (msort.c:45)
==17882==    by 0x61E305B: qsort_r (msort.c:297)
==17882==    by 0x4E728F5: rb_ary_sort_bang (array.c:2745)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x508631E: rb_obj_written (ruby.h:1526)
==17882==    by 0x508631E: generic_ivar_set (variable.c:1372)
==17882==    by 0x508631E: rb_ivar_set (variable.c:1500)
==17882==    by 0x50A093D: vm_setivar (vm_insnhelper.c:1053)
==17882==    by 0x50A093D: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A093D: vm_exec_core (insns.def:224)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50AE0FB: invoke_block (vm.c:1021)
==17882==    by 0x50AE0FB: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50AE0FB: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50AE0FB: vm_yield (vm.c:1155)
==17882==    by 0x50AE0FB: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50AE0FB: rb_yield_values2 (vm_eval.c:1024)
==17882==    by 0x4E67D40: sort_1 (array.c:2675)
==17882==    by 0x61E2DB0: msort_with_tmp.part.0 (msort.c:83)
==17882==    by 0x61E305B: msort_with_tmp (msort.c:45)
==17882==    by 0x61E305B: qsort_r (msort.c:297)
==17882==    by 0x4E728F5: rb_ary_sort_bang (array.c:2745)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6B337: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6B337: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6B337: ary_memcpy0 (array.c:261)
==17882==    by 0x4E729CA: ary_memcpy (array.c:272)
==17882==    by 0x4E729CA: rb_ary_sort_bang (array.c:2755)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6B337: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6B337: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6B337: ary_memcpy0 (array.c:261)
==17882==    by 0x4E729CA: ary_memcpy (array.c:272)
==17882==    by 0x4E729CA: rb_ary_sort_bang (array.c:2755)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E711D2: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E711D2: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E711D2: rb_ary_push (array.c:1156)
==17882==    by 0x50A0D22: vm_opt_ltlt (vm_insnhelper.c:3624)
==17882==    by 0x50A0D22: vm_exec_core (insns.def:1208)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x508E27F: rb_obj_written (ruby.h:1526)
==17882==    by 0x508E27F: rb_obj_write (ruby.h:1543)
==17882==    by 0x508E27F: vm_setivar (vm_insnhelper.c:1025)
==17882==    by 0x508E27F: vm_call_attrset (vm_insnhelper.c:1939)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5049AA0: rb_obj_written (ruby.h:1526)
==17882==    by 0x5049AA0: rb_obj_write (ruby.h:1543)
==17882==    by 0x5049AA0: rb_struct_initialize_m (struct.c:643)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8C0BE: rb_class_s_new (object.c:2187)
==17882==    by 0x4F8C0BE: rb_class_new_instance (object.c:2208)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E794C6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E794C6: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E794C6: rb_ary_slice_bang (array.c:3456)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882==    by 0x5048CF0: rb_struct_hash (struct.c:1201)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EEAF0A: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EEAF0A: rb_obj_write (ruby.h:1543)
==17882==    by 0x4EEAF0A: inject_i (enum.c:668)
==17882==    by 0x5096649: vm_yield_with_cfunc.isra.368 (vm_insnhelper.c:2543)
==17882==    by 0x50A52C8: invoke_block_from_c_bh (vm.c:1115)
==17882==    by 0x50A52C8: vm_yield (vm.c:1155)
==17882==    by 0x50A52C8: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A52C8: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A52C8: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4EE78F0: enum_inject (enum.c:839)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5082E6B: autoload_i_mark (variable.c:2012)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D45D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D45D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D45D: newobj_slowpath_wb_unprotected (gc.c:1935)
==17882==    by 0x4F1FBBF: rb_data_typed_object_zalloc (gc.c:2082)
==17882==    by 0x4EF2FF3: enumerator_allocate (enumerator.c:334)
==17882==    by 0x4EF2FF3: rb_enumeratorize_with_size (enumerator.c:488)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E736B8: rb_ary_collect_bang (array.c:3051)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4FE664E: rb_reg_search0 (re.c:1617)
==17882==    by 0x503D509: scan_once (string.c:9060)
==17882==    by 0x503D9AE: rb_str_scan (string.c:9151)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882==    by 0x5048CF0: rb_struct_hash (struct.c:1201)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4FE6360: rb_reg_search0 (re.c:1617)
==17882==    by 0x503D509: scan_once (string.c:9060)
==17882==    by 0x503D9AE: rb_str_scan (string.c:9151)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882==    by 0x5048CF0: rb_struct_hash (struct.c:1201)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4FE66E6: rb_reg_search0 (re.c:1617)
==17882==    by 0x503D9CC: rb_str_scan (string.c:9156)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882==    by 0x5048CF0: rb_struct_hash (struct.c:1201)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19432: gc_writebarrier_incremental (gc.c:6112)
==17882==    by 0x508631E: rb_obj_written (ruby.h:1526)
==17882==    by 0x508631E: generic_ivar_set (variable.c:1372)
==17882==    by 0x508631E: rb_ivar_set (variable.c:1500)
==17882==    by 0x50A093D: vm_setivar (vm_insnhelper.c:1053)
==17882==    by 0x50A093D: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A093D: vm_exec_core (insns.def:224)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882==    by 0x5048CF0: rb_struct_hash (struct.c:1201)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19533: gc_mark_set (gc.c:4455)
==17882==    by 0x4F19533: gc_mark_from (gc.c:6099)
==17882==    by 0x4F19533: gc_writebarrier_incremental (gc.c:6115)
==17882==    by 0x508631E: rb_obj_written (ruby.h:1526)
==17882==    by 0x508631E: generic_ivar_set (variable.c:1372)
==17882==    by 0x508631E: rb_ivar_set (variable.c:1500)
==17882==    by 0x50A093D: vm_setivar (vm_insnhelper.c:1053)
==17882==    by 0x50A093D: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A093D: vm_exec_core (insns.def:224)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882==    by 0x5048CF0: rb_struct_hash (struct.c:1201)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x505C120: exec_recursive (thread.c:4972)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1812A: gc_mark (gc.c:4588)
==17882==    by 0x4F1812A: gc_mark_children (gc.c:4834)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6948E: ary_alloc (array.c:647)
==17882==    by 0x4E6948E: ary_new (array.c:676)
==17882==    by 0x4E73FD5: flatten (array.c:5041)
==17882==    by 0x4E744B9: rb_ary_flatten (array.c:5167)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17F7B: gc_mark_imemo (gc.c:4640)
==17882==    by 0x4F17F7B: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6948E: ary_alloc (array.c:647)
==17882==    by 0x4E6948E: ary_new (array.c:676)
==17882==    by 0x4E73FD5: flatten (array.c:5041)
==17882==    by 0x4E744B9: rb_ary_flatten (array.c:5167)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x508631E: rb_obj_written (ruby.h:1526)
==17882==    by 0x508631E: generic_ivar_set (variable.c:1372)
==17882==    by 0x508631E: rb_ivar_set (variable.c:1500)
==17882==    by 0x50A093D: vm_setivar (vm_insnhelper.c:1053)
==17882==    by 0x50A093D: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A093D: vm_exec_core (insns.def:224)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x508631E: rb_obj_written (ruby.h:1526)
==17882==    by 0x508631E: generic_ivar_set (variable.c:1372)
==17882==    by 0x508631E: rb_ivar_set (variable.c:1500)
==17882==    by 0x50A093D: vm_setivar (vm_insnhelper.c:1053)
==17882==    by 0x50A093D: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A093D: vm_exec_core (insns.def:224)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50213F2: do_hash (st.c:325)
==17882==    by 0x50213F2: st_lookup (st.c:1083)
==17882==    by 0x8A: ???
==17882==    by 0x6665D67: ???
==17882==    by 0x9494B0F: ???
==17882==    by 0x6658C0F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x17F: ???
==17882==    by 0x1FFEFFC9AF: ???
==17882==    by 0xFFFFFFFFFFDFFFFE: ???
==17882==    by 0x6665D67: ???
==17882==    by 0x9494B0F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x50213F2: do_hash (st.c:325)
==17882==    by 0x50213F2: st_lookup (st.c:1083)
==17882==    by 0x8A: ???
==17882==    by 0x6665D67: ???
==17882==    by 0x9494B0F: ???
==17882==    by 0x6658C0F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x17F: ???
==17882==    by 0x1FFEFFC9AF: ???
==17882==    by 0xFFFFFFFFFFDFFFFE: ???
==17882==    by 0x6665D67: ???
==17882==    by 0x9494B0F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2: ???
==17882==    by 0x6F5ACA3CDCA4436A: ???
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2: ???
==17882==    by 0x6F5ACA3CDCA4436A: ???
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4EEC1D4: enumerator_mark (enumerator.c:182)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6E66E: ary_alloc (array.c:647)
==17882==    by 0x4E6E66E: ary_new (array.c:676)
==17882==    by 0x4E6E66E: rb_ary_tmp_new (array.c:742)
==17882==    by 0x4EE4E5D: enum_sort_by (enum.c:1159)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF9ACF: ???
==17882==    by 0x1FFEFF9B4F: ???
==17882==    by 0xBEA14AF: ???
==17882==    by 0xB6C39DF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF9ACF: ???
==17882==    by 0x1FFEFF9B4F: ???
==17882==    by 0xBEA14AF: ???
==17882==    by 0xB6C39DF: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F14F73: rb_gc_force_recycle (gc.c:6350)
==17882==    by 0x4E6F1D2: rb_ary_decrement_share (array.c:470)
==17882==    by 0x4E6F1D2: rb_ary_unshare (array.c:482)
==17882==    by 0x4E6F1D2: rb_ary_unshare_safe (array.c:490)
==17882==    by 0x4E6F1D2: rb_ary_replace (array.c:3791)
==17882==    by 0x4F52911: rb_require_internal (load.c:1039)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5089237: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089237: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089237: setup_const_entry (variable.c:2946)
==17882==    by 0x5089237: const_tbl_update (variable.c:2937)
==17882==    by 0x5089237: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5089217: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089217: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089217: setup_const_entry (variable.c:2947)
==17882==    by 0x5089217: const_tbl_update (variable.c:2937)
==17882==    by 0x5089217: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E93A2C: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E93A2C: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E93A2C: make_singleton_class (class.c:526)
==17882==    by 0x4E93A2C: rb_make_metaclass (class.c:583)
==17882==    by 0x4E9BBC3: singleton_class_of (class.c:1611)
==17882==    by 0x4E9BBC3: rb_singleton_class (class.c:1680)
==17882==    by 0x50A15BE: vm_find_or_create_class_by_id (vm_insnhelper.c:3179)
==17882==    by 0x50A15BE: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x508A887: rb_obj_written (ruby.h:1526)
==17882==    by 0x508A887: rb_autoload_str (variable.c:2131)
==17882==    by 0x4F50671: rb_mod_autoload (load.c:1140)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x508D1D8: rb_obj_written.isra.303.part.304 (ruby.h:1526)
==17882==    by 0x50941FC: rb_obj_written (vm_method.c:197)
==17882==    by 0x50941FC: rb_obj_write (ruby.h:1543)
==17882==    by 0x50941FC: rb_method_definition_set (vm_method.c:241)
==17882==    by 0x50AF756: rb_method_entry_make (vm_method.c:603)
==17882==    by 0x50AFC39: rb_add_method (vm_method.c:663)
==17882==    by 0x50B02CF: rb_add_method_iseq (vm_method.c:682)
==17882==    by 0x50B02CF: vm_define_method (vm.c:2689)
==17882==    by 0x50B02CF: m_core_define_method (vm.c:2709)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x4F88825: rb_mod_initialize (object.c:2012)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5089CA7: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089CA7: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089CA7: setup_const_entry (variable.c:2946)
==17882==    by 0x5089CA7: const_tbl_update (variable.c:2930)
==17882==    by 0x5089CA7: autoload_const_set (variable.c:2304)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5082B6F: autoload_reset (variable.c:2345)
==17882==    by 0x4F00DD4: rb_ensure (eval.c:1084)
==17882==    by 0x508B17D: rb_autoload_load (variable.c:2442)
==17882==    by 0x508BC8D: rb_const_search (variable.c:2511)
==17882==    by 0x508BC8D: rb_const_get_0 (variable.c:2481)
==17882==    by 0x508BC8D: rb_public_const_get_from (variable.c:2554)
==17882==    by 0x509CF38: vm_get_ev_const (vm_insnhelper.c:909)
==17882==    by 0x509CF38: vm_exec_core (insns.def:264)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5089C2B: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089C2B: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089C2B: setup_const_entry (variable.c:2947)
==17882==    by 0x5089C2B: const_tbl_update (variable.c:2937)
==17882==    by 0x5089C2B: autoload_const_set (variable.c:2304)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5082B6F: autoload_reset (variable.c:2345)
==17882==    by 0x4F00DD4: rb_ensure (eval.c:1084)
==17882==    by 0x508B17D: rb_autoload_load (variable.c:2442)
==17882==    by 0x508BC8D: rb_const_search (variable.c:2511)
==17882==    by 0x508BC8D: rb_const_get_0 (variable.c:2481)
==17882==    by 0x508BC8D: rb_public_const_get_from (variable.c:2554)
==17882==    by 0x509CF38: vm_get_ev_const (vm_insnhelper.c:909)
==17882==    by 0x509CF38: vm_exec_core (insns.def:264)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50893CF: rb_obj_written (ruby.h:1526)
==17882==    by 0x50893CF: rb_obj_write (ruby.h:1543)
==17882==    by 0x50893CF: setup_const_entry (variable.c:2946)
==17882==    by 0x50893CF: rb_const_set (variable.c:2837)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50893CF: rb_obj_written (ruby.h:1526)
==17882==    by 0x50893CF: rb_obj_write (ruby.h:1543)
==17882==    by 0x50893CF: setup_const_entry (variable.c:2946)
==17882==    by 0x50893CF: rb_const_set (variable.c:2837)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5089217: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089217: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089217: setup_const_entry (variable.c:2947)
==17882==    by 0x5089217: const_tbl_update (variable.c:2937)
==17882==    by 0x5089217: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5089237: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089237: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089237: setup_const_entry (variable.c:2946)
==17882==    by 0x5089237: const_tbl_update (variable.c:2937)
==17882==    by 0x5089237: rb_const_set (variable.c:2845)
==17882==    by 0x509CFE2: vm_exec_core (insns.def:282)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4FB6BB4: bm_mark (proc.c:1318)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x50940C5: rb_method_definition_set (vm_method.c:273)
==17882==    by 0x50AF756: rb_method_entry_make (vm_method.c:603)
==17882==    by 0x50AFC39: rb_add_method (vm_method.c:663)
==17882==    by 0x50B042D: rb_attr (vm_method.c:1190)
==17882==    by 0x4F898B3: rb_mod_attr_reader (object.c:2332)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F0DD62: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F0DD62: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F0DD62: copy_path_class (file.c:6017)
==17882==    by 0x4F0DD62: rb_find_file_ext_safe (file.c:6082)
==17882==    by 0x4F51C93: search_required (load.c:910)
==17882==    by 0x4F5273E: rb_require_internal (load.c:1015)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F4825C: rb_iseq_mark (iseq.c:217)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F4E49B: iseq_imemo_alloc (iseq.h:145)
==17882==    by 0x4F4E49B: iseq_alloc (iseq.c:360)
==17882==    by 0x4F4E49B: rb_iseq_new_with_opt (iseq.c:720)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC3F8: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC3F8: rb_iseq_compile_node (compile.c:660)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EAD3EA: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAD3EA: compile_iter (compile.c:5395)
==17882==    by 0x4EAD3EA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EA99CF: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EA99CF: iseq_compile_each0 (compile.c:6027)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4FB6BBD: bm_mark (proc.c:1319)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F4E49B: iseq_imemo_alloc (iseq.h:145)
==17882==    by 0x4F4E49B: iseq_alloc (iseq.c:360)
==17882==    by 0x4F4E49B: rb_iseq_new_with_opt (iseq.c:720)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC3F8: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC3F8: rb_iseq_compile_node (compile.c:660)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EAD3EA: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAD3EA: compile_iter (compile.c:5395)
==17882==    by 0x4EAD3EA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EA99CF: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EA99CF: iseq_compile_each0 (compile.c:6027)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1712A: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F1712A: rb_gc_writebarrier_remember (gc.c:6204)
==17882==    by 0x4E710EB: ary_ensure_room_for_push (array.c:595)
==17882==    by 0x4E710EB: rb_ary_push (array.c:1155)
==17882==    by 0x4F512F0: rb_provide_feature (load.c:558)
==17882==    by 0x4F52911: rb_require_internal (load.c:1039)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6B99E: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6B99E: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6B99E: ary_make_shared (array.c:827)
==17882==    by 0x4E6EF7A: rb_ary_replace (array.c:3786)
==17882==    by 0x4F52911: rb_require_internal (load.c:1039)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6F034: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6F034: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6F034: rb_ary_set_shared (array.c:509)
==17882==    by 0x4E6F034: rb_ary_replace (array.c:3796)
==17882==    by 0x4F52911: rb_require_internal (load.c:1039)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5033F85: rb_obj_written (ruby.h:1526)
==17882==    by 0x5033F85: rb_obj_write (ruby.h:1543)
==17882==    by 0x5033F85: str_duplicate (string.c:1515)
==17882==    by 0x5033F85: rb_str_resurrect (string.c:1537)
==17882==    by 0x5043504: rb_str_concat_literals (string.c:2956)
==17882==    by 0x509D29D: vm_exec_core (insns.def:385)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E71B2C: rb_ary_collect (array.c:3016)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xC3B0337: ???
==17882==    by 0x13E810B: ???
==17882==    by 0xC3B053F: ???
==17882==    by 0xAC123E7: ???
==17882==    by 0x50AFCCF: method_added (vm_method.c:656)
==17882==    by 0x50AFCCF: rb_add_method (vm_method.c:666)
==17882==    by 0x6559277: ???
==17882==    by 0x53C44BF: ???
==17882==    by 0x5097256: rb_vm_cref (vm.c:1359)
==17882==    by 0x50B032C: rb_scope_module_func_check (vm_method.c:1138)
==17882==    by 0x50B032C: vm_define_method (vm.c:2691)
==17882==    by 0x50B032C: m_core_define_method (vm.c:2709)
==17882==    by 0x1FFEFF9FEF: ???
==17882==    by 0x6558FCF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xC3B0337: ???
==17882==    by 0x13E810B: ???
==17882==    by 0xC3B053F: ???
==17882==    by 0xAC123E7: ???
==17882==    by 0x50AFCCF: method_added (vm_method.c:656)
==17882==    by 0x50AFCCF: rb_add_method (vm_method.c:666)
==17882==    by 0x6559277: ???
==17882==    by 0x53C44BF: ???
==17882==    by 0x5097256: rb_vm_cref (vm.c:1359)
==17882==    by 0x50B032C: rb_scope_module_func_check (vm_method.c:1138)
==17882==    by 0x50B032C: vm_define_method (vm.c:2691)
==17882==    by 0x50B032C: m_core_define_method (vm.c:2709)
==17882==    by 0x6558FCF: ???
==17882==    by 0xD63: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4EB6CB4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB6CB4: compile_array_keyword_arg (compile.c:3877)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4EB6CB4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB6CB4: compile_array_keyword_arg (compile.c:3877)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xFFFFFFFEFFFFFFFF: ???
==17882==    by 0x66640E0: ???
==17882==    by 0x66640E0: ???
==17882==    by 0x5EFFFFFFFF: ???
==17882==    by 0xFFFFFFFEFFFFFFFF: ???
==17882==    by 0x953D2E0: ???
==17882==    by 0x953D2E0: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x41C135406018A27: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xFFFFFFFEFFFFFFFF: ???
==17882==    by 0x66640E0: ???
==17882==    by 0x66640E0: ???
==17882==    by 0x5EFFFFFFFF: ???
==17882==    by 0xFFFFFFFEFFFFFFFF: ???
==17882==    by 0x953D2E0: ???
==17882==    by 0x953D2E0: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x41C135406018A27: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A2C: gc_writebarrier_generational.isra.39 (gc.c:6071)
==17882==    by 0x4E711D2: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E711D2: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E711D2: rb_ary_push (array.c:1156)
==17882==    by 0x50A0D22: vm_opt_ltlt (vm_insnhelper.c:3624)
==17882==    by 0x50A0D22: vm_exec_core (insns.def:1208)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x50A89D4: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A89D4: rb_obj_instance_eval (vm_eval.c:1690)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F12A3F: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F12A3F: rgengc_remember (gc.c:5963)
==17882==    by 0x4F12A3F: gc_writebarrier_generational.isra.39 (gc.c:6072)
==17882==    by 0x4E711D2: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E711D2: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E711D2: rb_ary_push (array.c:1156)
==17882==    by 0x50A0D22: vm_opt_ltlt (vm_insnhelper.c:3624)
==17882==    by 0x50A0D22: vm_exec_core (insns.def:1208)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x50A89D4: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A89D4: rb_obj_instance_eval (vm_eval.c:1690)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x6559277: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x6559277: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x9D: ???
==17882==    by 0x77: ???
==17882==    by 0x50C5EDC: ??? (in /usr/local/rvm/rubies/ruby-head-opt/lib/libruby.so.2.6.3)
==17882==    by 0x50315BC: str_alloc (string.c:724)
==17882==    by 0x50315BC: rb_str_buf_new (string.c:1326)
==17882==    by 0x501CBA8: rb_enc_vsprintf (sprintf.c:1419)
==17882==    by 0x501CE10: rb_sprintf (sprintf.c:1468)
==17882==    by 0x4EA9ED5: iseq_compile_each0 (compile.c:7213)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x9D: ???
==17882==    by 0x77: ???
==17882==    by 0x50C5EDC: ??? (in /usr/local/rvm/rubies/ruby-head-opt/lib/libruby.so.2.6.3)
==17882==    by 0x50315BC: str_alloc (string.c:724)
==17882==    by 0x50315BC: rb_str_buf_new (string.c:1326)
==17882==    by 0x501CBA8: rb_enc_vsprintf (sprintf.c:1419)
==17882==    by 0x501CE10: rb_sprintf (sprintf.c:1468)
==17882==    by 0x4EA9ED5: iseq_compile_each0 (compile.c:7213)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EBAB11: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EBAB11: iseq_set_sequence (compile.c:2192)
==17882==    by 0x4EBAB11: iseq_setup (compile.c:1369)
==17882==    by 0x4EBBE81: rb_iseq_compile_node (compile.c:740)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9EFD: iseq_compile_each0 (compile.c:7213)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBDC1: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBDC1: rb_iseq_compile_node (compile.c:706)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4F4E808: rb_iseq_new_top (iseq.c:687)
==17882==    by 0x4F50D01: rb_load_internal0 (load.c:607)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E92237: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E92237: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E92237: RCLASS_SET_ORIGIN (internal.h:1006)
==17882==    by 0x4E92237: class_alloc (class.c:177)
==17882==    by 0x4E92237: rb_class_boot (class.c:203)
==17882==    by 0x4E96CF1: make_metaclass (class.c:489)
==17882==    by 0x4E96CF1: rb_make_metaclass (class.c:580)
==17882==    by 0x4E96CF1: rb_define_class_id (class.c:605)
==17882==    by 0x50A189C: vm_declare_class (vm_insnhelper.c:3109)
==17882==    by 0x50A189C: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A189C: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A189C: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5082CC1: autoload_require (variable.c:2317)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x508B17D: rb_autoload_load (variable.c:2442)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E97087: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E97087: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E97087: make_metaclass (class.c:501)
==17882==    by 0x4E97087: rb_make_metaclass (class.c:580)
==17882==    by 0x4E97087: rb_define_class_id (class.c:605)
==17882==    by 0x50A189C: vm_declare_class (vm_insnhelper.c:3109)
==17882==    by 0x50A189C: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A189C: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A189C: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5082CC1: autoload_require (variable.c:2317)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x508B17D: rb_autoload_load (variable.c:2442)
==17882==    by 0x508BC8D: rb_const_search (variable.c:2511)
==17882==    by 0x508BC8D: rb_const_get_0 (variable.c:2481)
==17882==    by 0x508BC8D: rb_public_const_get_from (variable.c:2554)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E97D35: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E97D35: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E97D35: RCLASS_SET_SUPER (internal.h:1024)
==17882==    by 0x4E97D35: make_metaclass (class.c:506)
==17882==    by 0x4E97D35: rb_make_metaclass (class.c:580)
==17882==    by 0x4E97D35: rb_define_class_id (class.c:605)
==17882==    by 0x50A189C: vm_declare_class (vm_insnhelper.c:3109)
==17882==    by 0x50A189C: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A189C: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A189C: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5082CC1: autoload_require (variable.c:2317)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x508B17D: rb_autoload_load (variable.c:2442)
==17882==    by 0x508BC8D: rb_const_search (variable.c:2511)
==17882==    by 0x508BC8D: rb_const_get_0 (variable.c:2481)
==17882==    by 0x508BC8D: rb_public_const_get_from (variable.c:2554)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E9A1D3: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E9A1D3: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E9A1D3: RCLASS_SET_ORIGIN (internal.h:1006)
==17882==    by 0x4E9A1D3: class_alloc (class.c:177)
==17882==    by 0x4E9A1D3: rb_module_new (class.c:751)
==17882==    by 0x4E9A1ED: rb_define_module_id (class.c:761)
==17882==    by 0x509E3B3: vm_declare_module (vm_insnhelper.c:3121)
==17882==    by 0x509E3B3: vm_define_module (vm_insnhelper.c:3160)
==17882==    by 0x509E3B3: vm_find_or_create_class_by_id (vm_insnhelper.c:3183)
==17882==    by 0x509E3B3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5082CC1: autoload_require (variable.c:2317)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x508B17D: rb_autoload_load (variable.c:2442)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E9A59F: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E9A59F: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E9A59F: RCLASS_SET_ORIGIN (internal.h:1006)
==17882==    by 0x4E9A59F: class_alloc (class.c:177)
==17882==    by 0x4E9A59F: rb_include_class_new (class.c:820)
==17882==    by 0x4E9A853: include_modules_at (class.c:913)
==17882==    by 0x4E9AB77: rb_include_module (class.c:870)
==17882==    by 0x4EFDB52: rb_mod_append_features (eval.c:1216)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDEA6: rb_mod_include (eval.c:1241)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E9A65D: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E9A65D: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E9A65D: RCLASS_SET_SUPER (internal.h:1024)
==17882==    by 0x4E9A65D: rb_include_class_new (class.c:837)
==17882==    by 0x4E9A853: include_modules_at (class.c:913)
==17882==    by 0x4E9AB77: rb_include_module (class.c:870)
==17882==    by 0x4EFDB52: rb_mod_append_features (eval.c:1216)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDEA6: rb_mod_include (eval.c:1241)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E9A51D: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E9A51D: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E9A51D: rb_include_class_new (class.c:842)
==17882==    by 0x4E9A853: include_modules_at (class.c:913)
==17882==    by 0x4E9AB77: rb_include_module (class.c:870)
==17882==    by 0x4EFDB52: rb_mod_append_features (eval.c:1216)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDEA6: rb_mod_include (eval.c:1241)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E9AA9A: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E9AA9A: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E9AA9A: RCLASS_SET_SUPER (internal.h:1024)
==17882==    by 0x4E9AA9A: include_modules_at (class.c:914)
==17882==    by 0x4E9AB77: rb_include_module (class.c:870)
==17882==    by 0x4EFDB52: rb_mod_append_features (eval.c:1216)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDEA6: rb_mod_include (eval.c:1241)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E9BDA9: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E9BDA9: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E9BDA9: make_metaclass (class.c:500)
==17882==    by 0x4E9BDA9: rb_singleton_class (class.c:1683)
==17882==    by 0x4F03C68: rb_extend_object (eval.c:1640)
==17882==    by 0x4F03C8E: rb_mod_extend_object (eval.c:1673)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDA56: rb_obj_extend (eval.c:1715)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDEA6: rb_mod_include (eval.c:1241)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E9CC36: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E9CC36: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E9CC36: make_metaclass (class.c:501)
==17882==    by 0x4E9CC36: rb_singleton_class (class.c:1683)
==17882==    by 0x4F03C68: rb_extend_object (eval.c:1640)
==17882==    by 0x4F03C8E: rb_mod_extend_object (eval.c:1673)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDA56: rb_obj_extend (eval.c:1715)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDEA6: rb_mod_include (eval.c:1241)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E9C4C5: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E9C4C5: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E9C4C5: RCLASS_SET_SUPER (internal.h:1024)
==17882==    by 0x4E9C4C5: make_metaclass (class.c:506)
==17882==    by 0x4E9C4C5: rb_singleton_class (class.c:1683)
==17882==    by 0x4F03C68: rb_extend_object (eval.c:1640)
==17882==    by 0x4F03C8E: rb_mod_extend_object (eval.c:1673)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDA56: rb_obj_extend (eval.c:1715)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDEA6: rb_mod_include (eval.c:1241)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5096279: rb_obj_written (ruby.h:1526)
==17882==    by 0x5096279: rb_obj_write (ruby.h:1543)
==17882==    by 0x5096279: vm_proc_create_from_captured (vm.c:850)
==17882==    by 0x5096279: rb_vm_make_proc_lambda (vm.c:922)
==17882==    by 0x4FBB455: rb_vm_make_lambda (vm_core.h:1617)
==17882==    by 0x4FBB455: rb_mod_define_method (proc.c:1938)
==17882==    by 0x4FBB455: rb_obj_define_method (proc.c:2027)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5096255: rb_obj_written (ruby.h:1526)
==17882==    by 0x5096255: rb_obj_write (ruby.h:1543)
==17882==    by 0x5096255: vm_proc_create_from_captured (vm.c:851)
==17882==    by 0x5096255: rb_vm_make_proc_lambda (vm.c:922)
==17882==    by 0x4FBB455: rb_vm_make_lambda (vm_core.h:1617)
==17882==    by 0x4FBB455: rb_mod_define_method (proc.c:1938)
==17882==    by 0x4FBB455: rb_obj_define_method (proc.c:2027)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5096235: rb_obj_written (ruby.h:1526)
==17882==    by 0x5096235: rb_vm_block_ep_update (vm.c:292)
==17882==    by 0x5096235: vm_proc_create_from_captured (vm.c:852)
==17882==    by 0x5096235: rb_vm_make_proc_lambda (vm.c:922)
==17882==    by 0x4FBB455: rb_vm_make_lambda (vm_core.h:1617)
==17882==    by 0x4FBB455: rb_mod_define_method (proc.c:1938)
==17882==    by 0x4FBB455: rb_obj_define_method (proc.c:2027)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5096174: rb_obj_written (ruby.h:1526)
==17882==    by 0x5096174: rb_obj_write (ruby.h:1543)
==17882==    by 0x5096174: rb_vm_block_copy (vm.c:868)
==17882==    by 0x5096174: proc_create (vm.c:888)
==17882==    by 0x5096174: rb_proc_dup (vm.c:903)
==17882==    by 0x4FBB341: rb_mod_define_method (proc.c:1980)
==17882==    by 0x4FBB341: rb_obj_define_method (proc.c:2027)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5096154: rb_obj_written (ruby.h:1526)
==17882==    by 0x5096154: rb_obj_write (ruby.h:1543)
==17882==    by 0x5096154: rb_vm_block_copy (vm.c:869)
==17882==    by 0x5096154: proc_create (vm.c:888)
==17882==    by 0x5096154: rb_proc_dup (vm.c:903)
==17882==    by 0x4FBB341: rb_mod_define_method (proc.c:1980)
==17882==    by 0x4FBB341: rb_obj_define_method (proc.c:2027)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50960E2: rb_obj_written (ruby.h:1526)
==17882==    by 0x50960E2: rb_obj_write (ruby.h:1543)
==17882==    by 0x50960E2: rb_vm_block_copy (vm.c:876)
==17882==    by 0x50960E2: proc_create (vm.c:888)
==17882==    by 0x50960E2: rb_proc_dup (vm.c:903)
==17882==    by 0x4FBB341: rb_mod_define_method (proc.c:1980)
==17882==    by 0x4FBB341: rb_obj_define_method (proc.c:2027)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50B1F93: rb_obj_written (ruby.h:1526)
==17882==    by 0x50B1F93: rb_obj_write (ruby.h:1543)
==17882==    by 0x50B1F93: rb_alias (vm_method.c:1625)
==17882==    by 0x50B201A: rb_mod_alias_method (vm_method.c:1659)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50B1F7D: rb_obj_written (ruby.h:1526)
==17882==    by 0x50B1F7D: rb_obj_write (ruby.h:1543)
==17882==    by 0x50B1F7D: rb_alias (vm_method.c:1626)
==17882==    by 0x50B201A: rb_mod_alias_method (vm_method.c:1659)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5089CA7: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089CA7: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089CA7: setup_const_entry (variable.c:2946)
==17882==    by 0x5089CA7: const_tbl_update (variable.c:2930)
==17882==    by 0x5089CA7: autoload_const_set (variable.c:2304)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5082B6F: autoload_reset (variable.c:2345)
==17882==    by 0x4F00DD4: rb_ensure (eval.c:1084)
==17882==    by 0x508B17D: rb_autoload_load (variable.c:2442)
==17882==    by 0x50A142C: vm_get_ev_const (vm_insnhelper.c:873)
==17882==    by 0x50A142C: vm_exec_core (insns.def:264)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5089C2B: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089C2B: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089C2B: setup_const_entry (variable.c:2947)
==17882==    by 0x5089C2B: const_tbl_update (variable.c:2937)
==17882==    by 0x5089C2B: autoload_const_set (variable.c:2304)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5082B6F: autoload_reset (variable.c:2345)
==17882==    by 0x4F00DD4: rb_ensure (eval.c:1084)
==17882==    by 0x508B17D: rb_autoload_load (variable.c:2442)
==17882==    by 0x50A142C: vm_get_ev_const (vm_insnhelper.c:873)
==17882==    by 0x50A142C: vm_exec_core (insns.def:264)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F52E9B: mark_marshal_compat_i (marshal.c:116)
==17882==    by 0x5022F17: st_general_foreach (st.c:1574)
==17882==    by 0x5022F17: st_foreach (st.c:1653)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x502F425: rb_enc_str_new (string.c:798)
==17882==    by 0x4F96337: parser_str_new (parse.y:5141)
==17882==    by 0x4FA6815: parse_string (parse.y:5998)
==17882==    by 0x4FA6815: parser_yylex (parse.y:7650)
==17882==    by 0x4FA6815: yylex (parse.y:8312)
==17882==    by 0x4FA6815: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xA55F9DF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xA55F9DF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xEEC35FF: ???
==17882==    by 0xEEC360B: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xEEC35FF: ???
==17882==    by 0xEEC360B: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x59610B: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x59610B: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x5021438: get_bin (st.c:367)
==17882==    by 0x5021438: find_table_entry_ind (st.c:900)
==17882==    by 0x5021438: st_lookup (st.c:1094)
==17882==    by 0x50845D7: gen_ivtbl_get (variable.c:1012)
==17882==    by 0x50845D7: rb_mark_generic_ivar (variable.c:1188)
==17882==    by 0x4F17DE1: gc_mark_children (gc.c:4690)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x502FF44: str_alloc (string.c:724)
==17882==    by 0x502FF44: str_new_frozen (string.c:1288)
==17882==    by 0x502F902: rb_str_dup_frozen (string.c:1206)
==17882==    by 0x502FA57: str_replace_shared_without_enc (string.c:1166)
==17882==    by 0x5035C7A: str_replace_shared (string.c:1179)
==17882==    by 0x5035C7A: str_replace (string.c:1488)
==17882==    by 0x5035C7A: rb_str_replace (string.c:5343)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x5021459: find_table_entry_ind (st.c:902)
==17882==    by 0x5021459: st_lookup (st.c:1094)
==17882==    by 0x50845D7: gen_ivtbl_get (variable.c:1012)
==17882==    by 0x50845D7: rb_mark_generic_ivar (variable.c:1188)
==17882==    by 0x4F17DE1: gc_mark_children (gc.c:4690)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x502FF44: str_alloc (string.c:724)
==17882==    by 0x502FF44: str_new_frozen (string.c:1288)
==17882==    by 0x502F902: rb_str_dup_frozen (string.c:1206)
==17882==    by 0x502FA57: str_replace_shared_without_enc (string.c:1166)
==17882==    by 0x5035C7A: str_replace_shared (string.c:1179)
==17882==    by 0x5035C7A: str_replace (string.c:1488)
==17882==    by 0x5035C7A: rb_str_replace (string.c:5343)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x50214BF: find_table_entry_ind (st.c:902)
==17882==    by 0x50214BF: st_lookup (st.c:1094)
==17882==    by 0x50845D7: gen_ivtbl_get (variable.c:1012)
==17882==    by 0x50845D7: rb_mark_generic_ivar (variable.c:1188)
==17882==    by 0x4F17DE1: gc_mark_children (gc.c:4690)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x502FF44: str_alloc (string.c:724)
==17882==    by 0x502FF44: str_new_frozen (string.c:1288)
==17882==    by 0x502F902: rb_str_dup_frozen (string.c:1206)
==17882==    by 0x502FA57: str_replace_shared_without_enc (string.c:1166)
==17882==    by 0x5035C7A: str_replace_shared (string.c:1179)
==17882==    by 0x5035C7A: str_replace (string.c:1488)
==17882==    by 0x5035C7A: rb_str_replace (string.c:5343)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4FF3B42: add_bitset (regcomp.c:296)
==17882==    by 0x4FF3B42: compile_cclass_node (regcomp.c:618)
==17882==    by 0x4FF3B42: compile_tree (regcomp.c:1733)
==17882==    by 0x4FF6391: onig_compile_ruby (regcomp.c:5879)
==17882==    by 0x4FE4F50: onig_new_with_source (re.c:850)
==17882==    by 0x4FE4F50: make_regexp (re.c:874)
==17882==    by 0x4FE4F50: rb_reg_initialize (re.c:2862)
==17882==    by 0x1FFEFFB80F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4FF3B42: add_bitset (regcomp.c:296)
==17882==    by 0x4FF3B42: compile_cclass_node (regcomp.c:618)
==17882==    by 0x4FF3B42: compile_tree (regcomp.c:1733)
==17882==    by 0x4FF6391: onig_compile_ruby (regcomp.c:5879)
==17882==    by 0x4FE4F50: onig_new_with_source (re.c:850)
==17882==    by 0x4FE4F50: make_regexp (re.c:874)
==17882==    by 0x4FE4F50: rb_reg_initialize (re.c:2862)
==17882==    by 0x1FFEFFB80F: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4FE8A70: rb_obj_written (ruby.h:1526)
==17882==    by 0x4FE8A70: rb_obj_write (ruby.h:1543)
==17882==    by 0x4FE8A70: reg_set_source (re.c:2877)
==17882==    by 0x4FE8A70: rb_reg_initialize_str (re.c:2899)
==17882==    by 0x4FE8A70: rb_reg_compile (re.c:2986)
==17882==    by 0x4FACA16: parser_reg_compile (parse.y:10706)
==17882==    by 0x4FACA16: reg_compile (parse.y:10722)
==17882==    by 0x4FACA16: new_regexp (parse.y:8866)
==17882==    by 0x4FACA16: ruby_yyparse (parse.y:3471)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882==    by 0x4F50E3A: rb_load_internal (load.c:643)
==17882==    by 0x4F50E3A: rb_f_load (load.c:711)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5035D88: rb_obj_written (ruby.h:1526)
==17882==    by 0x5035D88: rb_obj_write (ruby.h:1543)
==17882==    by 0x5035D88: str_replace (string.c:1484)
==17882==    by 0x5035D88: rb_str_replace (string.c:5343)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F87EDD: rb_obj_init_dup_clone (object.c:632)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BF0F: rb_obj_dup (object.c:535)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6F8C3: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6F8C3: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6F8C3: ary_memcpy0 (array.c:261)
==17882==    by 0x4E6F8C3: rb_ary_unshift_m (array.c:1444)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50845FE: gen_ivtbl_mark (variable.c:1179)
==17882==    by 0x50845FE: rb_mark_generic_ivar (variable.c:1189)
==17882==    by 0x4F17DE1: gc_mark_children (gc.c:4690)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4FE8247: rb_reg_s_alloc (re.c:2906)
==17882==    by 0x4FE8247: rb_reg_alloc (re.c:2918)
==17882==    by 0x4FE8892: rb_reg_compile (re.c:2982)
==17882==    by 0x4FACA16: parser_reg_compile (parse.y:10706)
==17882==    by 0x4FACA16: reg_compile (parse.y:10722)
==17882==    by 0x4FACA16: new_regexp (parse.y:8866)
==17882==    by 0x4FACA16: ruby_yyparse (parse.y:3471)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A4B: is_pointer_to_heap (gc.c:2119)
==17882==    by 0x4F17A4B: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A4B: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17E38: gc_mark_imemo (gc.c:4666)
==17882==    by 0x4F17E38: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A58: is_pointer_to_heap (gc.c:2119)
==17882==    by 0x4F17A58: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A58: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17E38: gc_mark_imemo (gc.c:4666)
==17882==    by 0x4F17E38: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A73: is_pointer_to_heap (gc.c:2120)
==17882==    by 0x4F17A73: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A73: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17E38: gc_mark_imemo (gc.c:4666)
==17882==    by 0x4F17E38: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17AB3: is_pointer_to_heap (gc.c:2128)
==17882==    by 0x4F17AB3: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17AB3: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17E38: gc_mark_imemo (gc.c:4666)
==17882==    by 0x4F17E38: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A8F: is_pointer_to_heap (gc.c:2129)
==17882==    by 0x4F17A8F: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A8F: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17E38: gc_mark_imemo (gc.c:4666)
==17882==    by 0x4F17E38: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17ACE: is_pointer_to_heap (gc.c:2128)
==17882==    by 0x4F17ACE: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17ACE: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17E38: gc_mark_imemo (gc.c:4666)
==17882==    by 0x4F17E38: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17AD8: gc_mark_maybe (gc.c:4437)
==17882==    by 0x4F17AD8: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17E38: gc_mark_imemo (gc.c:4666)
==17882==    by 0x4F17E38: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x4F34BDE: rb_io_getline_fast (io.c:3300)
==17882==    by 0x4F34BDE: rb_io_getline_0 (io.c:3437)
==17882==    by 0x4F97CA4: lex_getline (parse.y:4991)
==17882==    by 0x4F97CA4: nextline (parse.y:5189)
==17882==    by 0x4F97CA4: nextc (parse.y:5231)
==17882==    by 0x4FA65BA: parser_yylex (parse.y:7661)
==17882==    by 0x4FA65BA: yylex (parse.y:8312)
==17882==    by 0x4FA65BA: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50438E3: rb_str_hash_cmp (string.c:3153)
==17882==    by 0x670E1BF: ???
==17882==    by 0x1FFEFFCA8F: ???
==17882==    by 0xC30: ???
==17882==    by 0x6559277: ???
==17882==    by 0x670D8FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x50438E3: rb_str_hash_cmp (string.c:3153)
==17882==    by 0x670E1BF: ???
==17882==    by 0x1FFEFFCA8F: ???
==17882==    by 0xC30: ???
==17882==    by 0x6559277: ???
==17882==    by 0x670D8FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFFB6EF: ???
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882==    by 0x4F239DD: ar_update (hash.c:842)
==17882==    by 0x4F240E6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F240E6: tbl_update (hash.c:1421)
==17882==    by 0x4F240E6: rb_hash_aset (hash.c:2562)
==17882==    by 0x6558FCF: ???
==17882==    by 0x65587FF: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x6559277: ???
==17882==    by 0x65587FF: ???
==17882==    by 0x66E5FDF: ???
==17882==    by 0x11E0800F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFFB6EF: ???
==17882==    by 0x4F23114: rb_hash (hash.c:130)
==17882==    by 0x4F239DD: ar_update (hash.c:842)
==17882==    by 0x4F240E6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F240E6: tbl_update (hash.c:1421)
==17882==    by 0x4F240E6: rb_hash_aset (hash.c:2562)
==17882==    by 0x6558FCF: ???
==17882==    by 0x65587FF: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x6559277: ???
==17882==    by 0x65587FF: ???
==17882==    by 0x66E5FDF: ???
==17882==    by 0x11E0800F: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50987F4: rb_execution_context_mark (vm.c:2492)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x508CEC6: thread_mark (vm.c:2523)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x508CEDF: thread_mark (vm.c:2524)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508DF75: svar_new (vm_insnhelper.c:473)
==17882==    by 0x508DF75: lep_svar_set (vm_insnhelper.c:482)
==17882==    by 0x4FE653B: rb_reg_search0 (re.c:1547)
==17882==    by 0x5042630: str_gsub (string.c:5158)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x18AD7A26: ???
==17882==    by 0x18AD7A25: ???
==17882==    by 0x18AD7A0F: ???
==17882==    by 0x1F00000000: ???
==17882==    by 0xA275FEC: ???
==17882==    by 0x18AD7A27: ???
==17882==    by 0x18AD7A26: ???
==17882==    by 0x18AD7A0F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x18AD7A26: ???
==17882==    by 0x18AD7A25: ???
==17882==    by 0x18AD7A0F: ???
==17882==    by 0x1F00000000: ???
==17882==    by 0xA275FEC: ???
==17882==    by 0x18AD7A27: ???
==17882==    by 0x18AD7A26: ???
==17882==    by 0x18AD7A0F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x66B59F7: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x66B59F7: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E9AA9A: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E9AA9A: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E9AA9A: RCLASS_SET_SUPER (internal.h:1024)
==17882==    by 0x4E9AA9A: include_modules_at (class.c:914)
==17882==    by 0x4E9AB77: rb_include_module (class.c:870)
==17882==    by 0x4EFDB52: rb_mod_append_features (eval.c:1216)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDEA6: rb_mod_include (eval.c:1241)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1B024: rgengc_rememberset_mark (gc.c:6011)
==17882==    by 0x4F1B024: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B024: gc_marks (gc.c:5854)
==17882==    by 0x4F1B024: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0x4EA1944: compile_data_alloc (compile.c:860)
==17882==    by 0x4EA1944: compile_data_alloc_insn (compile.c:883)
==17882==    by 0x4EA1944: new_insn_core (compile.c:1143)
==17882==    by 0x4EA1944: new_insn_body.constprop.141 (compile.c:1173)
==17882==    by 0x4EAB82C: compile_evstr (compile.c:5878)
==17882==    by 0x4EAB82C: iseq_compile_each0 (compile.c:7064)
==17882==    by 0x4EB632F: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB632F: compile_dstr_fragments (compile.c:3703)
==17882==    by 0x4EB659A: compile_dstr (compile.c:3721)
==17882==    by 0x4EABA7B: iseq_compile_each0 (compile.c:7026)
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882==    by 0x4EB9684: setup_args (compile.c:4871)
==17882==    by 0x4EA8910: iseq_compile_each0 (compile.c:6611)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1B03C: rgengc_rememberset_mark (gc.c:6015)
==17882==    by 0x4F1B03C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B03C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B03C: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0x4EA1944: compile_data_alloc (compile.c:860)
==17882==    by 0x4EA1944: compile_data_alloc_insn (compile.c:883)
==17882==    by 0x4EA1944: new_insn_core (compile.c:1143)
==17882==    by 0x4EA1944: new_insn_body.constprop.141 (compile.c:1173)
==17882==    by 0x4EAB82C: compile_evstr (compile.c:5878)
==17882==    by 0x4EAB82C: iseq_compile_each0 (compile.c:7064)
==17882==    by 0x4EB632F: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB632F: compile_dstr_fragments (compile.c:3703)
==17882==    by 0x4EB659A: compile_dstr (compile.c:3721)
==17882==    by 0x4EABA7B: iseq_compile_each0 (compile.c:7026)
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882==    by 0x4EB9684: setup_args (compile.c:4871)
==17882==    by 0x4EA8910: iseq_compile_each0 (compile.c:6611)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1B037: rgengc_rememberset_mark (gc.c:6025)
==17882==    by 0x4F1B037: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B037: gc_marks (gc.c:5854)
==17882==    by 0x4F1B037: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0x4EA1944: compile_data_alloc (compile.c:860)
==17882==    by 0x4EA1944: compile_data_alloc_insn (compile.c:883)
==17882==    by 0x4EA1944: new_insn_core (compile.c:1143)
==17882==    by 0x4EA1944: new_insn_body.constprop.141 (compile.c:1173)
==17882==    by 0x4EAB82C: compile_evstr (compile.c:5878)
==17882==    by 0x4EAB82C: iseq_compile_each0 (compile.c:7064)
==17882==    by 0x4EB632F: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB632F: compile_dstr_fragments (compile.c:3703)
==17882==    by 0x4EB659A: compile_dstr (compile.c:3721)
==17882==    by 0x4EABA7B: iseq_compile_each0 (compile.c:7026)
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882==    by 0x4EB9684: setup_args (compile.c:4871)
==17882==    by 0x4EA8910: iseq_compile_each0 (compile.c:6611)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1B050: rgengc_rememberset_mark (gc.c:6025)
==17882==    by 0x4F1B050: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B050: gc_marks (gc.c:5854)
==17882==    by 0x4F1B050: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0x4EA1944: compile_data_alloc (compile.c:860)
==17882==    by 0x4EA1944: compile_data_alloc_insn (compile.c:883)
==17882==    by 0x4EA1944: new_insn_core (compile.c:1143)
==17882==    by 0x4EA1944: new_insn_body.constprop.141 (compile.c:1173)
==17882==    by 0x4EAB82C: compile_evstr (compile.c:5878)
==17882==    by 0x4EAB82C: iseq_compile_each0 (compile.c:7064)
==17882==    by 0x4EB632F: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB632F: compile_dstr_fragments (compile.c:3703)
==17882==    by 0x4EB659A: compile_dstr (compile.c:3721)
==17882==    by 0x4EABA7B: iseq_compile_each0 (compile.c:7026)
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882==    by 0x4EB9684: setup_args (compile.c:4871)
==17882==    by 0x4EA8910: iseq_compile_each0 (compile.c:6611)
==17882== 
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1DBA073F: ???
==17882==    by 0x50C59BF: ??? (in /usr/local/rvm/rubies/ruby-head-opt/lib/libruby.so.2.6.3)
==17882==    by 0x1DB78B2F: ???
==17882==    by 0x1F624ADF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1DBA073F: ???
==17882==    by 0x50C59BF: ??? (in /usr/local/rvm/rubies/ruby-head-opt/lib/libruby.so.2.6.3)
==17882==    by 0x1DB78B2F: ???
==17882==    by 0x1F624ADF: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A4B: is_pointer_to_heap (gc.c:2119)
==17882==    by 0x4F17A4B: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A4B: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508EE0A: vm_cref_new0 (vm.c:212)
==17882==    by 0x508EE0A: vm_cref_new (vm.c:223)
==17882==    by 0x508EE0A: vm_cref_push (vm_insnhelper.c:778)
==17882==    by 0x50A5A71: yield_under (vm_eval.c:1577)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A58: is_pointer_to_heap (gc.c:2119)
==17882==    by 0x4F17A58: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A58: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508EE0A: vm_cref_new0 (vm.c:212)
==17882==    by 0x508EE0A: vm_cref_new (vm.c:223)
==17882==    by 0x508EE0A: vm_cref_push (vm_insnhelper.c:778)
==17882==    by 0x50A5A71: yield_under (vm_eval.c:1577)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A73: is_pointer_to_heap (gc.c:2120)
==17882==    by 0x4F17A73: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A73: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508EE0A: vm_cref_new0 (vm.c:212)
==17882==    by 0x508EE0A: vm_cref_new (vm.c:223)
==17882==    by 0x508EE0A: vm_cref_push (vm_insnhelper.c:778)
==17882==    by 0x50A5A71: yield_under (vm_eval.c:1577)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17AB3: is_pointer_to_heap (gc.c:2128)
==17882==    by 0x4F17AB3: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17AB3: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508EE0A: vm_cref_new0 (vm.c:212)
==17882==    by 0x508EE0A: vm_cref_new (vm.c:223)
==17882==    by 0x508EE0A: vm_cref_push (vm_insnhelper.c:778)
==17882==    by 0x50A5A71: yield_under (vm_eval.c:1577)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17ACE: is_pointer_to_heap (gc.c:2128)
==17882==    by 0x4F17ACE: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17ACE: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508EE0A: vm_cref_new0 (vm.c:212)
==17882==    by 0x508EE0A: vm_cref_new (vm.c:223)
==17882==    by 0x508EE0A: vm_cref_push (vm_insnhelper.c:778)
==17882==    by 0x50A5A71: yield_under (vm_eval.c:1577)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F17A8F: is_pointer_to_heap (gc.c:2129)
==17882==    by 0x4F17A8F: gc_mark_maybe (gc.c:4431)
==17882==    by 0x4F17A8F: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508EE0A: vm_cref_new0 (vm.c:212)
==17882==    by 0x508EE0A: vm_cref_new (vm.c:223)
==17882==    by 0x508EE0A: vm_cref_push (vm_insnhelper.c:778)
==17882==    by 0x50A5A71: yield_under (vm_eval.c:1577)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17AD8: gc_mark_maybe (gc.c:4437)
==17882==    by 0x4F17AD8: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x508EE0A: vm_cref_new0 (vm.c:212)
==17882==    by 0x508EE0A: vm_cref_new (vm.c:223)
==17882==    by 0x508EE0A: vm_cref_push (vm_insnhelper.c:778)
==17882==    by 0x50A5A71: yield_under (vm_eval.c:1577)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4EDF9D8: rb_enc_get (encoding.c:881)
==17882==    by 0x4F1758D: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1180)
==17882==    by 0x4F1758D: gc_aging (gc.c:4558)
==17882==    by 0x4F1758D: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x6558FCF: ???
==17882==    by 0x1F63C0A7: ???
==17882==    by 0x5F70: ???
==17882==    by 0xBC0: ???
==17882==    by 0x14276DDF: ???
==17882==    by 0x14276DDF: ???
==17882==    by 0x4F175A4: rgengc_check_relation (gc.c:1180)
==17882==    by 0x4F175A4: gc_mark_ptr (gc.c:4573)
==17882==    by 0x50213F2: do_hash (st.c:325)
==17882==    by 0x50213F2: st_lookup (st.c:1083)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF822F: ???
==17882==    by 0x66AEB2F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x66AEB57: ???
==17882==    by 0x5960: ???
==17882==    by 0x6559277: ???
==17882==    by 0x66AEB2F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF822F: ???
==17882==    by 0x66AEB2F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x66AEB57: ???
==17882==    by 0x5960: ???
==17882==    by 0x6559277: ???
==17882==    by 0x66AEB2F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xC310B: ???
==17882==    by 0x13: ???
==17882==    by 0x670D8FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xC310B: ???
==17882==    by 0x13: ???
==17882==    by 0x670D8FF: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x5030009: rb_obj_written (ruby.h:1526)
==17882==    by 0x5030009: rb_obj_write (ruby.h:1543)
==17882==    by 0x5030009: str_new_frozen (string.c:1295)
==17882==    by 0x5030321: fstr_update_callback (string.c:291)
==17882==    by 0x5022D91: st_update (st.c:1510)
==17882==    by 0x5029D18: register_fstring (string.c:344)
==17882==    by 0x502FC17: rb_fstring (string.c:326)
==17882==    by 0x4F491D7: rb_iseq_pathobj_new (iseq.c:374)
==17882==    by 0x4F491D7: rb_iseq_pathobj_set (iseq.c:387)
==17882==    by 0x4F491D7: iseq_location_setup (iseq.c:396)
==17882==    by 0x4F491D7: prepare_iseq_build (iseq.c:457)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4F4E808: rb_iseq_new_top (iseq.c:687)
==17882==    by 0x4F50D01: rb_load_internal0 (load.c:607)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x502FAEF: rb_obj_written (ruby.h:1526)
==17882==    by 0x502FAEF: rb_obj_write (ruby.h:1543)
==17882==    by 0x502FAEF: str_replace_shared_without_enc (string.c:1171)
==17882==    by 0x502FC22: rb_fstring (string.c:329)
==17882==    by 0x4F491D7: rb_iseq_pathobj_new (iseq.c:374)
==17882==    by 0x4F491D7: rb_iseq_pathobj_set (iseq.c:387)
==17882==    by 0x4F491D7: iseq_location_setup (iseq.c:396)
==17882==    by 0x4F491D7: prepare_iseq_build (iseq.c:457)
==17882==    by 0x4F4E514: rb_iseq_new_with_opt (iseq.c:726)
==17882==    by 0x4F4E808: rb_iseq_new_top (iseq.c:687)
==17882==    by 0x4F50D01: rb_load_internal0 (load.c:607)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F0E195: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F0E195: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F0E195: copy_path_class (file.c:6017)
==17882==    by 0x4F0E195: rb_find_file_safe (file.c:6123)
==17882==    by 0x4F5200A: search_required (load.c:859)
==17882==    by 0x4F5273E: rb_require_internal (load.c:1015)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F14F73: rb_gc_force_recycle (gc.c:6350)
==17882==    by 0x501DF06: rb_str_format (sprintf.c:1184)
==17882==    by 0x502AF19: rb_str_format_m (string.c:2017)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E73D49: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E73D49: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E73D49: ary_memcpy0 (array.c:261)
==17882==    by 0x4E73D49: rb_ary_cat (array.c:1169)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4EE93F7: each_slice_i (enum.c:2429)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4FB6BAB: bm_mark (proc.c:1317)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1CDB3: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1CDB3: gc_marks_step (gc.c:5771)
==17882==    by 0x4F1CDB3: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CDB3: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CDB3: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F97983: local_tbl (parse.y:10413)
==17882==    by 0x4FAAF40: ruby_yyparse (parse.y:3339)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4E71136: rb_array_ptr_use_end (ruby.h:2189)
==17882==    by 0x4E71136: rb_ary_push (array.c:1156)
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0xFFFFFFFFFFFFFFFC: ???
==17882==    by 0x4EA3EDE: new_insn_send.constprop.136 (compile.c:1208)
==17882==    by 0x6558FCF: ???
==17882==    by 0x62D60F6A4D167EFF: ???
==17882==    by 0x1D50A0FF: ???
==17882==    by 0x10C58BF7: ???
==17882==    by 0x4F17895: gc_mark (gc.c:4588)
==17882==    by 0x4F17895: mark_keyvalue (gc.c:4247)
==17882==    by 0x6: ???
==17882==    by 0x6558FCF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFF000687: ???
==17882==    by 0x6D727F8FFFFFFFFE: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x1304A0A7: ???
==17882==    by 0x1B72C227: ???
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1900D: gc_marks_wb_unprotected_objects (gc.c:5605)
==17882==    by 0x4F1900D: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882== 
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
--17882-- WARNING: unhandled amd64-linux syscall: 326
--17882-- You may be able to write your own handler.
--17882-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--17882-- Nevertheless we consider this a bug.  Please report
--17882-- it at http://valgrind.org/support/bug_reports.html.
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4EEB197: enum_yield (enum.c:51)
==17882==    by 0x4EEB197: find_i (enum.c:258)
==17882==    by 0x5096649: vm_yield_with_cfunc.isra.368 (vm_insnhelper.c:2543)
==17882==    by 0x50A52C8: invoke_block_from_c_bh (vm.c:1115)
==17882==    by 0x50A52C8: vm_yield (vm.c:1155)
==17882==    by 0x50A52C8: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A52C8: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A52C8: rb_yield (vm_eval.c:994)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F8BAA3: rb_class_alloc (object.c:2133)
==17882==    by 0x4F8BAA3: rb_class_s_new (object.c:2186)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4EEB197: enum_yield (enum.c:51)
==17882==    by 0x4EEB197: find_i (enum.c:258)
==17882==    by 0x5096649: vm_yield_with_cfunc.isra.368 (vm_insnhelper.c:2543)
==17882==    by 0x50A52C8: invoke_block_from_c_bh (vm.c:1115)
==17882==    by 0x50A52C8: vm_yield (vm.c:1155)
==17882==    by 0x50A52C8: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A52C8: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A52C8: rb_yield (vm_eval.c:994)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F8BAA3: rb_class_alloc (object.c:2133)
==17882==    by 0x4F8BAA3: rb_class_s_new (object.c:2186)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x505DA20: blocking_region_begin.constprop.74 (thread.c:1399)
==17882==    by 0x505F305: rb_native_mutex_unlock (thread_pthread.c:413)
==17882==    by 0x505F305: gvl_acquire (thread_pthread.c:283)
==17882==    by 0x505F305: blocking_region_end (thread.c:1415)
==17882==    by 0x505F305: call_without_gvl (thread.c:1442)
==17882==    by 0x505F305: rb_thread_call_without_gvl (thread.c:1556)
==17882==    by 0x5099538: args_rest_array (vm_args.c:181)
==17882==    by 0x5099538: args_setup_rest_parameter (vm_args.c:357)
==17882==    by 0x5099538: setup_parameters_complex (vm_args.c:656)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x505DA20: blocking_region_begin.constprop.74 (thread.c:1399)
==17882==    by 0x505F305: rb_native_mutex_unlock (thread_pthread.c:413)
==17882==    by 0x505F305: gvl_acquire (thread_pthread.c:283)
==17882==    by 0x505F305: blocking_region_end (thread.c:1415)
==17882==    by 0x505F305: call_without_gvl (thread.c:1442)
==17882==    by 0x505F305: rb_thread_call_without_gvl (thread.c:1556)
==17882==    by 0x5099538: args_rest_array (vm_args.c:181)
==17882==    by 0x5099538: args_setup_rest_parameter (vm_args.c:357)
==17882==    by 0x5099538: setup_parameters_complex (vm_args.c:656)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x243E0687: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x243E0687: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F24063: rb_hash_stlike_update (hash.c:1393)
==17882==    by 0x4F24063: tbl_update (hash.c:1418)
==17882==    by 0x4F24063: rb_hash_aset (hash.c:2562)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x6668607: ???
==17882==    by 0x666745F: ???
==17882==    by 0x6: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0x5038CC7: rb_str_init (string.c:1599)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F88E17: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F88E17: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F88E17: rb_module_s_alloc (object.c:1972)
==17882==    by 0x4F8BAA3: rb_class_alloc (object.c:2133)
==17882==    by 0x4F8BAA3: rb_class_s_new (object.c:2186)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E922B5: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E922B5: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E922B5: RCLASS_SET_SUPER (internal.h:1024)
==17882==    by 0x4E922B5: rb_class_boot (class.c:205)
==17882==    by 0x4E939FA: make_singleton_class (class.c:523)
==17882==    by 0x4E939FA: rb_make_metaclass (class.c:583)
==17882==    by 0x4E9BBC3: singleton_class_of (class.c:1611)
==17882==    by 0x4E9BBC3: rb_singleton_class (class.c:1680)
==17882==    by 0x4F03C68: rb_extend_object (eval.c:1640)
==17882==    by 0x4F03C8E: rb_mod_extend_object (eval.c:1673)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDA56: rb_obj_extend (eval.c:1715)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E93A85: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E93A85: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E93A85: make_singleton_class (class.c:529)
==17882==    by 0x4E93A85: rb_make_metaclass (class.c:583)
==17882==    by 0x4E9BBC3: singleton_class_of (class.c:1611)
==17882==    by 0x4E9BBC3: rb_singleton_class (class.c:1680)
==17882==    by 0x4F03C68: rb_extend_object (eval.c:1640)
==17882==    by 0x4F03C8E: rb_mod_extend_object (eval.c:1673)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4EFDA56: rb_obj_extend (eval.c:1715)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x4F88825: rb_mod_initialize (object.c:2012)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F890F8: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F890F8: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F890F8: RCLASS_SET_SUPER (internal.h:1024)
==17882==    by 0x4F890F8: rb_class_initialize (object.c:2076)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x4F88825: rb_mod_initialize (object.c:2012)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E94383: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E94383: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E94383: make_metaclass (class.c:500)
==17882==    by 0x4E94383: rb_make_metaclass (class.c:580)
==17882==    by 0x4F8903A: rb_class_initialize (object.c:2077)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x4F88825: rb_mod_initialize (object.c:2012)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E93E47: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E93E47: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E93E47: make_metaclass (class.c:501)
==17882==    by 0x4E93E47: rb_make_metaclass (class.c:580)
==17882==    by 0x4F8903A: rb_class_initialize (object.c:2077)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x4F88825: rb_mod_initialize (object.c:2012)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E956D6: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E956D6: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E956D6: RCLASS_SET_SUPER (internal.h:1024)
==17882==    by 0x4E956D6: make_metaclass (class.c:506)
==17882==    by 0x4E956D6: rb_make_metaclass (class.c:580)
==17882==    by 0x4F8903A: rb_class_initialize (object.c:2077)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x4F88825: rb_mod_initialize (object.c:2012)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x675C03F: ???
==17882==    by 0x9040017FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5035358: memcpy (string3.h:51)
==17882==    by 0x5035358: str_buf_cat (string.c:2772)
==17882==    by 0x504096C: rb_enc_cr_str_buf_cat (string.c:2884)
==17882==    by 0x5043529: rb_str_concat_literals (string.c:2969)
==17882==    by 0xF0D3AC23: ???
==17882==    by 0x1E638AA7: ???
==17882==    by 0x670BE9F: ???
==17882==    by 0x4F1778D: gc_mark (gc.c:4588)
==17882==    by 0x4F1778D: mark_entry (gc.c:4210)
==17882==    by 0x5022F17: st_general_foreach (st.c:1574)
==17882==    by 0x5022F17: st_foreach (st.c:1653)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x5035358: memcpy (string3.h:51)
==17882==    by 0x5035358: str_buf_cat (string.c:2772)
==17882==    by 0x504096C: rb_enc_cr_str_buf_cat (string.c:2884)
==17882==    by 0x5043529: rb_str_concat_literals (string.c:2969)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D45D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D45D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D45D: newobj_slowpath_wb_unprotected (gc.c:1935)
==17882==    by 0x4FE65DB: match_alloc (re.c:939)
==17882==    by 0x4FE65DB: rb_reg_search0 (re.c:1601)
==17882==    by 0x504289B: str_gsub (string.c:5239)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x6715717: ???
==17882==    by 0x670F817: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x6658157: ???
==17882==    by 0x1A119087: ???
==17882==    by 0x6715717: ???
==17882==    by 0x1CAB7327: ???
==17882==    by 0x6658157: ???
==17882==    by 0x5094656: rb_vm_search_method_slowpath (vm_insnhelper.c:1323)
==17882==    by 0x5094C7B: vm_search_method (vm_insnhelper.c:1352)
==17882==    by 0x5094C7B: vm_method_cfunc_is (vm_insnhelper.c:1371)
==17882==    by 0x5094C7B: opt_equal_fallback (vm_insnhelper.c:1378)
==17882==    by 0x5094C7B: opt_eq_func (vm_insnhelper.c:1431)
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x6715717: ???
==17882==    by 0x670F817: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x6658157: ???
==17882==    by 0x1A119087: ???
==17882==    by 0x6715717: ???
==17882==    by 0x1CAB7327: ???
==17882==    by 0x6658157: ???
==17882==    by 0x5094656: rb_vm_search_method_slowpath (vm_insnhelper.c:1323)
==17882==    by 0x5094C7B: vm_search_method (vm_insnhelper.c:1352)
==17882==    by 0x5094C7B: vm_method_cfunc_is (vm_insnhelper.c:1371)
==17882==    by 0x5094C7B: opt_equal_fallback (vm_insnhelper.c:1378)
==17882==    by 0x5094C7B: opt_eq_func (vm_insnhelper.c:1431)
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x6B40: ???
==17882==    by 0x1FFEFF96BF: ???
==17882==    by 0x20A27B7F: ???
==17882==    by 0x21B1F157: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x6B40: ???
==17882==    by 0x1FFEFF96BF: ???
==17882==    by 0x20A27B7F: ???
==17882==    by 0x21B1F157: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xAD687BF: ???
==17882==    by 0x1FFEFF9C1F: ???
==17882==    by 0x50A437F: vm_exec_handle_exception (vm.c:1964)
==17882==    by 0x50A437F: rb_vm_exec (vm.c:1892)
==17882==    by 0x1FFEFF9A8F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x7C0AA: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x22220097: ???
==17882==    by 0x6657EB7: ???
==17882==    by 0x6559277: ???
==17882==    by 0x223D784F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xAD687BF: ???
==17882==    by 0x1FFEFF9C1F: ???
==17882==    by 0x50A437F: vm_exec_handle_exception (vm.c:1964)
==17882==    by 0x50A437F: rb_vm_exec (vm.c:1892)
==17882==    by 0x1FFEFF9A8F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x7C0AA: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x22220097: ???
==17882==    by 0x6657EB7: ???
==17882==    by 0x6559277: ???
==17882==    by 0x223D784F: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F194B8: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F194B8: gc_writebarrier_incremental (gc.c:6123)
==17882==    by 0x4E733EF: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E733EF: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E733EF: rb_ary_store (array.c:1062)
==17882==    by 0x504F349: set_id_entry (symbol.c:374)
==17882==    by 0x504F349: rb_sym2id (symbol.c:750)
==17882==    by 0x504F4D9: rb_intern3 (symbol.c:599)
==17882==    by 0x4FAD083: tokenize_ident (parse.y:7368)
==17882==    by 0x4FAD083: parse_ident (parse.y:7623)
==17882==    by 0x4FAD083: parser_yylex (parse.y:8302)
==17882==    by 0x4FAD083: yylex (parse.y:8312)
==17882==    by 0x4FAD083: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F194C5: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F194C5: gc_writebarrier_incremental (gc.c:6123)
==17882==    by 0x4E733EF: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E733EF: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E733EF: rb_ary_store (array.c:1062)
==17882==    by 0x504F349: set_id_entry (symbol.c:374)
==17882==    by 0x504F349: rb_sym2id (symbol.c:750)
==17882==    by 0x504F4D9: rb_intern3 (symbol.c:599)
==17882==    by 0x4FAD083: tokenize_ident (parse.y:7368)
==17882==    by 0x4FAD083: parse_ident (parse.y:7623)
==17882==    by 0x4FAD083: parser_yylex (parse.y:8302)
==17882==    by 0x4FAD083: yylex (parse.y:8312)
==17882==    by 0x4FAD083: ruby_yyparse (parse.c:5264)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF7D0F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF7D0F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882==    by 0x4EB9684: setup_args (compile.c:4871)
==17882==    by 0x1FFF000FFF: ???
==17882==    by 0x1FFEFF7D8F: ???
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFF7E7F: ???
==17882==    by 0x4F17BD4: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD4: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD4: mark_current_machine_context (gc.c:4390)
==17882==    by 0xFA7: ???
==17882==    by 0x1101: ???
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0xF0927EF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882==    by 0x4EB9684: setup_args (compile.c:4871)
==17882==    by 0x1FFF000FFF: ???
==17882==    by 0x1FFEFF7D8F: ???
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFF7E7F: ???
==17882==    by 0x4F17BD4: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD4: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD4: mark_current_machine_context (gc.c:4390)
==17882==    by 0xFA7: ???
==17882==    by 0x1101: ???
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0xF0927EF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xF: ???
==17882==    by 0x1101: ???
==17882==    by 0x58057EFF: ??? (mc_malloc_wrappers.c:553)
==17882==    by 0x16F05F6F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xF: ???
==17882==    by 0x1101: ???
==17882==    by 0x58057EFF: ??? (mc_malloc_wrappers.c:553)
==17882==    by 0x16F05F6F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x8000001FFFF: ???
==17882==    by 0x1FFEFF9C4F: ???
==17882==    by 0x50A6741: invoke_iseq_block_from_c (vm.c:1095)
==17882==    by 0x50A6741: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6741: rb_vm_invoke_bmethod (vm.c:1217)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x8000001FFFF: ???
==17882==    by 0x1FFEFF9C4F: ???
==17882==    by 0x50A6741: invoke_iseq_block_from_c (vm.c:1095)
==17882==    by 0x50A6741: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6741: rb_vm_invoke_bmethod (vm.c:1217)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF7DCF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF7DCF: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E978F3: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E978F3: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E978F3: make_metaclass (class.c:500)
==17882==    by 0x4E978F3: rb_make_metaclass (class.c:580)
==17882==    by 0x4E978F3: rb_define_class_id (class.c:605)
==17882==    by 0x50A189C: vm_declare_class (vm_insnhelper.c:3109)
==17882==    by 0x50A189C: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A189C: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A189C: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E978F3: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E978F3: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E978F3: make_metaclass (class.c:500)
==17882==    by 0x4E978F3: rb_make_metaclass (class.c:580)
==17882==    by 0x4E978F3: rb_define_class_id (class.c:605)
==17882==    by 0x50A189C: vm_declare_class (vm_insnhelper.c:3109)
==17882==    by 0x50A189C: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A189C: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A189C: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19432: gc_writebarrier_incremental (gc.c:6112)
==17882==    by 0x5089237: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089237: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089237: setup_const_entry (variable.c:2946)
==17882==    by 0x5089237: const_tbl_update (variable.c:2937)
==17882==    by 0x5089237: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF866F: ???
==17882==    by 0x12E0: ???
==17882==    by 0x22A6801F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x22AA0DA7: ???
==17882==    by 0x6657DD7: ???
==17882==    by 0x6559277: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF866F: ???
==17882==    by 0x12E0: ???
==17882==    by 0x22A6801F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x22AA0DA7: ???
==17882==    by 0x6657DD7: ???
==17882==    by 0x6559277: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EEAF0A: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EEAF0A: rb_obj_write (ruby.h:1543)
==17882==    by 0x4EEAF0A: inject_i (enum.c:668)
==17882==    by 0x5096649: vm_yield_with_cfunc.isra.368 (vm_insnhelper.c:2543)
==17882==    by 0x50A52C8: invoke_block_from_c_bh (vm.c:1115)
==17882==    by 0x50A52C8: vm_yield (vm.c:1155)
==17882==    by 0x50A52C8: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A52C8: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A52C8: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4EE78F0: enum_inject (enum.c:839)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19432: gc_writebarrier_incremental (gc.c:6112)
==17882==    by 0x4EEAF0A: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EEAF0A: rb_obj_write (ruby.h:1543)
==17882==    by 0x4EEAF0A: inject_i (enum.c:668)
==17882==    by 0x5096649: vm_yield_with_cfunc.isra.368 (vm_insnhelper.c:2543)
==17882==    by 0x50A52C8: invoke_block_from_c_bh (vm.c:1115)
==17882==    by 0x50A52C8: vm_yield (vm.c:1155)
==17882==    by 0x50A52C8: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A52C8: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A52C8: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4EE78F0: enum_inject (enum.c:839)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x22A6801F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x22A6801F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1F00000005: ???
==17882==    by 0x7E331172893F54AF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1F00000005: ???
==17882==    by 0x7E331172893F54AF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF88CF: ???
==17882==    by 0x22B6017F: ???
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC53D: rb_iseq_compile_node (compile.c:666)
==17882==    by 0x1101: ???
==17882==    by 0x58057EFF: ??? (mc_malloc_wrappers.c:553)
==17882==    by 0x223A20BF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF88CF: ???
==17882==    by 0x22B6017F: ???
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC53D: rb_iseq_compile_node (compile.c:666)
==17882==    by 0x1101: ???
==17882==    by 0x58057EFF: ??? (mc_malloc_wrappers.c:553)
==17882==    by 0x223A20BF: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19432: gc_writebarrier_incremental (gc.c:6112)
==17882==    by 0x5089217: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089217: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089217: setup_const_entry (variable.c:2947)
==17882==    by 0x5089217: const_tbl_update (variable.c:2937)
==17882==    by 0x5089217: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F194B8: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F194B8: gc_writebarrier_incremental (gc.c:6123)
==17882==    by 0x5089217: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089217: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089217: setup_const_entry (variable.c:2947)
==17882==    by 0x5089217: const_tbl_update (variable.c:2937)
==17882==    by 0x5089217: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F194C5: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F194C5: gc_writebarrier_incremental (gc.c:6123)
==17882==    by 0x5089217: rb_obj_written (ruby.h:1526)
==17882==    by 0x5089217: rb_obj_write (ruby.h:1543)
==17882==    by 0x5089217: setup_const_entry (variable.c:2947)
==17882==    by 0x5089217: const_tbl_update (variable.c:2937)
==17882==    by 0x5089217: rb_const_set (variable.c:2845)
==17882==    by 0x50A18C3: vm_declare_class (vm_insnhelper.c:3112)
==17882==    by 0x50A18C3: vm_define_class (vm_insnhelper.c:3146)
==17882==    by 0x50A18C3: vm_find_or_create_class_by_id (vm_insnhelper.c:3175)
==17882==    by 0x50A18C3: vm_exec_core (insns.def:718)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F52A50: rb_require_internal (load.c:1029)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x675C027: ???
==17882==    by 0x6812007: ???
==17882==    by 0x675C03F: ???
==17882==    by 0x1FFEFF83EF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x675C027: ???
==17882==    by 0x6812007: ???
==17882==    by 0x675C03F: ???
==17882==    by 0x1FFEFF83EF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x508B5A9: rb_const_search (variable.c:2505)
==17882==    by 0x508B5A9: rb_const_get_0 (variable.c:2481)
==17882==    by 0x508B5A9: rb_const_get (variable.c:2542)
==17882==    by 0x4F8A525: rb_mod_const_get (object.c:2533)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0xD: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x508B5A9: rb_const_search (variable.c:2505)
==17882==    by 0x508B5A9: rb_const_get_0 (variable.c:2481)
==17882==    by 0x508B5A9: rb_const_get (variable.c:2542)
==17882==    by 0x4F8A525: rb_mod_const_get (object.c:2533)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0xD: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1D642DAF: ???
==17882==    by 0x1B7D60BF: ???
==17882==    by 0x67157B7: ???
==17882==    by 0x22ADA787: ???
==17882==    by 0x17536467: ???
==17882==    by 0x1EC0728F: ???
==17882==    by 0x6559277: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1D642DAF: ???
==17882==    by 0x1B7D60BF: ???
==17882==    by 0x67157B7: ???
==17882==    by 0x22ADA787: ???
==17882==    by 0x17536467: ???
==17882==    by 0x1EC0728F: ???
==17882==    by 0x6559277: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xC57CC8F: ???
==17882==    by 0xC57CF77: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0xC57CF4F: ???
==17882==    by 0x66577EF: ???
==17882==    by 0x1FFEFF822F: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFF814F: ???
==17882==    by 0x1FFEFF8577: ???
==17882==    by 0x22ADA787: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xC57CC8F: ???
==17882==    by 0xC57CF77: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0xC57CF4F: ???
==17882==    by 0x66577EF: ???
==17882==    by 0x1FFEFF822F: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFF814F: ???
==17882==    by 0x1FFEFF8577: ???
==17882==    by 0x22ADA787: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50B1F93: rb_obj_written (ruby.h:1526)
==17882==    by 0x50B1F93: rb_obj_write (ruby.h:1543)
==17882==    by 0x50B1F93: rb_alias (vm_method.c:1625)
==17882==    by 0x50B201A: rb_mod_alias_method (vm_method.c:1659)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A61A9: invoke_bmethod.isra.389 (vm.c:1051)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x50B1F7D: rb_obj_written (ruby.h:1526)
==17882==    by 0x50B1F7D: rb_obj_write (ruby.h:1543)
==17882==    by 0x50B1F7D: rb_alias (vm_method.c:1626)
==17882==    by 0x50B201A: rb_mod_alias_method (vm_method.c:1659)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x50A8D1B: specific_eval (vm_eval.c:1617)
==17882==    by 0x50A8D1B: rb_mod_module_eval (vm_eval.c:1748)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A61A9: invoke_bmethod.isra.389 (vm.c:1051)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xEF9AA2F: ???
==17882==    by 0x6657760: ???
==17882==    by 0x22ADA75F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xEF9AA2F: ???
==17882==    by 0x6657760: ???
==17882==    by 0x22ADA75F: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19432: gc_writebarrier_incremental (gc.c:6112)
==17882==    by 0x502FAEF: rb_obj_written (ruby.h:1526)
==17882==    by 0x502FAEF: rb_obj_write (ruby.h:1543)
==17882==    by 0x502FAEF: str_replace_shared_without_enc (string.c:1171)
==17882==    by 0x502FC22: rb_fstring (string.c:329)
==17882==    by 0x4F512E5: rb_provide_feature (load.c:558)
==17882==    by 0x4F52911: rb_require_internal (load.c:1039)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5085A8D: rb_const_missing (variable.c:1884)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F15037: invalidate_mark_stack_chunk (gc.c:4035)
==17882==    by 0x4F15037: invalidate_mark_stack (gc.c:4050)
==17882==    by 0x4F15037: rb_gc_force_recycle (gc.c:6351)
==17882==    by 0x4E6F1D2: rb_ary_decrement_share (array.c:470)
==17882==    by 0x4E6F1D2: rb_ary_unshare (array.c:482)
==17882==    by 0x4E6F1D2: rb_ary_unshare_safe (array.c:490)
==17882==    by 0x4E6F1D2: rb_ary_replace (array.c:3791)
==17882==    by 0x4F52911: rb_require_internal (load.c:1039)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5085A8D: rb_const_missing (variable.c:1884)
==17882==    by 0x4F8A6A8: rb_mod_const_get (object.c:2522)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F15050: invalidate_mark_stack_chunk (gc.c:4035)
==17882==    by 0x4F15050: invalidate_mark_stack (gc.c:4050)
==17882==    by 0x4F15050: rb_gc_force_recycle (gc.c:6351)
==17882==    by 0x4E6F1D2: rb_ary_decrement_share (array.c:470)
==17882==    by 0x4E6F1D2: rb_ary_unshare (array.c:482)
==17882==    by 0x4E6F1D2: rb_ary_unshare_safe (array.c:490)
==17882==    by 0x4E6F1D2: rb_ary_replace (array.c:3791)
==17882==    by 0x4F52911: rb_require_internal (load.c:1039)
==17882==    by 0x4F52B38: rb_require_safe (load.c:1075)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882==    by 0x509EC21: vm_exec_core (insns.def:836)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5085A8D: rb_const_missing (variable.c:1884)
==17882==    by 0x4F8A6A8: rb_mod_const_get (object.c:2522)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2600000033: ???
==17882==    by 0x1000000034: ???
==17882==    by 0x3600000034: ???
==17882==    by 0x1FFEFF7FAF: ???
==17882==    by 0x4C29F5E: calloc (vg_replace_malloc.c:762)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2600000033: ???
==17882==    by 0x1000000034: ???
==17882==    by 0x3600000034: ???
==17882==    by 0x1FFEFF7FAF: ???
==17882==    by 0x4C29F5E: calloc (vg_replace_malloc.c:762)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x22C3361F: ???
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFF805F: ???
==17882==    by 0x4F17BD4: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD4: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD4: mark_current_machine_context (gc.c:4390)
==17882==    by 0xFA7: ???
==17882==    by 0x1101: ???
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0x1EACB1FF: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x6558FEF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x22C3361F: ???
==17882==    by 0x4EB7DA4: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EB7DA4: compile_array.constprop.131 (compile.c:3994)
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFF805F: ???
==17882==    by 0x4F17BD4: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD4: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD4: mark_current_machine_context (gc.c:4390)
==17882==    by 0xFA7: ???
==17882==    by 0x1101: ???
==17882==    by 0x5805716F: ??? (mc_malloc_wrappers.c:112)
==17882==    by 0x1EACB1FF: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x6558FEF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F: ???
==17882==    by 0x6: ???
==17882==    by 0x3C: ???
==17882==    by 0x20F0F37F: ???
==17882==    by 0xEFFFFFFFFFFFFF: ???
==17882==    by 0x22BBB367: ???
==17882==    by 0x62: ???
==17882==    by 0x1FFEFF686F: ???
==17882==    by 0xFFFFB7FEFFFFFFFE: ???
==17882==    by 0x4EAB320: iseq_compile_each0 (compile.c:6902)
==17882==    by 0x1FFEFF684F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F: ???
==17882==    by 0x6: ???
==17882==    by 0x3C: ???
==17882==    by 0x20F0F37F: ???
==17882==    by 0xEFFFFFFFFFFFFF: ???
==17882==    by 0x22BBB367: ???
==17882==    by 0x62: ???
==17882==    by 0x1FFEFF686F: ???
==17882==    by 0xFFFFB7FEFFFFFFFE: ???
==17882==    by 0x4EAB320: iseq_compile_each0 (compile.c:6902)
==17882==    by 0x1FFEFF684F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF7CCF: ???
==17882==    by 0x2124C03F: ???
==17882==    by 0x1FFEFF834F: ???
==17882==    by 0x1FFEFF831F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x1D5924AF: ???
==17882==    by 0x16CD47A7: ???
==17882==    by 0x16CD48D7: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF7CCF: ???
==17882==    by 0x2124C03F: ???
==17882==    by 0x1FFEFF834F: ???
==17882==    by 0x1FFEFF831F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x1D5924AF: ???
==17882==    by 0x16CD47A7: ???
==17882==    by 0x16CD48D7: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x21BD02EF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x21BD02EF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x22C3E15F: ???
==17882==    by 0x100000AD0: ???
==17882==    by 0x1FFEFF72C7: ???
==17882==    by 0x655A78F: ???
==17882==    by 0xFFFF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x22C3E15F: ???
==17882==    by 0x100000AD0: ???
==17882==    by 0x1FFEFF72C7: ???
==17882==    by 0x655A78F: ???
==17882==    by 0xFFFF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1A119087: ???
==17882==    by 0x1ECA4B2F: ???
==17882==    by 0x6559277: ???
==17882==    by 0x6559277: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1A119087: ???
==17882==    by 0x1ECA4B2F: ???
==17882==    by 0x6559277: ???
==17882==    by 0x6559277: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2296F230: ???
==17882==    by 0x2296F260: ???
==17882==    by 0x22C5D717: ???
==17882==    by 0x2296F260: ???
==17882==    by 0x4C29F5E: calloc (vg_replace_malloc.c:762)
==17882==    by 0x2124C017: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2296F230: ???
==17882==    by 0x2296F260: ???
==17882==    by 0x22C5D717: ???
==17882==    by 0x2296F260: ???
==17882==    by 0x4C29F5E: calloc (vg_replace_malloc.c:762)
==17882==    by 0x2124C017: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xC57CF77: ???
==17882==    by 0x1FFEFF8E5F: ???
==17882==    by 0x6657C87: ???
==17882==    by 0x1FFEFF8D2F: ???
==17882==    by 0x50A6CF6: vm_call_bmethod_body (vm_insnhelper.c:1950)
==17882==    by 0x50A6CF6: vm_call_bmethod (vm_insnhelper.c:1967)
==17882==    by 0x1FFEFF8E5F: ???
==17882==    by 0x1FFEFF8FBF: ???
==17882==    by 0x1EFFFFFFFF: ???
==17882==    by 0x50A6CF6: vm_call_bmethod_body (vm_insnhelper.c:1950)
==17882==    by 0x50A6CF6: vm_call_bmethod (vm_insnhelper.c:1967)
==17882==    by 0x17F37B0F: ???
==17882==    by 0x50A6CB3: memcpy (string3.h:51)
==17882==    by 0x50A6CB3: vm_call_bmethod (vm_insnhelper.c:1964)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xC57CF77: ???
==17882==    by 0x1FFEFF8E5F: ???
==17882==    by 0x6657C87: ???
==17882==    by 0x1FFEFF8D2F: ???
==17882==    by 0x50A6CF6: vm_call_bmethod_body (vm_insnhelper.c:1950)
==17882==    by 0x50A6CF6: vm_call_bmethod (vm_insnhelper.c:1967)
==17882==    by 0x1FFEFF8E5F: ???
==17882==    by 0x1FFEFF8FBF: ???
==17882==    by 0x1EFFFFFFFF: ???
==17882==    by 0x50A6CF6: vm_call_bmethod_body (vm_insnhelper.c:1950)
==17882==    by 0x50A6CF6: vm_call_bmethod (vm_insnhelper.c:1967)
==17882==    by 0x17F37B0F: ???
==17882==    by 0x50A6CB3: memcpy (string3.h:51)
==17882==    by 0x50A6CB3: vm_call_bmethod (vm_insnhelper.c:1964)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF8E8F: ???
==17882==    by 0x22CA4117: ???
==17882==    by 0x4EB3F86: compile_if (compile.c:5049)
==17882==    by 0x4EB3F86: iseq_compile_each0 (compile.c:5951)
==17882==    by 0x4EAD0CF: compile_rescue (compile.c:5705)
==17882==    by 0x4EAD0CF: iseq_compile_each0 (compile.c:5987)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF8E8F: ???
==17882==    by 0x22CA4117: ???
==17882==    by 0x4EB3F86: compile_if (compile.c:5049)
==17882==    by 0x4EB3F86: iseq_compile_each0 (compile.c:5951)
==17882==    by 0x4EAD0CF: compile_rescue (compile.c:5705)
==17882==    by 0x4EAD0CF: iseq_compile_each0 (compile.c:5987)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EA0398: rb_obj_written.isra.71.part.72 (ruby.h:1526)
==17882==    by 0x4EB4793: rb_obj_written (ruby.h:1525)
==17882==    by 0x4EB4793: rb_obj_write (ruby.h:1543)
==17882==    by 0x4EB4793: compile_rescue (compile.c:5705)
==17882==    by 0x4EB4793: iseq_compile_each0 (compile.c:5987)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EBAF34: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EBAF34: iseq_set_exception_table (compile.c:2365)
==17882==    by 0x4EBAF34: iseq_setup (compile.c:1374)
==17882==    by 0x4EBBE81: rb_iseq_compile_node (compile.c:740)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAAF79: iseq_compile_each0 (compile.c:7127)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBBC9B: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBC9B: rb_iseq_compile_node (compile.c:673)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882==    by 0x4EA9E64: iseq_compile_each0 (compile.c:7197)
==17882==    by 0x4EBBDC1: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBBDC1: rb_iseq_compile_node (compile.c:706)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1CAB72B7: ???
==17882==    by 0x1A11905F: ???
==17882==    by 0x1A1190AF: ???
==17882==    by 0x1FFEFF876F: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0x1C7B530F: ???
==17882==    by 0x6657D67: ???
==17882==    by 0x1FFEFF87AF: ???
==17882==    by 0x50A093D: vm_setivar (vm_insnhelper.c:1053)
==17882==    by 0x50A093D: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A093D: vm_exec_core (insns.def:224)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1CAB72B7: ???
==17882==    by 0x1A11905F: ???
==17882==    by 0x1A1190AF: ???
==17882==    by 0x1FFEFF876F: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0x1C7B530F: ???
==17882==    by 0x6657D67: ???
==17882==    by 0x1FFEFF87AF: ???
==17882==    by 0x50A093D: vm_setivar (vm_insnhelper.c:1053)
==17882==    by 0x50A093D: vm_setinstancevariable (vm_insnhelper.c:1065)
==17882==    by 0x50A093D: vm_exec_core (insns.def:224)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5094656: rb_vm_search_method_slowpath (vm_insnhelper.c:1323)
==17882==    by 0x5094C7B: vm_search_method (vm_insnhelper.c:1352)
==17882==    by 0x5094C7B: vm_method_cfunc_is (vm_insnhelper.c:1371)
==17882==    by 0x5094C7B: opt_equal_fallback (vm_insnhelper.c:1378)
==17882==    by 0x5094C7B: opt_eq_func (vm_insnhelper.c:1431)
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x5094656: rb_vm_search_method_slowpath (vm_insnhelper.c:1323)
==17882==    by 0x5094C7B: vm_search_method (vm_insnhelper.c:1352)
==17882==    by 0x5094C7B: vm_method_cfunc_is (vm_insnhelper.c:1371)
==17882==    by 0x5094C7B: opt_equal_fallback (vm_insnhelper.c:1378)
==17882==    by 0x5094C7B: opt_eq_func (vm_insnhelper.c:1431)
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF9F0F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF9F0F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x6658077: ???
==17882==    by 0x1FFEFF9A2F: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0x66E4F27: ???
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x6559277: ???
==17882==    by 0xCCCCCCCCCCCCCCCC: ???
==17882==    by 0x1FFEFF9A7F: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x1FFEFF9B27: ???
==17882==    by 0x1138: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x6658077: ???
==17882==    by 0x1FFEFF9A2F: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0x66E4F27: ???
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x6559277: ???
==17882==    by 0xCCCCCCCCCCCCCCCC: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0xE44: ???
==17882==    by 0x1FFEFF9DD7: ???
==17882==    by 0x1138: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1CAB7327: ???
==17882==    by 0x6658157: ???
==17882==    by 0x5094656: rb_vm_search_method_slowpath (vm_insnhelper.c:1323)
==17882==    by 0x5094C7B: vm_search_method (vm_insnhelper.c:1352)
==17882==    by 0x5094C7B: vm_method_cfunc_is (vm_insnhelper.c:1371)
==17882==    by 0x5094C7B: opt_equal_fallback (vm_insnhelper.c:1378)
==17882==    by 0x5094C7B: opt_eq_func (vm_insnhelper.c:1431)
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0xBE0: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x6559277: ???
==17882==    by 0x65587FF: ???
==17882==    by 0x22D88047: ???
==17882==    by 0x1138: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1CAB7327: ???
==17882==    by 0x6658157: ???
==17882==    by 0x5094656: rb_vm_search_method_slowpath (vm_insnhelper.c:1323)
==17882==    by 0x5094C7B: vm_search_method (vm_insnhelper.c:1352)
==17882==    by 0x5094C7B: vm_method_cfunc_is (vm_insnhelper.c:1371)
==17882==    by 0x5094C7B: opt_equal_fallback (vm_insnhelper.c:1378)
==17882==    by 0x5094C7B: opt_eq_func (vm_insnhelper.c:1431)
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0xBE0: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x6559277: ???
==17882==    by 0x65587FF: ???
==17882==    by 0x22D88047: ???
==17882==    by 0x1138: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x67153CF: ???
==17882==    by 0x1F4E870F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x67153CF: ???
==17882==    by 0x1F4E870F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x22D06167: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x22D06167: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x234E0047: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x234E0047: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x22EADB07: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x22EADB07: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x22EB53A7: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x22EB53A7: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x22F34E9F: ???
==17882==    by 0x232B4D1F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x232B56EF: ???
==17882==    by 0xCCCCCCCCCCCCCCCC: ???
==17882==    by 0x1FFEFF7B2F: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x1FFEFF7BD7: ???
==17882==    by 0x1138: ???
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x22F34E9F: ???
==17882==    by 0x232B4D1F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x232B56EF: ???
==17882==    by 0xCCCCCCCCCCCCCCCC: ???
==17882==    by 0x1FFEFF7B2F: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x1FFEFF7BD7: ???
==17882==    by 0x1138: ???
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0x225F041F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0x225F041F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xD00000087: ???
==17882==    by 0x2300000085: ???
==17882==    by 0x2300000085: ???
==17882==    by 0x2300000085: ???
==17882==    by 0x2300000085: ???
==17882==    by 0x2300000085: ???
==17882==    by 0x2800000085: ???
==17882==    by 0xC00000086: ???
==17882==    by 0x2800000086: ???
==17882==    by 0xA00000087: ???
==17882==    by 0xD00000087: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xD00000087: ???
==17882==    by 0x2300000085: ???
==17882==    by 0x2300000085: ???
==17882==    by 0x2300000085: ???
==17882==    by 0x2300000085: ???
==17882==    by 0x2300000085: ???
==17882==    by 0x2800000085: ???
==17882==    by 0xC00000086: ???
==17882==    by 0x2800000086: ???
==17882==    by 0xA00000087: ???
==17882==    by 0xD00000087: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF81AF: ???
==17882==    by 0x1FFEFF824F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF81AF: ???
==17882==    by 0x1FFEFF824F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4E91FDC: rb_class_foreach_subclass (class.c:122)
==17882==    by 0x50933F9: check_override_opt_method (vm_method.c:512)
==17882==    by 0x22F58007: ???
==17882==    by 0x22F5802F: ???
==17882==    by 0x22F58007: ???
==17882==    by 0x6559277: ???
==17882==    by 0x4F253AB: copy_default (hash.c:56)
==17882==    by 0x4F253AB: rb_hash_initialize_copy (hash.c:2605)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x509331F: ??? (vm_method.c:831)
==17882==    by 0x4E91FDC: rb_class_foreach_subclass (class.c:122)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4E91FDC: rb_class_foreach_subclass (class.c:122)
==17882==    by 0x50933F9: check_override_opt_method (vm_method.c:512)
==17882==    by 0x22F58007: ???
==17882==    by 0x22F5802F: ???
==17882==    by 0x22F58007: ???
==17882==    by 0x6559277: ???
==17882==    by 0x4F253AB: copy_default (hash.c:56)
==17882==    by 0x4F253AB: rb_hash_initialize_copy (hash.c:2605)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x509331F: ??? (vm_method.c:831)
==17882==    by 0x4E91FDC: rb_class_foreach_subclass (class.c:122)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x6657C87: ???
==17882==    by 0x22220100: ???
==17882==    by 0xD323CBF: ???
==17882==    by 0x22CFC74F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x6657C87: ???
==17882==    by 0x22220100: ???
==17882==    by 0xD323CBF: ???
==17882==    by 0x22CFC74F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1717F0FF: ???
==17882==    by 0x179ABADF: ???
==17882==    by 0x508A628: rb_const_lookup (variable.c:3393)
==17882==    by 0x508B5A9: rb_const_search (variable.c:2505)
==17882==    by 0x508B5A9: rb_const_get_0 (variable.c:2481)
==17882==    by 0x508B5A9: rb_const_get (variable.c:2542)
==17882==    by 0x50A2161: THROW_DATA_NEW (vm_insnhelper.h:254)
==17882==    by 0x50A2161: vm_throw_start (vm_insnhelper.c:1234)
==17882==    by 0x50A2161: vm_throw (vm_insnhelper.c:1245)
==17882==    by 0x50A2161: vm_exec_core (insns.def:914)
==17882==    by 0x1E638AA7: ???
==17882==    by 0x670BE9F: ???
==17882==    by 0x4F1778D: gc_mark (gc.c:4588)
==17882==    by 0x4F1778D: mark_entry (gc.c:4210)
==17882==    by 0x5022F17: st_general_foreach (st.c:1574)
==17882==    by 0x5022F17: st_foreach (st.c:1653)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4EA8A65: new_insn_send (compile.c:1208)
==17882==    by 0x4EA8A65: iseq_compile_each0 (compile.c:6632)
==17882==    by 0x4EB44AA: compile_iter (compile.c:5408)
==17882==    by 0x4EB44AA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EADFB9: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EADFB9: compile_if (compile.c:5017)
==17882==    by 0x4EADFB9: iseq_compile_each0 (compile.c:5951)
==17882==    by 0x4EBC3F8: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC3F8: rb_iseq_compile_node (compile.c:660)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EAD3EA: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAD3EA: compile_iter (compile.c:5395)
==17882==    by 0x4EAD3EA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4EA8A65: new_insn_send (compile.c:1208)
==17882==    by 0x4EA8A65: iseq_compile_each0 (compile.c:6632)
==17882==    by 0x4EB44AA: compile_iter (compile.c:5408)
==17882==    by 0x4EB44AA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EADFB9: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EADFB9: compile_if (compile.c:5017)
==17882==    by 0x4EADFB9: iseq_compile_each0 (compile.c:5951)
==17882==    by 0x4EBC3F8: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC3F8: rb_iseq_compile_node (compile.c:660)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EAD3EA: new_child_iseq (compile.c:1226)
==17882==    by 0x4EAD3EA: compile_iter (compile.c:5395)
==17882==    by 0x4EAD3EA: iseq_compile_each0 (compile.c:5965)
==17882==    by 0x4EAE13A: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EAE13A: iseq_compile_each0 (compile.c:5940)
==17882==    by 0x4EBC7FB: iseq_compile_each (compile.c:5909)
==17882==    by 0x4EBC7FB: rb_iseq_compile_node (compile.c:681)
==17882==    by 0x4F4E523: rb_iseq_new_with_opt (iseq.c:728)
==17882==    by 0x4EA127C: new_child_iseq (compile.c:1226)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xD323CBF: ???
==17882==    by 0x232363FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xD323CBF: ???
==17882==    by 0x232363FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x233C0577: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x233C0577: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x233D409F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x233D409F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50F1B20: ??? (in /usr/local/rvm/rubies/ruby-head-opt/lib/libruby.so.2.6.3)
==17882==    by 0x6657BA7: ???
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x1FFEFF819F: ???
==17882==    by 0x6558D7F: ???
==17882==    by 0x53D6AA8: ??? (syscall-template.S:81)
==17882==    by 0x1FFEFF81F7: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x1FFEFF8257: ???
==17882==    by 0x1138: ???
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F18FE0: gc_marks_wb_unprotected_objects (gc.c:5597)
==17882==    by 0x4F18FE0: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F97983: local_tbl (parse.y:10413)
==17882==    by 0x4FAEDB3: ruby_yyparse (parse.y:955)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F18FF7: gc_marks_wb_unprotected_objects (gc.c:5609)
==17882==    by 0x4F18FF7: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F97983: local_tbl (parse.y:10413)
==17882==    by 0x4FAEDB3: ruby_yyparse (parse.y:955)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F18FFD: gc_marks_wb_unprotected_objects (gc.c:5601)
==17882==    by 0x4F18FFD: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F97983: local_tbl (parse.y:10413)
==17882==    by 0x4FAEDB3: ruby_yyparse (parse.y:955)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19011: gc_marks_wb_unprotected_objects (gc.c:5609)
==17882==    by 0x4F19011: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F97983: local_tbl (parse.y:10413)
==17882==    by 0x4FAEDB3: ruby_yyparse (parse.y:955)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFF000687: ???
==17882==    by 0x6D727F8FFFFFFFFE: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x1304A0A7: ???
==17882==    by 0x1B72C227: ???
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1900D: gc_marks_wb_unprotected_objects (gc.c:5605)
==17882==    by 0x4F1900D: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F97983: local_tbl (parse.y:10413)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F1906D: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1906D: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1906D: gc_marks_wb_unprotected_objects (gc.c:5614)
==17882==    by 0x4F1906D: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F97983: local_tbl (parse.y:10413)
==17882==    by 0x4FAEDB3: ruby_yyparse (parse.y:955)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19064: gc_mark_stacked_objects (gc.c:4871)
==17882==    by 0x4F19064: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F19064: gc_marks_wb_unprotected_objects (gc.c:5614)
==17882==    by 0x4F19064: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F97983: local_tbl (parse.y:10413)
==17882==    by 0x4FAEDB3: ruby_yyparse (parse.y:955)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882==    by 0x4F50CB4: rb_load_internal0 (load.c:606)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17D6B: RVALUE_OLD_P_RAW (gc.c:1156)
==17882==    by 0x4F17D6B: RVALUE_OLD_P (gc.c:1163)
==17882==    by 0x4F17D6B: gc_mark_set_parent (gc.c:4611)
==17882==    by 0x4F17D6B: gc_mark_children (gc.c:4687)
==17882==    by 0x4F1906D: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1906D: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1906D: gc_marks_wb_unprotected_objects (gc.c:5614)
==17882==    by 0x4F1906D: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F97983: local_tbl (parse.y:10413)
==17882==    by 0x4FAEDB3: ruby_yyparse (parse.y:955)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F17D90: gc_mark_children (gc.c:4689)
==17882==    by 0x4F1906D: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1906D: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1906D: gc_marks_wb_unprotected_objects (gc.c:5614)
==17882==    by 0x4F1906D: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1CE40: gc_marks_step (gc.c:5772)
==17882==    by 0x4F1CE40: gc_marks_continue (gc.c:5831)
==17882==    by 0x4F1CE40: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CE40: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4F97983: local_tbl (parse.y:10413)
==17882==    by 0x4FAEDB3: ruby_yyparse (parse.y:955)
==17882==    by 0x4FB6127: yycompile0 (parse.y:4900)
==17882==    by 0x50BAAD8: rb_suppress_tracing (vm_trace.c:436)
==17882==    by 0x4F9BF86: yycompile (parse.y:4950)
==17882==    by 0x4F9BF86: rb_parser_compile_file_path (parse.y:5089)
==17882==    by 0x50150E9: load_file_internal (ruby.c:2011)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x5014F0F: load_file (ruby.c:2130)
==17882==    by 0x5014F0F: rb_parser_load_file (ruby.c:2152)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFFA657: ???
==17882==    by 0x6D727F8FFFFFFFFE: ???
==17882==    by 0x6559277: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFFA7AF: ???
==17882==    by 0x4F87EDD: rb_obj_init_dup_clone (object.c:632)
==17882==    by 0x7: ???
==17882==    by 0x1FFEFFA75F: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x246B006F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFFA657: ???
==17882==    by 0x6D727F8FFFFFFFFE: ???
==17882==    by 0x6559277: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFFA7AF: ???
==17882==    by 0x4F87EDD: rb_obj_init_dup_clone (object.c:632)
==17882==    by 0x7: ???
==17882==    by 0x1FFEFFA75F: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x246B006F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x18AFAD37: ???
==17882==    by 0x6FFA7F8FFFFFFFFE: ???
==17882==    by 0x5094596: rb_callable_method_entry (vm_method.c:873)
==17882==    by 0x6558FCF: ???
==17882==    by 0x1CA78A47: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x22DC53CF: ???
==17882==    by 0x279CFC: ???
==17882==    by 0x4E00C: ???
==17882==    by 0x11E8F5A7: ???
==17882==    by 0x6558FCF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xFFFFFFFF24C7446F: ???
==17882==    by 0x807FFFFF: ???
==17882==    by 0x655A657: ???
==17882==    by 0xFFFFFE: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x24C7446F: ???
==17882==    by 0x33: ???
==17882==    by 0x7: ???
==17882==    by 0x1FFEFFB0FF: ???
==17882==    by 0x4F00E47: rb_ensure (eval.c:1080)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x24C7446F: ???
==17882==    by 0x33: ???
==17882==    by 0x7: ???
==17882==    by 0x1FFEFFB0FF: ???
==17882==    by 0x4F00E47: rb_ensure (eval.c:1080)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x228B16BF: ???
==17882==    by 0x7FFFFF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x6657A8F: ???
==17882==    by 0x91C200F: ???
==17882==    by 0xF: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x6657A8F: ???
==17882==    by 0x91C200F: ???
==17882==    by 0xF: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4F17FB7: gc_mark_imemo (gc.c:4653)
==17882==    by 0x4F17FB7: gc_mark_children (gc.c:4704)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x50957BA: rb_vm_ifunc_proc_new (internal.h:1135)
==17882==    by 0x50957BA: rb_iterate (vm_eval.c:1174)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4EE2729: enum_grep (enum.c:115)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x33: ???
==17882==    by 0x7: ???
==17882==    by 0x1FFEFFAFDF: ???
==17882==    by 0x50A437F: vm_exec_handle_exception (vm.c:1964)
==17882==    by 0x50A437F: rb_vm_exec (vm.c:1892)
==17882==    by 0x1FFEFFAE4F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x33: ???
==17882==    by 0x7: ???
==17882==    by 0x1FFEFFAFDF: ???
==17882==    by 0x50A437F: vm_exec_handle_exception (vm.c:1964)
==17882==    by 0x50A437F: rb_vm_exec (vm.c:1892)
==17882==    by 0x1FFEFFAE4F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6BC30: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6BC30: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6BC30: ary_memcpy0 (array.c:261)
==17882==    by 0x4E6BC30: ary_memcpy (array.c:272)
==17882==    by 0x4E6BC30: ary_make_partial (array.c:1074)
==17882==    by 0x1074A6A4: get_stack_tail (cparse.c:108)
==17882==    by 0x1074A6A4: reduce0 (cparse.c:733)
==17882==    by 0x5095B13: vm_catch_protect (vm_eval.c:1981)
==17882==    by 0x5095C2B: rb_catch_obj (vm_eval.c:2007)
==17882==    by 0x1074B090: reduce (cparse.c:701)
==17882==    by 0x1074B090: parse_main (cparse.c:564)
==17882==    by 0x1074BDDC: racc_cparse (cparse.c:249)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A7FF2: vm_call_opt_send (vm_insnhelper.c:2037)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E784B0: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E784B0: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E784B0: ary_memcpy0 (array.c:261)
==17882==    by 0x4E784B0: ary_memcpy (array.c:272)
==17882==    by 0x4E784B0: ary_make_partial (array.c:1074)
==17882==    by 0x4E784B0: rb_ary_resurrect (array.c:2204)
==17882==    by 0x509D523: vm_exec_core (insns.def:455)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x1074B413: parse_main (cparse.c:510)
==17882==    by 0x1074BDDC: racc_cparse (cparse.c:249)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A7FF2: vm_call_opt_send (vm_insnhelper.c:2037)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EE2AF0: rb_obj_written.isra.12 (ruby.h:1526)
==17882==    by 0x4EEB1A9: rb_obj_write (ruby.h:1543)
==17882==    by 0x4EEB1A9: find_i (enum.c:260)
==17882==    by 0x5096649: vm_yield_with_cfunc.isra.368 (vm_insnhelper.c:2543)
==17882==    by 0x509AF81: vm_invoke_ifunc_block (vm_insnhelper.c:2688)
==17882==    by 0x509AF81: vm_invoke_block (vm_insnhelper.c:2728)
==17882==    by 0x509E832: vm_exec_core (insns.def:860)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4EE37A1: enum_find (enum.c:300)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6FF2A: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6FF2A: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6FF2A: ary_memcpy0 (array.c:261)
==17882==    by 0x4E6FF2A: rb_ary_splice (array.c:1846)
==17882==    by 0x4E7957F: ary_append (array.c:3973)
==17882==    by 0x4E7957F: rb_ary_concat (array.c:4022)
==17882==    by 0x509DB42: vm_concat_array (vm_insnhelper.c:2970)
==17882==    by 0x509DB42: vm_exec_core (insns.def:497)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F50E3A: rb_load_internal (load.c:643)
==17882==    by 0x4F50E3A: rb_f_load (load.c:711)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1711D: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F1711D: rb_gc_writebarrier_remember (gc.c:6204)
==17882==    by 0x4F20554: ar_copy (hash.c:1023)
==17882==    by 0x4F2537B: rb_hash_initialize_copy (hash.c:2588)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F87EDD: rb_obj_init_dup_clone (object.c:632)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BF0F: rb_obj_dup (object.c:535)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E785A2: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E785A2: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E785A2: rb_ary_set_shared (array.c:509)
==17882==    by 0x4E785A2: ary_make_partial (array.c:1085)
==17882==    by 0x4E785A2: rb_ary_resurrect (array.c:2204)
==17882==    by 0x509D523: vm_exec_core (insns.def:455)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A5CF3: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A5CF3: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A5CF3: vm_yield_with_cref (vm.c:1147)
==17882==    by 0x50A5CF3: yield_under (vm_eval.c:1578)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x4F50B49: rb_load_internal0 (load.c:612)
==17882==    by 0x4F50E3A: rb_load_internal (load.c:643)
==17882==    by 0x4F50E3A: rb_f_load (load.c:711)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A8442: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x50A8442: vm_call_super_method (vm_insnhelper.c:2422)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F2939B: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F2939B: ar_bulk_insert (hash.c:4304)
==17882==    by 0x4F2939B: rb_hash_bulk_insert (hash.c:4326)
==17882==    by 0x50A12C8: vm_exec_core (insns.def:525)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==26152== 
==26152== HEAP SUMMARY:
==26152==     in use at exit: 202,785,201 bytes in 1,022,311 blocks
==26152==   total heap usage: 4,636,229 allocs, 3,613,918 frees, 1,511,419,057 bytes allocated
==26152== 
==26152== LEAK SUMMARY:
==26152==    definitely lost: 197,864 bytes in 4,881 blocks
==26152==    indirectly lost: 3,068 bytes in 51 blocks
==26152==      possibly lost: 145,981,101 bytes in 971,323 blocks
==26152==    still reachable: 56,603,168 bytes in 46,056 blocks
==26152==         suppressed: 0 bytes in 0 blocks
==26152== Rerun with --leak-check=full to see details of leaked memory
==26152== 
==26152== Use --track-origins=yes to see where uninitialised values come from
==26152== For lists of detected and suppressed errors, rerun with: -s
==26152== ERROR SUMMARY: 3556673 errors from 581 contexts (suppressed: 0 from 0)
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6CDC0: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6CDC0: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6CDC0: yield_indexed_values (array.c:5498)
==17882==    by 0x4E6E438: permute0 (array.c:5540)
==17882==    by 0x4E6E438: rb_ary_permutation (array.c:5662)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50ADB36: invoke_block (vm.c:1021)
==17882==    by 0x50ADB36: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50ADB36: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50ADB36: vm_yield (vm.c:1155)
==17882==    by 0x50ADB36: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50ADB36: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x4F79D6D: int_dotimes (numeric.c:5090)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x170BDC7F: ???
==17882==    by 0xF9FBFD7F7DE79F36: ???
==17882==    by 0x4F1758D: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1180)
==17882==    by 0x4F1758D: gc_aging (gc.c:4558)
==17882==    by 0x4F1758D: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F18272: gc_mark (gc.c:4588)
==17882==    by 0x4F18272: gc_mark_children (gc.c:4779)
==17882==    by 0xA282187BC6D13BA8: ???
==17882==    by 0x1E56D2DF: ???
==17882==    by 0x18BF1B67: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x4F1758D: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1180)
==17882==    by 0x4F1758D: gc_aging (gc.c:4558)
==17882==    by 0x4F1758D: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17895: gc_mark (gc.c:4588)
==17882==    by 0x4F17895: mark_keyvalue (gc.c:4247)
==17882==    by 0x6: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x170BDC7F: ???
==17882==    by 0x9040017FF: ???
==17882==    by 0x4F1758D: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1180)
==17882==    by 0x4F1758D: gc_aging (gc.c:4558)
==17882==    by 0x4F1758D: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F18272: gc_mark (gc.c:4588)
==17882==    by 0x4F18272: gc_mark_children (gc.c:4779)
==17882==    by 0xA282187BC6D13BA8: ???
==17882==    by 0x1E56D2DF: ???
==17882==    by 0x18BF1B67: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x4F1758D: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1180)
==17882==    by 0x4F1758D: gc_aging (gc.c:4558)
==17882==    by 0x4F1758D: gc_mark_ptr (gc.c:4576)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x508CF64: thread_mark (vm.c:2529)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x502F671: str_new_static (string.c:852)
==17882==    by 0x502F671: rb_usascii_str_new_static (string.c:876)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E6CDE3: yield_indexed_values (array.c:5500)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFFD00F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFFD00F: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x4EEC1CB: enumerator_mark (enumerator.c:181)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A87B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A87B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1CF3F: gc_marks_continue (gc.c:5835)
==17882==    by 0x4F1CF3F: heap_prepare (gc.c:1733)
==17882==    by 0x4F1CF3F: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x5029FE3: str_alloc (string.c:724)
==17882==    by 0x5029FE3: str_new0 (string.c:746)
==17882==    by 0x502F671: str_new_static (string.c:852)
==17882==    by 0x502F671: rb_usascii_str_new_static (string.c:876)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E6CDE3: yield_indexed_values (array.c:5500)
==17882== 
==17882== Warning: set address range perms: large range [0x19bcfd4bc000, 0x19bd1d4bc000) (noaccess)
==17882== Use of uninitialised value of size 8
==17882==    at 0x5043413: rb_str_concat_literals (string.c:2954)
==17882==    by 0x509D29D: vm_exec_core (insns.def:385)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882==    by 0x50A98AF: vm_call0_body (vm_eval.c:186)
==17882==    by 0x50A98AF: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F2463D: rb_hash_default_value (hash.c:1698)
==17882==    by 0x4F2463D: rb_hash_aref (hash.c:1731)
==17882==    by 0x50A0CB1: vm_opt_aref (vm_insnhelper.c:3672)
==17882==    by 0x50A0CB1: vm_exec_core (insns.def:1255)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x504343A: rb_str_concat_literals (string.c:2954)
==17882==    by 0x509D29D: vm_exec_core (insns.def:385)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882==    by 0x50A98AF: vm_call0_body (vm_eval.c:186)
==17882==    by 0x50A98AF: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F2463D: rb_hash_default_value (hash.c:1698)
==17882==    by 0x4F2463D: rb_hash_aref (hash.c:1731)
==17882==    by 0x50A0CB1: vm_opt_aref (vm_insnhelper.c:3672)
==17882==    by 0x50A0CB1: vm_exec_core (insns.def:1255)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x50434F2: rb_str_concat_literals (string.c:2955)
==17882==    by 0x509D29D: vm_exec_core (insns.def:385)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882==    by 0x50A98AF: vm_call0_body (vm_eval.c:186)
==17882==    by 0x50A98AF: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F2463D: rb_hash_default_value (hash.c:1698)
==17882==    by 0x4F2463D: rb_hash_aref (hash.c:1731)
==17882==    by 0x50A0CB1: vm_opt_aref (vm_insnhelper.c:3672)
==17882==    by 0x50A0CB1: vm_exec_core (insns.def:1255)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x50315C8: rb_str_buf_new (string.c:1328)
==17882==    by 0x50436F1: rb_str_concat_literals (string.c:2960)
==17882==    by 0x509D29D: vm_exec_core (insns.def:385)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882==    by 0x50A98AF: vm_call0_body (vm_eval.c:186)
==17882==    by 0x50A98AF: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F2463D: rb_hash_default_value (hash.c:1698)
==17882==    by 0x4F2463D: rb_hash_aref (hash.c:1731)
==17882==    by 0x50A0CB1: vm_opt_aref (vm_insnhelper.c:3672)
==17882==    by 0x50A0CB1: vm_exec_core (insns.def:1255)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Invalid free() / delete / delete[] / realloc()
==17882==    at 0x4C29AB1: operator delete[](void*) (vg_replace_malloc.c:651)
==17882==    by 0x1AAF5541: std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x1AAF59A2: std::locale::_Impl::_Impl(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x1AAF6914: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x53D540F: pthread_once (pthread_once.S:103)
==17882==    by 0x1AAF6960: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x1AAF69A2: std::locale::locale() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x1AB3D518: std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x1987B9A5: Sass::File::read_file(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/local/rvm/gems/ruby-head-opt/gems/sassc-2.1.0.pre2-x86_64-linux/lib/sassc/libsass.so)
==17882==    by 0x197E467B: Sass::Context::load_import(Sass::Importer const&, Sass::ParserState) (in /usr/local/rvm/gems/ruby-head-opt/gems/sassc-2.1.0.pre2-x86_64-linux/lib/sassc/libsass.so)
==17882==    by 0x197E4C68: Sass::Context::import_url(Sass::Import*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/local/rvm/gems/ruby-head-opt/gems/sassc-2.1.0.pre2-x86_64-linux/lib/sassc/libsass.so)
==17882==    by 0x197E6389: Sass::Context::call_loader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, Sass::ParserState&, Sass::Import*, std::vector<Sass_Importer*, std::allocator<Sass_Importer*> >, bool) (in /usr/local/rvm/gems/ruby-head-opt/gems/sassc-2.1.0.pre2-x86_64-linux/lib/sassc/libsass.so)
==17882==  Address 0x1ad8ef00 is in the BSS segment of /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20
==17882== 
==17882== Invalid free() / delete / delete[] / realloc()
==17882==    at 0x4C29AB1: operator delete[](void*) (vg_replace_malloc.c:651)
==17882==    by 0x1AAF5553: std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x1AAF59A2: std::locale::_Impl::_Impl(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x1AAF6914: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x53D540F: pthread_once (pthread_once.S:103)
==17882==    by 0x1AAF6960: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x1AAF69A2: std::locale::locale() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x1AB3D518: std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==17882==    by 0x1987B9A5: Sass::File::read_file(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/local/rvm/gems/ruby-head-opt/gems/sassc-2.1.0.pre2-x86_64-linux/lib/sassc/libsass.so)
==17882==    by 0x197E467B: Sass::Context::load_import(Sass::Importer const&, Sass::ParserState) (in /usr/local/rvm/gems/ruby-head-opt/gems/sassc-2.1.0.pre2-x86_64-linux/lib/sassc/libsass.so)
==17882==    by 0x197E4C68: Sass::Context::import_url(Sass::Import*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/local/rvm/gems/ruby-head-opt/gems/sassc-2.1.0.pre2-x86_64-linux/lib/sassc/libsass.so)
==17882==    by 0x197E6389: Sass::Context::call_loader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, Sass::ParserState&, Sass::Import*, std::vector<Sass_Importer*, std::allocator<Sass_Importer*> >, bool) (in /usr/local/rvm/gems/ruby-head-opt/gems/sassc-2.1.0.pre2-x86_64-linux/lib/sassc/libsass.so)
==17882==  Address 0x1ad8ee00 is in the BSS segment of /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4FF9E7A: match_at (regexec.c:1749)
==17882==    by 0x500255E: onig_search_gpos (regexec.c:4421)
==17882==    by 0x5002A85: onig_search (regexec.c:4150)
==17882==    by 0x4FE68B1: rb_reg_search0 (re.c:1570)
==17882==    by 0x4FE68B1: rb_reg_search (re.c:1627)
==17882==    by 0x4FE6D40: reg_match_pos (re.c:3155)
==17882==    by 0x4FE6D40: rb_reg_match_m (re.c:3330)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882==    by 0x50A98AF: vm_call0_body (vm_eval.c:186)
==17882==    by 0x50A98AF: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F2463D: rb_hash_default_value (hash.c:1698)
==17882==    by 0x4F2463D: rb_hash_aref (hash.c:1731)
==17882==    by 0x50A0CB1: vm_opt_aref (vm_insnhelper.c:3672)
==17882==    by 0x50A0CB1: vm_exec_core (insns.def:1255)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x247EDCCF: ???
==17882==    by 0xF9FBFD7F7DFFFFFE: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0xFFFFFE: ???
==17882==    by 0x33: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x27A39477: ???
==17882==    by 0x25C5BC07: ???
==17882==    by 0xFFFE: ???
==17882==    by 0x25C5BC07: ???
==17882==    by 0x5035358: memcpy (string3.h:51)
==17882==    by 0x5035358: str_buf_cat (string.c:2772)
==17882==    by 0x4F5517A: w_nbyte (marshal.c:267)
==17882==    by 0x4F5517A: w_byte (marshal.c:278)
==17882==    by 0x4F5517A: w_object (marshal.c:697)
==17882==    by 0x1FFF000FFF: ???
==17882==    by 0x1FFEFFD5FF: ???
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFFD6EF: ???
==17882==    by 0x4F17BD4: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD4: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD4: mark_current_machine_context (gc.c:4390)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x27A39477: ???
==17882==    by 0x25C5BC07: ???
==17882==    by 0xFFFE: ???
==17882==    by 0x25C5BC07: ???
==17882==    by 0x5035358: memcpy (string3.h:51)
==17882==    by 0x5035358: str_buf_cat (string.c:2772)
==17882==    by 0x4F5517A: w_nbyte (marshal.c:267)
==17882==    by 0x4F5517A: w_byte (marshal.c:278)
==17882==    by 0x4F5517A: w_object (marshal.c:697)
==17882==    by 0x1FFF000FFF: ???
==17882==    by 0x1FFEFFD5FF: ???
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFFD6EF: ???
==17882==    by 0x4F17BD4: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD4: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD4: mark_current_machine_context (gc.c:4390)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFFDD45: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFFDD45: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5098717: rb_execution_context_mark (vm.c:2471)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0xFD3479D: deflateInit2_ (in /lib/x86_64-linux-gnu/libz.so.1.2.8)
==17882==    by 0xFB20F23: rb_deflate_initialize (zlib.c:1551)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x508CF84: thread_mark (vm.c:2511)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0xFD3479D: deflateInit2_ (in /lib/x86_64-linux-gnu/libz.so.1.2.8)
==17882==    by 0xFB20F23: rb_deflate_initialize (zlib.c:1551)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x66E6507: ???
==17882==    by 0xFFFBFDFFFFFFFFFE: ???
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0xFFFFFE: ???
==17882==    by 0x2C4442E7: ???
==17882==    by 0xB70: ???
==17882==    by 0x665818F: ???
==17882==    by 0xF9FFDDFE5FF5EF7E: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5096649: vm_yield_with_cfunc.isra.368 (vm_insnhelper.c:2543)
==17882==    by 0x50A52C8: invoke_block_from_c_bh (vm.c:1115)
==17882==    by 0x50A52C8: vm_yield (vm.c:1155)
==17882==    by 0x50A52C8: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A52C8: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A52C8: rb_yield (vm_eval.c:994)
==17882==    by 0x1FFEFF8BF7: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x1FFEFF8C57: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x5096649: vm_yield_with_cfunc.isra.368 (vm_insnhelper.c:2543)
==17882==    by 0x50A52C8: invoke_block_from_c_bh (vm.c:1115)
==17882==    by 0x50A52C8: vm_yield (vm.c:1155)
==17882==    by 0x50A52C8: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A52C8: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A52C8: rb_yield (vm_eval.c:994)
==17882==    by 0x1FFEFF8BF7: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x1FFEFF8C57: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2C4441F7: ???
==17882==    by 0x100002108003FF: ???
==17882==    by 0x4F1758D: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1180)
==17882==    by 0x4F1758D: gc_aging (gc.c:4558)
==17882==    by 0x4F1758D: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x6668607: ???
==17882==    by 0x666745F: ???
==17882==    by 0x6: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2C4441F7: ???
==17882==    by 0x100002108003FF: ???
==17882==    by 0x4F1758D: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1180)
==17882==    by 0x4F1758D: gc_aging (gc.c:4558)
==17882==    by 0x4F1758D: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x6668607: ???
==17882==    by 0x666745F: ???
==17882==    by 0x6: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x19491855: function_mark (Function.c:182)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x50957BA: rb_vm_ifunc_proc_new (internal.h:1135)
==17882==    by 0x50957BA: rb_iterate (vm_eval.c:1174)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4EE37A1: enum_find (enum.c:300)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0x19492EF5: fntype_mark (FunctionInfo.c:84)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x50957BA: rb_vm_ifunc_proc_new (internal.h:1135)
==17882==    by 0x50957BA: rb_iterate (vm_eval.c:1174)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4EE37A1: enum_find (enum.c:300)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xA77E6B7: ???
==17882==    by 0x670FC4F: ???
==17882==    by 0xA77E25F: ???
==17882==    by 0xA77E6B7: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0xA77E68F: ???
==17882==    by 0x665818F: ???
==17882==    by 0x1FFEFF904F: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xA77E6B7: ???
==17882==    by 0x670FC4F: ???
==17882==    by 0xA77E25F: ???
==17882==    by 0xA77E6B7: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0xA77E68F: ???
==17882==    by 0x665818F: ???
==17882==    by 0x1FFEFF904F: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F23E30: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F23E30: tbl_update (hash.c:1421)
==17882==    by 0x4F23E30: rb_hash_update_i (hash.c:3507)
==17882==    by 0x4F21E5C: hash_ar_foreach_iter (hash.c:1136)
==17882==    by 0x4F21E5C: ar_foreach_check (hash.c:786)
==17882==    by 0x4F21E5C: hash_foreach_call (hash.c:1205)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x4F250AD: rb_hash_foreach (hash.c:1229)
==17882==    by 0x4F2662E: rb_hash_update (hash.c:3593)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EE51AA: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EE51AA: rb_obj_write (ruby.h:1543)
==17882==    by 0x4EE51AA: enum_sort_by (enum.c:1164)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4E70EF6: rb_ary_sort_by_bang (array.c:2980)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EE51CA: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EE51CA: rb_obj_write (ruby.h:1543)
==17882==    by 0x4EE51CA: enum_sort_by (enum.c:1165)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4E70EF6: rb_ary_sort_by_bang (array.c:2980)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EEB4A5: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EEB4A5: rb_obj_write (ruby.h:1543)
==17882==    by 0x4EEB4A5: sort_by_i (enum.c:1041)
==17882==    by 0x5096649: vm_yield_with_cfunc.isra.368 (vm_insnhelper.c:2543)
==17882==    by 0x50A52C8: invoke_block_from_c_bh (vm.c:1115)
==17882==    by 0x50A52C8: vm_yield (vm.c:1155)
==17882==    by 0x50A52C8: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A52C8: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A52C8: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4EE4F38: enum_sort_by (enum.c:1167)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4EE4FCA: rb_obj_written (ruby.h:1526)
==17882==    by 0x4EE4FCA: rb_obj_write (ruby.h:1543)
==17882==    by 0x4EE4FCA: enum_sort_by (enum.c:1183)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4E70EF6: rb_ary_sort_by_bang (array.c:2980)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6EEF1: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6EEF1: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6EEF1: ary_memcpy0 (array.c:261)
==17882==    by 0x4E6EEF1: ary_memcpy (array.c:272)
==17882==    by 0x4E6EEF1: rb_ary_replace (array.c:3779)
==17882==    by 0x4E70F01: rb_ary_sort_by_bang (array.c:2981)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6D483: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6D483: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6D483: ary_memcpy0 (array.c:261)
==17882==    by 0x4E6D483: ary_memcpy (array.c:272)
==17882==    by 0x4E6D483: rb_ary_plus (array.c:3962)
==17882==    by 0x50A27B0: vm_opt_plus (vm_insnhelper.c:3392)
==17882==    by 0x50A27B0: vm_exec_core (insns.def:1048)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882==    by 0x50A98AF: vm_call0_body (vm_eval.c:186)
==17882==    by 0x50A98AF: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x19492714: invoke_callback (Function.c:756)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6D512: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6D512: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6D512: ary_memcpy0 (array.c:261)
==17882==    by 0x4E6D512: ary_memcpy (array.c:272)
==17882==    by 0x4E6D512: rb_ary_plus (array.c:3963)
==17882==    by 0x50A27B0: vm_opt_plus (vm_insnhelper.c:3392)
==17882==    by 0x50A27B0: vm_exec_core (insns.def:1048)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882==    by 0x50A98AF: vm_call0_body (vm_eval.c:186)
==17882==    by 0x50A98AF: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x19492714: invoke_callback (Function.c:756)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xB70: ???
==17882==    by 0xB70: ???
==17882==    by 0x665818F: ???
==17882==    by 0xB70: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xB70: ???
==17882==    by 0xB70: ???
==17882==    by 0x665818F: ???
==17882==    by 0xB70: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2C43C0BF: ???
==17882==    by 0xF900904020100C00: ???
==17882==    by 0x2C43C3B7: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x2C43C1D7: ???
==17882==    by 0x33: ???
==17882==    by 0x2C43C29F: ???
==17882==    by 0x1FFEFF8E3F: ???
==17882==    by 0x509569F: VM_ENV_BLOCK_HANDLER (vm_core.h:1267)
==17882==    by 0x509569F: VM_CF_BLOCK_HANDLER (vm.c:85)
==17882==    by 0x509569F: rb_iterate0 (vm_eval.c:1138)
==17882==    by 0x1FFFFFF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2C43C0BF: ???
==17882==    by 0xF900904020100C00: ???
==17882==    by 0x2C43C3B7: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x2C43C1D7: ???
==17882==    by 0x33: ???
==17882==    by 0x2C43C29F: ???
==17882==    by 0x1FFEFF8E3F: ???
==17882==    by 0x509569F: VM_ENV_BLOCK_HANDLER (vm_core.h:1267)
==17882==    by 0x509569F: VM_CF_BLOCK_HANDLER (vm.c:85)
==17882==    by 0x509569F: rb_iterate0 (vm_eval.c:1138)
==17882==    by 0x1FFFFFF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4EE4E85: enum_sort_by (enum.c:1161)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4E70EF6: rb_ary_sort_by_bang (array.c:2980)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4EE4E85: enum_sort_by (enum.c:1161)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x5095623: rb_iterate0 (vm_eval.c:1142)
==17882==    by 0x509580A: rb_block_call (vm_eval.c:1205)
==17882==    by 0x4E70EF6: rb_ary_sort_by_bang (array.c:2980)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xA7E84AF: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0xFEF7FFFFFFFFF7FE: ???
==17882==    by 0x1FFEFF90DF: ???
==17882==    by 0xE739CE7FDCE7B9CD: ???
==17882==    by 0x29322BC0: ???
==17882==    by 0x2C43C187: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x2C3BDE4F: ???
==17882==    by 0x547F78E52EB1C563: ???
==17882==    by 0x2C3BDE4F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x667AC6F: ???
==17882==    by 0x6559277: ???
==17882==    by 0xE739CE7FDCE7B9CD: ???
==17882==    by 0x50ABF5F: ??? (vm_eval.c:536)
==17882==    by 0x1FFEFF8E7F: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x2C3B4F7F: ???
==17882==    by 0x237FE8FA1E68B869: ???
==17882==    by 0x2C3B4F7F: ???
==17882==    by 0x25A83D8F: ???
==17882==    by 0x6558FCF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xFF: ???
==17882==    by 0xFB00904020920D12: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x97A7FDA: ???
==17882==    by 0x25DA0AC6: ???
==17882==    by 0x25DA0AC5: ???
==17882==    by 0x25DA0A4F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x97A7FDA: ???
==17882==    by 0x25DA0AC6: ???
==17882==    by 0x25DA0AC5: ???
==17882==    by 0x25DA0A4F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x25DA0A4F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x97A7F59: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x1FFF000687: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x6668607: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x25DA0A4F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x97A7F59: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x1FFF000687: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x6668607: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x337E: ???
==17882==    by 0xFB00904020920D12: ???
==17882==    by 0x5023337: st_general_foreach (st.c:1574)
==17882==    by 0x5023337: st_foreach_check (st.c:1661)
==17882==    by 0x4F21D85: hash_foreach_call (hash.c:1209)
==17882==    by 0x6: ???
==17882==    by 0x2: ???
==17882==    by 0x2F: ???
==17882==    by 0xCCCCCCCCCCCCCCCC: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x2C0: ???
==17882==    by 0x2792A88F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x28DB1DEF: ???
==17882==    by 0xFB00904020920D12: ???
==17882==    by 0x97A7F59: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x24DA241B: ???
==17882==    by 0x24DA239F: ???
==17882==    by 0xFF: ???
==17882==    by 0xFEF7FFFFFFFFF7FE: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x28DB1E69: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x28DB1E69: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5023337: st_general_foreach (st.c:1574)
==17882==    by 0x5023337: st_foreach_check (st.c:1661)
==17882==    by 0x4F21D85: hash_foreach_call (hash.c:1209)
==17882==    by 0x4F00DD4: rb_ensure (eval.c:1084)
==17882==    by 0x65587FF: ???
==17882==    by 0x6: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x5023337: st_general_foreach (st.c:1574)
==17882==    by 0x5023337: st_foreach_check (st.c:1661)
==17882==    by 0x4F21D85: hash_foreach_call (hash.c:1209)
==17882==    by 0x4F00DD4: rb_ensure (eval.c:1084)
==17882==    by 0x65587FF: ???
==17882==    by 0x6: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1CC8C: heap_prepare (gc.c:1738)
==17882==    by 0x4F1CC8C: heap_get_freeobj_from_next_freepage (gc.c:1750)
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1718B: rgengc_remembersetbits_set (gc.c:5927)
==17882==    by 0x4F1718B: rgengc_remember (gc.c:5963)
==17882==    by 0x4F1718B: rb_gc_writebarrier_remember (gc.c:6210)
==17882==    by 0x4F20554: ar_copy (hash.c:1023)
==17882==    by 0x4F2793A: rb_hash_replace (hash.c:2635)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882==    by 0x50A98AF: vm_call0_body (vm_eval.c:186)
==17882==    by 0x50A98AF: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F2463D: rb_hash_default_value (hash.c:1698)
==17882==    by 0x4F2463D: rb_hash_aref (hash.c:1731)
==17882==    by 0x50A0CB1: vm_opt_aref (vm_insnhelper.c:3672)
==17882==    by 0x50A0CB1: vm_exec_core (insns.def:1255)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Thread 8 ruby_thread_po*:
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x22585EE7: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x22585EE7: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F8A820: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F8A820: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F8A820: rb_obj_reveal (object.c:94)
==17882==    by 0xFB1FE13: zstream_detach_buffer (zlib.c:755)
==17882==    by 0xFB24D09: gzfile_write_raw (zlib.c:2364)
==17882==    by 0xFB24D09: gzfile_write (zlib.c:2685)
==17882==    by 0xFB24D09: rb_gzwriter_write (zlib.c:3622)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F8A820: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F8A820: rb_obj_write (ruby.h:1543)
==17882==    by 0x4F8A820: rb_obj_reveal (object.c:94)
==17882==    by 0xFB1FE13: zstream_detach_buffer (zlib.c:755)
==17882==    by 0xFB24D09: gzfile_write_raw (zlib.c:2364)
==17882==    by 0xFB24D09: gzfile_write (zlib.c:2685)
==17882==    by 0xFB24D09: rb_gzwriter_write (zlib.c:3622)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882== 
==17882== Thread 1:
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F14F73: rb_gc_force_recycle (gc.c:6350)
==17882==    by 0x4F376EA: io_fwrite (io.c:1509)
==17882==    by 0x4F39B08: io_write (io.c:1544)
==17882==    by 0x4F39B08: io_write_m (io.c:1765)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67DBC: rb_ary_each (array.c:2086)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A9A5B: vm_call0_body (vm_eval.c:127)
==17882==    by 0x50A9A5B: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Thread 8 ruby_thread_po*:
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E73D49: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E73D49: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E73D49: ary_memcpy0 (array.c:261)
==17882==    by 0x4E73D49: rb_ary_cat (array.c:1169)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50AE5F0: invoke_block (vm.c:1021)
==17882==    by 0x50AE5F0: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50AE5F0: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50AE5F0: vm_yield (vm.c:1155)
==17882==    by 0x50AE5F0: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50AE5F0: loop_i (vm_eval.c:1057)
==17882==    by 0x4F00893: rb_rescue2 (eval.c:935)
==17882== 
==17882== Thread 1:
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFF472F: ???
==17882==    by 0x4F0621E: rb_file_join (file.c:4615)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E736B8: rb_ary_collect_bang (array.c:3051)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFF472F: ???
==17882==    by 0x4F0621E: rb_file_join (file.c:4615)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E736B8: rb_ary_collect_bang (array.c:3051)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A6B45: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A6B45: invoke_block_from_c_proc (vm.c:1192)
==17882==    by 0x50A6B45: vm_invoke_proc (vm.c:1210)
==17882==    by 0x50A6B45: rb_vm_invoke_proc (vm.c:1231)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x6658007: ???
==17882==    by 0x1FFEFF84AF: ???
==17882==    by 0x9FDD5F7: ???
==17882==    by 0xA7544BF: ???
==17882==    by 0x9FDD617: ???
==17882==    by 0x6658007: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x6658007: ???
==17882==    by 0x1FFEFF84AF: ???
==17882==    by 0x9FDD5F7: ???
==17882==    by 0xA7544BF: ???
==17882==    by 0x9FDD617: ???
==17882==    by 0x6658007: ???
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2C43E2CF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2C43E2CF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2C3D167F: ???
==17882==    by 0x66E6D27: ???
==17882==    by 0x6558FEF: ???
==17882==    by 0x2006: ???
==17882==    by 0x655A94F: ???
==17882==    by 0x9E9D27F: ???
==17882==    by 0x6658077: ???
==17882==    by 0x4F1D07D: heap_get_freeobj (gc.c:1787)
==17882==    by 0x4F1D07D: newobj_slowpath (gc.c:1917)
==17882==    by 0x4F1D07D: newobj_slowpath_wb_protected (gc.c:1929)
==17882==    by 0x4E6D7C3: ary_alloc (array.c:647)
==17882==    by 0x4E6D7C3: ary_new (array.c:676)
==17882==    by 0x4E6D7C3: rb_ary_tmp_new_from_values (array.c:724)
==17882==    by 0x509D44D: vm_exec_core (insns.def:444)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2C6C0F7A: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2C6C0F7A: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2C43C227: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x1FFEFF871F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x1FFF000687: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x6668607: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xD1FE687: ???
==17882==    by 0x66E6507: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xD1FE687: ???
==17882==    by 0x66E6507: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xBD0: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xBD0: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2C43431F: ???
==17882==    by 0x655AA17: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x66E6507: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x655AA17: ???
==17882==    by 0x2C434207: ???
==17882==    by 0xB70: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2C43431F: ???
==17882==    by 0x655AA17: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x66E6507: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x655AA17: ???
==17882==    by 0x2C434207: ???
==17882==    by 0xB70: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFFB460: ???
==17882==    by 0x1FFEFFB45F: ???
==17882==    by 0x72: ???
==17882==    by 0x29BCD1CF: ???
==17882==    by 0x1FFEFFB47F: ???
==17882==    by 0x2352C8CF: ???
==17882==    by 0x1FFEFF979F: ???
==17882==    by 0x163FFFFFFF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFFB460: ???
==17882==    by 0x1FFEFFB45F: ???
==17882==    by 0x72: ???
==17882==    by 0x29BCD1CF: ???
==17882==    by 0x1FFEFFB47F: ???
==17882==    by 0x2352C8CF: ???
==17882==    by 0x1FFEFF979F: ???
==17882==    by 0x163FFFFFFF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xA9DF25F: ???
==17882==    by 0x4F21D85: hash_foreach_call (hash.c:1209)
==17882==    by 0x4F00DD4: rb_ensure (eval.c:1084)
==17882==    by 0x6558FCF: ???
==17882==    by 0x53AEBCF: ??? (in /usr/local/rvm/rubies/ruby-head-opt/lib/libruby.so.2.6.3)
==17882==    by 0x28A8411F: ???
==17882==    by 0x28A8411F: ???
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F7E8: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F7E8: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F7E8: ruby_xmalloc0 (gc.c:8318)
==17882==    by 0x4F1F7E8: ruby_xmalloc_body (gc.c:8327)
==17882==    by 0x4F1F7E8: ruby_xmalloc (gc.c:10155)
==17882==    by 0x5020F0C: st_init_table_with_size (st.c:605)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xA9DF25F: ???
==17882==    by 0x4F21D85: hash_foreach_call (hash.c:1209)
==17882==    by 0x257ECCCF: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x4F1758D: RVALUE_PAGE_OLD_UNCOLLECTIBLE_SET (gc.c:1180)
==17882==    by 0x4F1758D: gc_aging (gc.c:4558)
==17882==    by 0x4F1758D: gc_mark_ptr (gc.c:4576)
==17882==    by 0xD90: ???
==17882==    by 0x1E66FF67: ???
==17882==    by 0x50213F2: do_hash (st.c:325)
==17882==    by 0x50213F2: st_lookup (st.c:1083)
==17882==    by 0x1EAC4FCF: ???
==17882==    by 0x1E9C4FDF: ???
==17882==    by 0x17469E97: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x6559F4F: ???
==17882==    by 0x1028E72F: ???
==17882==    by 0x22220020: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x6559F4F: ???
==17882==    by 0x1028E72F: ???
==17882==    by 0x22220020: ???
==17882== 
==17882== Thread 8 ruby_thread_po*:
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x50AA95B: check_funcall_missing (vm_eval.c:380)
==17882==    by 0xFDE816A42209037F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x33: ???
==17882==    by 0x2BF2BA5F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x50AA95B: check_funcall_missing (vm_eval.c:380)
==17882==    by 0xFDE816A42209037F: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x33: ???
==17882==    by 0x2BF2BA5F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x5F5E0FF: ??? (in /lib/x86_64-linux-gnu/libm-2.19.so)
==17882==    by 0x141FBF7F: ???
==17882==    by 0x2BF2B917: ???
==17882==    by 0x2BF2B917: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x680B3FF: ???
==17882==    by 0x22585EE7: ???
==17882==    by 0x5D00BE7A: ???
==17882==    by 0x2CA1B017: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x5F5E0FF: ??? (in /lib/x86_64-linux-gnu/libm-2.19.so)
==17882==    by 0x141FBF7F: ???
==17882==    by 0x2BF2B917: ???
==17882==    by 0x2BF2B917: ???
==17882==    by 0xBBB7A368DF1964FF: ???
==17882==    by 0x680B3FF: ???
==17882==    by 0x22585EE7: ???
==17882==    by 0x5D00BE7A: ???
==17882==    by 0x2CA1B017: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F174BB: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174BB: gc_mark_ptr (gc.c:4574)
==17882==    by 0xFB202F0: zstream_mark (zlib.c:1139)
==17882==    by 0xFB202F0: gzfile_mark (zlib.c:2260)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects (gc.c:4876)
==17882==    by 0x4F1A90C: gc_mark_stacked_objects_all (gc.c:4916)
==17882==    by 0x4F1A90C: gc_marks_rest (gc.c:5796)
==17882==    by 0x4F1B092: gc_marks (gc.c:5856)
==17882==    by 0x4F1B092: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0x5031602: rb_str_buf_new (string.c:1333)
==17882==    by 0xFB249B9: zstream_append_input (zlib.c:832)
==17882==    by 0xFB249B9: zstream_run (zlib.c:1041)
==17882==    by 0xFB24CD9: gzfile_write (zlib.c:2682)
==17882==    by 0xFB24CD9: rb_gzwriter_write (zlib.c:3622)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x50A77E2: vm_call_method (vm_insnhelper.c:2397)
==17882== 
==17882== Thread 1:
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193C6: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193C6: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F23E18: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F23E18: tbl_update (hash.c:1422)
==17882==    by 0x4F23E18: rb_hash_update_i (hash.c:3507)
==17882==    by 0x4F21E5C: hash_ar_foreach_iter (hash.c:1136)
==17882==    by 0x4F21E5C: ar_foreach_check (hash.c:786)
==17882==    by 0x4F21E5C: hash_foreach_call (hash.c:1205)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x4F250AD: rb_hash_foreach (hash.c:1229)
==17882==    by 0x4F2662E: rb_hash_update (hash.c:3593)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67E54: rb_ary_reverse_each (array.c:2145)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4F23E18: rb_obj_written (ruby.h:1526)
==17882==    by 0x4F23E18: tbl_update (hash.c:1422)
==17882==    by 0x4F23E18: rb_hash_update_i (hash.c:3507)
==17882==    by 0x4F21E5C: hash_ar_foreach_iter (hash.c:1136)
==17882==    by 0x4F21E5C: ar_foreach_check (hash.c:786)
==17882==    by 0x4F21E5C: hash_foreach_call (hash.c:1205)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x4F250AD: rb_hash_foreach (hash.c:1229)
==17882==    by 0x4F2662E: rb_hash_update (hash.c:3593)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67E54: rb_ary_reverse_each (array.c:2145)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1711D: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F1711D: rb_gc_writebarrier_remember (gc.c:6204)
==17882==    by 0x4E701E1: ary_memcpy0 (array.c:254)
==17882==    by 0x4E701E1: rb_ary_splice (array.c:1846)
==17882==    by 0x4E7957F: ary_append (array.c:3973)
==17882==    by 0x4E7957F: rb_ary_concat (array.c:4022)
==17882==    by 0x4E796BA: rb_ary_concat_multi (array.c:4004)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67E54: rb_ary_reverse_each (array.c:2145)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1712A: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F1712A: rb_gc_writebarrier_remember (gc.c:6204)
==17882==    by 0x4E701E1: ary_memcpy0 (array.c:254)
==17882==    by 0x4E701E1: rb_ary_splice (array.c:1846)
==17882==    by 0x4E7957F: ary_append (array.c:3973)
==17882==    by 0x4E7957F: rb_ary_concat (array.c:4022)
==17882==    by 0x4E796BA: rb_ary_concat_multi (array.c:4004)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67E54: rb_ary_reverse_each (array.c:2145)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x96F0CFF: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x96F0CFF: ???
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F193D3: RVALUE_BLACK_P (gc.c:1293)
==17882==    by 0x4F193D3: gc_writebarrier_incremental (gc.c:6111)
==17882==    by 0x4E6FF2A: rb_obj_written (ruby.h:1526)
==17882==    by 0x4E6FF2A: rb_obj_write (ruby.h:1543)
==17882==    by 0x4E6FF2A: ary_memcpy0 (array.c:261)
==17882==    by 0x4E6FF2A: rb_ary_splice (array.c:1846)
==17882==    by 0x4E7957F: ary_append (array.c:3973)
==17882==    by 0x4E7957F: rb_ary_concat (array.c:4022)
==17882==    by 0x4E796BA: rb_ary_concat_multi (array.c:4004)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4E67E54: rb_ary_reverse_each (array.c:2145)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A41D7: rb_vm_exec (vm.c:1894)
==17882== 
==17882== Thread 8 ruby_thread_po*:
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F15050: invalidate_mark_stack_chunk (gc.c:4035)
==17882==    by 0x4F15050: invalidate_mark_stack (gc.c:4050)
==17882==    by 0x4F15050: rb_gc_force_recycle (gc.c:6351)
==17882==    by 0x4F376EA: io_fwrite (io.c:1509)
==17882==    by 0x4F39B08: io_write (io.c:1544)
==17882==    by 0x4F39B08: io_write_m (io.c:1765)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882==    by 0x4F00D79: rb_ensure (eval.c:1076)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E492: vm_exec_core (insns.def:750)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882==    by 0x50A51FC: invoke_iseq_block_from_c (vm.c:1092)
==17882==    by 0x50A51FC: invoke_block_from_c_bh (vm.c:1110)
==17882==    by 0x50A51FC: vm_yield (vm.c:1155)
==17882==    by 0x50A51FC: rb_yield_0 (vm_eval.c:978)
==17882==    by 0x50A51FC: rb_yield_1 (vm_eval.c:984)
==17882==    by 0x50A51FC: rb_yield (vm_eval.c:994)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F1A86B: gc_mark_stacked_objects (gc.c:4871)
==17882==    by 0x4F1A86B: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A86B: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1B5D9: gc_rest (gc.c:6679)
==17882==    by 0x4F1B8D7: garbage_collect (gc.c:6547)
==17882==    by 0x4F1B8D7: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0xFD3479D: deflateInit2_ (in /lib/x86_64-linux-gnu/libz.so.1.2.8)
==17882==    by 0xFB213E2: rb_gzwriter_initialize (zlib.c:3561)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F1A88C: gc_mark_stacked_objects (gc.c:4883)
==17882==    by 0x4F1A88C: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A88C: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1B5D9: gc_rest (gc.c:6679)
==17882==    by 0x4F1B8D7: garbage_collect (gc.c:6547)
==17882==    by 0x4F1B8D7: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0xFD3479D: deflateInit2_ (in /lib/x86_64-linux-gnu/libz.so.1.2.8)
==17882==    by 0xFB213E2: rb_gzwriter_initialize (zlib.c:3561)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F1A8B6: gc_mark_stacked_objects (gc.c:4883)
==17882==    by 0x4F1A8B6: gc_mark_stacked_objects_incremental (gc.c:4910)
==17882==    by 0x4F1A8B6: gc_marks_rest (gc.c:5792)
==17882==    by 0x4F1B5D9: gc_rest (gc.c:6679)
==17882==    by 0x4F1B8D7: garbage_collect (gc.c:6547)
==17882==    by 0x4F1B8D7: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0xFD3479D: deflateInit2_ (in /lib/x86_64-linux-gnu/libz.so.1.2.8)
==17882==    by 0xFB213E2: rb_gzwriter_initialize (zlib.c:3561)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2BD83AF7: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2BD83AF7: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2BF2BE17: ???
==17882==    by 0x680B3FF: ???
==17882==    by 0x505ABBC: rb_native_mutex_unlock (thread_pthread.c:413)
==17882==    by 0x505ABBC: gvl_acquire (thread_pthread.c:283)
==17882==    by 0x505ABBC: native_cond_sleep (thread_pthread.c:1279)
==17882==    by 0x505EA70: do_mutex_lock (thread_sync.c:238)
==17882==    by 0x2BF2BA97: ???
==17882==    by 0x67B2C: ???
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2BF2BE17: ???
==17882==    by 0x680B3FF: ???
==17882==    by 0x505ABBC: rb_native_mutex_unlock (thread_pthread.c:413)
==17882==    by 0x505ABBC: gvl_acquire (thread_pthread.c:283)
==17882==    by 0x505ABBC: native_cond_sleep (thread_pthread.c:1279)
==17882==    by 0x505EA70: do_mutex_lock (thread_sync.c:238)
==17882==    by 0x2BF2BD4F: ???
==17882==    by 0x67B2C: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F18F54: gc_marks_finish (gc.c:5648)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2BF2DC07: ???
==17882==    by 0xBDDE2FE1F8787B1B: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x2BB802B7: ???
==17882==    by 0x2B8EBC47: ???
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1900D: gc_marks_wb_unprotected_objects (gc.c:5605)
==17882==    by 0x4F1900D: gc_marks_finish (gc.c:5663)
==17882==    by 0x4F1A9DC: gc_marks_rest (gc.c:5793)
==17882==    by 0x4F1B5D9: gc_rest (gc.c:6679)
==17882==    by 0x4F1B8D7: garbage_collect (gc.c:6547)
==17882==    by 0x4F1B8D7: garbage_collect_with_gvl (gc.c:6811)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19A8F: gc_page_sweep (gc.c:3619)
==17882==    by 0x4F19A8F: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1B5A2: gc_sweep_rest (gc.c:3852)
==17882==    by 0x4F1B5A2: gc_rest (gc.c:6683)
==17882==    by 0x4F1B8D7: garbage_collect (gc.c:6547)
==17882==    by 0x4F1B8D7: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0xFD3479D: deflateInit2_ (in /lib/x86_64-linux-gnu/libz.so.1.2.8)
==17882==    by 0xFB213E2: rb_gzwriter_initialize (zlib.c:3561)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19AB3: gc_page_sweep (gc.c:3623)
==17882==    by 0x4F19AB3: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1B5A2: gc_sweep_rest (gc.c:3852)
==17882==    by 0x4F1B5A2: gc_rest (gc.c:6683)
==17882==    by 0x4F1B8D7: garbage_collect (gc.c:6547)
==17882==    by 0x4F1B8D7: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0xFD3479D: deflateInit2_ (in /lib/x86_64-linux-gnu/libz.so.1.2.8)
==17882==    by 0xFB213E2: rb_gzwriter_initialize (zlib.c:3561)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Conditional jump or move depends on uninitialised value(s)
==17882==    at 0x4F19CC7: gc_page_sweep (gc.c:3657)
==17882==    by 0x4F19CC7: gc_sweep_step (gc.c:3802)
==17882==    by 0x4F1B5A2: gc_sweep_rest (gc.c:3852)
==17882==    by 0x4F1B5A2: gc_rest (gc.c:6683)
==17882==    by 0x4F1B8D7: garbage_collect (gc.c:6547)
==17882==    by 0x4F1B8D7: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882==    by 0xFD3479D: deflateInit2_ (in /lib/x86_64-linux-gnu/libz.so.1.2.8)
==17882==    by 0xFB213E2: rb_gzwriter_initialize (zlib.c:3561)
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882==    by 0x4F8BACC: rb_class_s_new (object.c:2187)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509C83B: vm_exec_core (insns.def:765)
==17882==    by 0x50A394D: rb_vm_exec (vm.c:1885)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x20CBFA1F: ???
==17882==    by 0x2B8EBC1F: ???
==17882==    by 0x2B8EBC47: ???
==17882==    by 0x5: ???
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1B04C: rgengc_rememberset_mark (gc.c:6021)
==17882==    by 0x4F1B04C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B04C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B04C: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x505ABBC: rb_native_mutex_unlock (thread_pthread.c:413)
==17882==    by 0x505ABBC: gvl_acquire (thread_pthread.c:283)
==17882==    by 0x505ABBC: native_cond_sleep (thread_pthread.c:1279)
==17882==    by 0x505EA70: do_mutex_lock (thread_sync.c:238)
==17882==    by 0x2BF2BA47: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0x2BF2BAA7: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x505ABBC: rb_native_mutex_unlock (thread_pthread.c:413)
==17882==    by 0x505ABBC: gvl_acquire (thread_pthread.c:283)
==17882==    by 0x505ABBC: native_cond_sleep (thread_pthread.c:1279)
==17882==    by 0x505EA70: do_mutex_lock (thread_sync.c:238)
==17882==    by 0x6558FCF: ???
==17882==    by 0x428: ???
==17882==    by 0x2BF2BD4F: ???
==17882==    by 0x6558FDF: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882== 
==17882== Thread 1:
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2C2EFBFF: ???
==17882==    by 0xBDDE2FE1F8787B1B: ???
==17882==    by 0x28AB374F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x4F574EA: w_object (marshal.c:709)
==17882==    by 0x4F574EA: hash_each (marshal.c:493)
==17882==    by 0x2D33088F: ???
==17882==    by 0x2BB8027F: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1B04C: rgengc_rememberset_mark (gc.c:6021)
==17882==    by 0x4F1B04C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B04C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B04C: gc_start (gc.c:6658)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2C2EFBFF: ???
==17882==    by 0xBDDE2FE1F8787B1B: ???
==17882==    by 0x28AB374F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x4F574EA: w_object (marshal.c:709)
==17882==    by 0x4F574EA: hash_each (marshal.c:493)
==17882==    by 0x2D330947: ???
==17882==    by 0x2BB8027F: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1B04C: rgengc_rememberset_mark (gc.c:6021)
==17882==    by 0x4F1B04C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B04C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B04C: gc_start (gc.c:6658)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2624D9BF: ???
==17882==    by 0x6559277: ???
==17882==    by 0x7000004F21862: ???
==17882==    by 0x13: ???
==17882==    by 0x5CFE: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2624D9BF: ???
==17882==    by 0x6559277: ???
==17882==    by 0x7000004F21862: ???
==17882==    by 0x13: ???
==17882==    by 0x5CFE: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x665896F: ???
==17882==    by 0xBDDE2FE3F8F87B1D: ???
==17882==    by 0x1FFEFFD44F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x665896F: ???
==17882==    by 0xBDDE2FE3F8F87B1D: ???
==17882==    by 0x1FFEFFD44F: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x33: ???
==17882==    by 0xD030E77: ???
==17882==    by 0x508FB8F: ??? (vm_insnhelper.c:221)
==17882==    by 0x7: ???
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFFD93F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x33: ???
==17882==    by 0xD030E77: ???
==17882==    by 0x508FB8F: ??? (vm_insnhelper.c:221)
==17882==    by 0x7: ???
==17882==    by 0x6559277: ???
==17882==    by 0x1FFEFFD93F: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x1FFEFFD41F: ???
==17882==    by 0x10402000003FF: ???
==17882==    by 0x6559277: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x1FFF000687: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x6668607: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x1FFEFFD41F: ???
==17882==    by 0x10402000003FF: ???
==17882==    by 0x6559277: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x6558FCF: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x1FFF000687: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x4F17BD2: gc_mark_locations (gc.c:4180)
==17882==    by 0x4F17BD2: mark_stack_locations (gc.c:4408)
==17882==    by 0x4F17BD2: mark_current_machine_context (gc.c:4390)
==17882==    by 0x6668607: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x349A59EF: ???
==17882==    by 0xBFDE2FE3F8F87B1D: ???
==17882==    by 0x5035358: memcpy (string3.h:51)
==17882==    by 0x5035358: str_buf_cat (string.c:2772)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x349A59EF: ???
==17882==    by 0xBFDE2FE3F8F87B1D: ???
==17882==    by 0x5035358: memcpy (string3.h:51)
==17882==    by 0x5035358: str_buf_cat (string.c:2772)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0xB50EAEF: ???
==17882==    by 0xBFDE2FE3F8F87B1D: ???
==17882==    by 0x2C6D5FBF: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0xB50EAEF: ???
==17882==    by 0xBFDE2FE3F8F87B1D: ???
==17882==    by 0x2C6D5FBF: ???
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x50A9B34: vm_call0_cfunc_with_frame (vm_eval.c:86)
==17882==    by 0x50A9B34: vm_call0_cfunc (vm_eval.c:100)
==17882==    by 0x50A9B34: vm_call0_body (vm_eval.c:131)
==17882==    by 0x50A9B34: rb_vm_call0 (vm_eval.c:60)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x66584D7: ???
==17882==    by 0xAE7521F: ???
==17882==    by 0x8CB9A: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x66584D7: ???
==17882==    by 0xAE7521F: ???
==17882==    by 0x8CB9A: ???
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x2B1CFB3F: ???
==17882==    by 0xBFDE2FE3F8FD7B1D: ???
==17882==    by 0x4F32EDE: io_enc_str (io.c:2507)
==17882==    by 0x4F32EDE: read_all (io.c:2756)
==17882==    by 0x4F24063: rb_hash_stlike_update (hash.c:1393)
==17882==    by 0x4F24063: tbl_update (hash.c:1418)
==17882==    by 0x4F24063: rb_hash_aset (hash.c:2562)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1B04C: rgengc_rememberset_mark (gc.c:6021)
==17882==    by 0x4F1B04C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B04C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B04C: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x2B1CFB3F: ???
==17882==    by 0xBFDE2FE3F8FD7B1D: ???
==17882==    by 0x4F32EDE: io_enc_str (io.c:2507)
==17882==    by 0x4F32EDE: read_all (io.c:2756)
==17882==    by 0x4F24063: rb_hash_stlike_update (hash.c:1393)
==17882==    by 0x4F24063: tbl_update (hash.c:1418)
==17882==    by 0x4F24063: rb_hash_aset (hash.c:2562)
==17882==    by 0x4F17AEF: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F17AEF: mark_locations_array (gc.c:4168)
==17882==    by 0x5098749: rb_execution_context_mark (vm.c:2483)
==17882==    by 0x508CD80: thread_mark (vm.c:2506)
==17882==    by 0x4F1B04C: rgengc_rememberset_mark (gc.c:6021)
==17882==    by 0x4F1B04C: gc_marks_start (gc.c:5572)
==17882==    by 0x4F1B04C: gc_marks (gc.c:5854)
==17882==    by 0x4F1B04C: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174B7: gc_mark_set (gc.c:4455)
==17882==    by 0x4F174B7: gc_mark_ptr (gc.c:4574)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x503FD83: rb_str_resize (string.c:2720)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882== 
==17882== Use of uninitialised value of size 8
==17882==    at 0x4F174F0: gc_aging (gc.c:4551)
==17882==    by 0x4F174F0: gc_mark_ptr (gc.c:4576)
==17882==    by 0x509216B: vm_call_cfunc_with_frame (vm_insnhelper.c:1908)
==17882==    by 0x509216B: vm_call_cfunc (vm_insnhelper.c:1924)
==17882==    by 0x509E891: vm_exec_core (insns.def:879)
==17882==    by 0xFFFFFFFFFFFFFFFE: ???
==17882==    by 0x503FD83: rb_str_resize (string.c:2720)
==17882==    by 0x4F179EE: gc_mark_maybe (gc.c:4438)
==17882==    by 0x4F179EE: mark_locations_array.constprop.96 (gc.c:4168)
==17882==    by 0x4F17B82: mark_current_machine_context (gc.c:4388)
==17882==    by 0x4F18888: gc_mark_roots.constprop.93 (gc.c:4994)
==17882==    by 0x4F1B083: gc_marks_start (gc.c:5576)
==17882==    by 0x4F1B083: gc_marks (gc.c:5854)
==17882==    by 0x4F1B083: gc_start (gc.c:6658)
==17882==    by 0x4F1B8E1: garbage_collect (gc.c:6553)
==17882==    by 0x4F1B8E1: garbage_collect_with_gvl (gc.c:6811)
==17882==    by 0x4F1B9D4: objspace_malloc_increase.isra.76 (gc.c:8015)
==17882==    by 0x4F1F9DF: objspace_malloc_fixup (gc.c:8094)
==17882==    by 0x4F1F9DF: objspace_xmalloc0 (gc.c:8136)
==17882==    by 0x4F1F9DF: ruby_xmalloc2_body (gc.c:8341)
==17882==    by 0x4F1F9DF: ruby_xmalloc2 (gc.c:10165)
==17882== 
==17882== 
==17882== HEAP SUMMARY:
==17882==     in use at exit: 276,155,396 bytes in 1,223,253 blocks
==17882==   total heap usage: 49,623,916 allocs, 48,400,665 frees, 8,941,499,414 bytes allocated
==17882== 
==17882== LEAK SUMMARY:
==17882==    definitely lost: 44,867,353 bytes in 350,642 blocks
==17882==    indirectly lost: 59,793,471 bytes in 597,579 blocks
==17882==      possibly lost: 120,842,775 bytes in 267,265 blocks
==17882==    still reachable: 50,651,797 bytes in 7,767 blocks
==17882==                       of which reachable via heuristic:
==17882==                         newarray           : 208 bytes in 2 blocks
==17882==         suppressed: 0 bytes in 0 blocks
==17882== Rerun with --leak-check=full to see details of leaked memory
==17882== 
==17882== Use --track-origins=yes to see where uninitialised values come from
==17882== For lists of detected and suppressed errors, rerun with: -s
==17882== ERROR SUMMARY: 6870889 errors from 716 contexts (suppressed: 0 from 0)
